### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Utility.ASM
  commentId: T:AdvancedSceneManager.Utility.ASM
  id: ASM
  parent: AdvancedSceneManager.Utility
  children:
  - AdvancedSceneManager.Utility.ASM.Close(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.CloseCollection
  - AdvancedSceneManager.Utility.ASM.DiscardPreload
  - AdvancedSceneManager.Utility.ASM.FindCollections(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.FinishPreload
  - AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Utility.ASM.name
  - AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Utility.ASM.OpenOrReopen(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection(AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Utility.ASM.OpenSingle(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith(System.String)
  - AdvancedSceneManager.Utility.ASM.Preload(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.Quit
  - AdvancedSceneManager.Utility.ASM.Reopen(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.ReopenCollection
  - AdvancedSceneManager.Utility.ASM.Restart
  - AdvancedSceneManager.Utility.ASM.RestartCollection
  - AdvancedSceneManager.Utility.ASM.SetActiveScene(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene,System.Boolean)
  - AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  langs:
  - csharp
  - vb
  name: ASM
  nameWithType: ASM
  fullName: AdvancedSceneManager.Utility.ASM
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ASM
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 24
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: This is <xref href="AdvancedSceneManager.Utility.SceneHelper" data-throw-if-not-resolved="false"></xref>, but we don&apos;t want the script to show up in object picker to avoid confusion, using a different name seems to be the only way?
  example: []
  syntax:
    content: >-
      [AddComponentMenu("")]

      public class ASM : ScriptableObject
    content.vb: >-
      <AddComponentMenu("")>

      Public Class ASM
          Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  extensionMethods:
  - UnityEngine.ScriptableObject.AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  attributes:
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: ''
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Utility.ASM.name
  commentId: P:AdvancedSceneManager.Utility.ASM.name
  id: name
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: name
  nameWithType: ASM.name
  fullName: AdvancedSceneManager.Utility.ASM.name
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: name
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 29
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property name As String
  overload: AdvancedSceneManager.Utility.ASM.name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.SceneCollection)
  id: Open(AdvancedSceneManager.Models.SceneCollection)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Open(SceneCollection)
  nameWithType: ASM.Open(SceneCollection)
  fullName: AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.SceneCollection)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Open
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 49
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public void Open(SceneCollection collection)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    content.vb: Public Sub Open(collection As SceneCollection)
  overload: AdvancedSceneManager.Utility.ASM.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.ReopenCollection
  commentId: M:AdvancedSceneManager.Utility.ASM.ReopenCollection
  id: ReopenCollection
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: ReopenCollection()
  nameWithType: ASM.ReopenCollection()
  fullName: AdvancedSceneManager.Utility.ASM.ReopenCollection()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ReopenCollection
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 52
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Reopens the current collection.
  example: []
  syntax:
    content: public void ReopenCollection()
    content.vb: Public Sub ReopenCollection
  overload: AdvancedSceneManager.Utility.ASM.ReopenCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection(AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection(AdvancedSceneManager.Models.SceneCollection)
  id: OpenOrReopenCollection(AdvancedSceneManager.Models.SceneCollection)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: OpenOrReopenCollection(SceneCollection)
  nameWithType: ASM.OpenOrReopenCollection(SceneCollection)
  fullName: AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection(AdvancedSceneManager.Models.SceneCollection)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenOrReopenCollection
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 55
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Opens or reopens the collection, depending on whatever it is open or not.
  example: []
  syntax:
    content: public void OpenOrReopenCollection(SceneCollection collection)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    content.vb: Public Sub OpenOrReopenCollection(collection As SceneCollection)
  overload: AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.Scene)
  id: Open(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Open(Scene)
  nameWithType: ASM.Open(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.Open(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Open
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 58
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Opens a scene.
  remarks: Throws a <xref href="AdvancedSceneManager.Exceptions.OpenSceneException" data-throw-if-not-resolved="false"></xref> if the scene cannot be opened by the current collection.
  example: []
  syntax:
    content: public void Open(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub Open(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Reopen(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.Reopen(AdvancedSceneManager.Models.Scene)
  id: Reopen(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Reopen(Scene)
  nameWithType: ASM.Reopen(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.Reopen(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Reopen
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 61
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public void Reopen(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub Reopen(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.Reopen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.OpenSingle(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.OpenSingle(AdvancedSceneManager.Models.Scene)
  id: OpenSingle(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: OpenSingle(Scene)
  nameWithType: ASM.OpenSingle(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.OpenSingle(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenSingle
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 64
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Close existing scenes and open the specified one.
  remarks: This will close the current collection.
  example: []
  syntax:
    content: public void OpenSingle(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub OpenSingle(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.OpenSingle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Preload(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.Preload(AdvancedSceneManager.Models.Scene)
  id: Preload(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Preload(Scene)
  nameWithType: ASM.Preload(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.Preload(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Preload
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 67
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public void Preload(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub Preload(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.Preload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.FinishPreload
  commentId: M:AdvancedSceneManager.Utility.ASM.FinishPreload
  id: FinishPreload
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: FinishPreload()
  nameWithType: ASM.FinishPreload()
  fullName: AdvancedSceneManager.Utility.ASM.FinishPreload()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: FinishPreload
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 70
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finishes loading scene.
  example: []
  syntax:
    content: public void FinishPreload()
    content.vb: Public Sub FinishPreload
  overload: AdvancedSceneManager.Utility.ASM.FinishPreload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.DiscardPreload
  commentId: M:AdvancedSceneManager.Utility.ASM.DiscardPreload
  id: DiscardPreload
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: DiscardPreload()
  nameWithType: ASM.DiscardPreload()
  fullName: AdvancedSceneManager.Utility.ASM.DiscardPreload()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: DiscardPreload
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 73
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Closes the scene.
  example: []
  syntax:
    content: public void DiscardPreload()
    content.vb: Public Sub DiscardPreload
  overload: AdvancedSceneManager.Utility.ASM.DiscardPreload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.OpenOrReopen(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.OpenOrReopen(AdvancedSceneManager.Models.Scene)
  id: OpenOrReopen(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: OpenOrReopen(Scene)
  nameWithType: ASM.OpenOrReopen(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.OpenOrReopen(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenOrReopen
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 76
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Opens the scene if not open, otherwise it will be reopened.
  example: []
  syntax:
    content: public void OpenOrReopen(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub OpenOrReopen(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.OpenOrReopen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith(System.String)
  commentId: M:AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith(System.String)
  id: OpenWhereNameStartsWith(System.String)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: OpenWhereNameStartsWith(String)
  nameWithType: ASM.OpenWhereNameStartsWith(String)
  fullName: AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenWhereNameStartsWith
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 79
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Open all scenes that starts with the specified name.
  example: []
  syntax:
    content: public void OpenWhereNameStartsWith(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub OpenWhereNameStartsWith(name As String)
  overload: AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.CloseCollection
  commentId: M:AdvancedSceneManager.Utility.ASM.CloseCollection
  id: CloseCollection
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: CloseCollection()
  nameWithType: ASM.CloseCollection()
  fullName: AdvancedSceneManager.Utility.ASM.CloseCollection()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: CloseCollection
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 86
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Closes the current collection.
  example: []
  syntax:
    content: public void CloseCollection()
    content.vb: Public Sub CloseCollection
  overload: AdvancedSceneManager.Utility.ASM.CloseCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Close(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.Close(AdvancedSceneManager.Models.Scene)
  id: Close(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Close(Scene)
  nameWithType: ASM.Close(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.Close(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Close
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 89
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Closes a scene regardless of whatever it is associated with a collection, or is was opened as stand-alone.
  example: []
  syntax:
    content: public void Close(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub Close(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection)
  id: Toggle(AdvancedSceneManager.Models.SceneCollection)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Toggle(SceneCollection)
  nameWithType: ASM.Toggle(SceneCollection)
  fullName: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Toggle
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 95
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Toggles the collection.
  example: []
  syntax:
    content: public void Toggle(SceneCollection collection)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    content.vb: Public Sub Toggle(collection As SceneCollection)
  overload: AdvancedSceneManager.Utility.ASM.Toggle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  commentId: M:AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  id: Toggle(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Toggle(SceneCollection, Boolean)
  nameWithType: ASM.Toggle(SceneCollection, Boolean)
  fullName: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.SceneCollection, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Toggle
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 98
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Toggles the collection.
  example: []
  syntax:
    content: public void Toggle(SceneCollection collection, bool enabled)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    - id: enabled
      type: System.Boolean
    content.vb: Public Sub Toggle(collection As SceneCollection, enabled As Boolean)
  overload: AdvancedSceneManager.Utility.ASM.Toggle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene)
  id: Toggle(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Toggle(Scene)
  nameWithType: ASM.Toggle(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Toggle
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 101
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public void Toggle(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub Toggle(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.Toggle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene,System.Boolean)
  commentId: M:AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene,System.Boolean)
  id: Toggle(AdvancedSceneManager.Models.Scene,System.Boolean)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Toggle(Scene, Boolean)
  nameWithType: ASM.Toggle(Scene, Boolean)
  fullName: AdvancedSceneManager.Utility.ASM.Toggle(AdvancedSceneManager.Models.Scene, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Toggle
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 104
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public void Toggle(Scene scene, bool enabled)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    - id: enabled
      type: System.Boolean
    content.vb: Public Sub Toggle(scene As Scene, enabled As Boolean)
  overload: AdvancedSceneManager.Utility.ASM.Toggle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  id: IsOpen(AdvancedSceneManager.Models.SceneCollection)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: IsOpen(SceneCollection)
  nameWithType: ASM.IsOpen(SceneCollection)
  fullName: AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: IsOpen
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 109
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets whatever the collection is currently open.
  example: []
  syntax:
    content: public bool IsOpen(SceneCollection collection)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    return:
      type: System.Boolean
    content.vb: Public Function IsOpen(collection As SceneCollection) As Boolean
  overload: AdvancedSceneManager.Utility.ASM.IsOpen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.Scene)
  id: IsOpen(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: IsOpen(Scene)
  nameWithType: ASM.IsOpen(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.IsOpen(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: IsOpen
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 112
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets whatever the scene is open, either as part of a collection, or as stand-alone.
  example: []
  syntax:
    content: public IsOpenReturnValue IsOpen(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    return:
      type: AdvancedSceneManager.Models.IsOpenReturnValue
    content.vb: Public Function IsOpen(scene As Scene) As IsOpenReturnValue
  overload: AdvancedSceneManager.Utility.ASM.IsOpen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.SetActiveScene(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.SetActiveScene(AdvancedSceneManager.Models.Scene)
  id: SetActiveScene(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: SetActiveScene(Scene)
  nameWithType: ASM.SetActiveScene(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.SetActiveScene(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: SetActiveScene
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 115
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Sets a scene as the activate scene.
  example: []
  syntax:
    content: public void SetActiveScene(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Sub SetActiveScene(scene As Scene)
  overload: AdvancedSceneManager.Utility.ASM.SetActiveScene*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.FindCollections(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Utility.ASM.FindCollections(AdvancedSceneManager.Models.Scene)
  id: FindCollections(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: FindCollections(Scene)
  nameWithType: ASM.FindCollections(Scene)
  fullName: AdvancedSceneManager.Utility.ASM.FindCollections(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: FindCollections
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 118
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finds the collections that are associated with this <xref href="AdvancedSceneManager.Models.Scene" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public (SceneCollection collection, bool asLoadingScreen)[] FindCollections(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    return:
      type: System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Boolean}[]
    content.vb: Public Function FindCollections(scene As Scene) As(collection As SceneCollection, asLoadingScreen As Boolean)(Of SceneCollection , Boolean)()
  overload: AdvancedSceneManager.Utility.ASM.FindCollections*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Quit
  commentId: M:AdvancedSceneManager.Utility.ASM.Quit
  id: Quit
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Quit()
  nameWithType: ASM.Quit()
  fullName: AdvancedSceneManager.Utility.ASM.Quit()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Quit
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 121
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public void Quit()
    content.vb: Public Sub Quit
  overload: AdvancedSceneManager.Utility.ASM.Quit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.Restart
  commentId: M:AdvancedSceneManager.Utility.ASM.Restart
  id: Restart
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: Restart()
  nameWithType: ASM.Restart()
  fullName: AdvancedSceneManager.Utility.ASM.Restart()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Restart
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 124
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public void Restart()
    content.vb: Public Sub Restart
  overload: AdvancedSceneManager.Utility.ASM.Restart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.ASM.RestartCollection
  commentId: M:AdvancedSceneManager.Utility.ASM.RestartCollection
  id: RestartCollection
  parent: AdvancedSceneManager.Utility.ASM
  langs:
  - csharp
  - vb
  name: RestartCollection()
  nameWithType: ASM.RestartCollection()
  fullName: AdvancedSceneManager.Utility.ASM.RestartCollection()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: RestartCollection
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ASM.cs
    startLine: 127
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Reopens the current collection.
  example: []
  syntax:
    content: public void RestartCollection()
    content.vb: Public Sub RestartCollection
  overload: AdvancedSceneManager.Utility.ASM.RestartCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AdvancedSceneManager.Utility.SceneHelper
  commentId: T:AdvancedSceneManager.Utility.SceneHelper
  name: SceneHelper
  nameWithType: SceneHelper
  fullName: AdvancedSceneManager.Utility.SceneHelper
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEngine.ScriptableObject.AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  commentId: M:AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  parent: AdvancedSceneManager.Utility.ScriptableObjectUtility
  definition: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  name: Save()
  nameWithType: ScriptableObjectUtility.Save()
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save()
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  commentId: M:AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  isExternal: true
  name: Save(ScriptableObject)
  nameWithType: ScriptableObjectUtility.Save(ScriptableObject)
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.ScriptableObject
    name: ScriptableObject
    nameWithType: ScriptableObject
    fullName: UnityEngine.ScriptableObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.ScriptableObject
    name: ScriptableObject
    nameWithType: ScriptableObject
    fullName: UnityEngine.ScriptableObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility
  commentId: T:AdvancedSceneManager.Utility.ScriptableObjectUtility
  parent: AdvancedSceneManager.Utility
  name: ScriptableObjectUtility
  nameWithType: ScriptableObjectUtility
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.name*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.name
  name: name
  nameWithType: ASM.name
  fullName: AdvancedSceneManager.Utility.ASM.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AdvancedSceneManager.Utility.ASM.Open*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.Open
  name: Open
  nameWithType: ASM.Open
  fullName: AdvancedSceneManager.Utility.ASM.Open
- uid: AdvancedSceneManager.Models.SceneCollection
  commentId: T:AdvancedSceneManager.Models.SceneCollection
  parent: AdvancedSceneManager.Models
  name: SceneCollection
  nameWithType: SceneCollection
  fullName: AdvancedSceneManager.Models.SceneCollection
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
- uid: AdvancedSceneManager.Core.CollectionManager.Reopen(System.Boolean)
  commentId: M:AdvancedSceneManager.Core.CollectionManager.Reopen(System.Boolean)
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.ReopenCollection*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.ReopenCollection
  name: ReopenCollection
  nameWithType: ASM.ReopenCollection
  fullName: AdvancedSceneManager.Utility.ASM.ReopenCollection
- uid: AdvancedSceneManager.Models.SceneCollection.OpenOrReopen
  commentId: M:AdvancedSceneManager.Models.SceneCollection.OpenOrReopen
  parent: AdvancedSceneManager.Models.SceneCollection
  name: OpenOrReopen()
  nameWithType: SceneCollection.OpenOrReopen()
  fullName: AdvancedSceneManager.Models.SceneCollection.OpenOrReopen()
  spec.csharp:
  - uid: AdvancedSceneManager.Models.SceneCollection.OpenOrReopen
    name: OpenOrReopen
    nameWithType: SceneCollection.OpenOrReopen
    fullName: AdvancedSceneManager.Models.SceneCollection.OpenOrReopen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Models.SceneCollection.OpenOrReopen
    name: OpenOrReopen
    nameWithType: SceneCollection.OpenOrReopen
    fullName: AdvancedSceneManager.Models.SceneCollection.OpenOrReopen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection
  name: OpenOrReopenCollection
  nameWithType: ASM.OpenOrReopenCollection
  fullName: AdvancedSceneManager.Utility.ASM.OpenOrReopenCollection
- uid: AdvancedSceneManager.Core.CollectionManager.Open(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.CollectionManager.Open(AdvancedSceneManager.Models.Scene)
  isExternal: true
- uid: AdvancedSceneManager.Models.Scene
  commentId: T:AdvancedSceneManager.Models.Scene
  parent: AdvancedSceneManager.Models
  name: Scene
  nameWithType: Scene
  fullName: AdvancedSceneManager.Models.Scene
- uid: AdvancedSceneManager.Core.SceneManagerBase.Reopen(AdvancedSceneManager.Core.OpenSceneInfo)
  commentId: M:AdvancedSceneManager.Core.SceneManagerBase.Reopen(AdvancedSceneManager.Core.OpenSceneInfo)
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.Reopen*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.Reopen
  name: Reopen
  nameWithType: ASM.Reopen
  fullName: AdvancedSceneManager.Utility.ASM.Reopen
- uid: AdvancedSceneManager.Core.StandaloneManager.OpenSingle(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.StandaloneManager.OpenSingle(AdvancedSceneManager.Models.Scene)
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.OpenSingle*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.OpenSingle
  name: OpenSingle
  nameWithType: ASM.OpenSingle
  fullName: AdvancedSceneManager.Utility.ASM.OpenSingle
- uid: AdvancedSceneManager.Utility.ASM.Preload*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.Preload
  name: Preload
  nameWithType: ASM.Preload
  fullName: AdvancedSceneManager.Utility.ASM.Preload
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  commentId: M:AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.FinishPreload*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.FinishPreload
  name: FinishPreload
  nameWithType: ASM.FinishPreload
  fullName: AdvancedSceneManager.Utility.ASM.FinishPreload
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard
  commentId: M:AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.DiscardPreload*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.DiscardPreload
  name: DiscardPreload
  nameWithType: ASM.DiscardPreload
  fullName: AdvancedSceneManager.Utility.ASM.DiscardPreload
- uid: AdvancedSceneManager.Core.UtilitySceneManager.OpenOrReopen(AdvancedSceneManager.Models.Scene,AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Core.UtilitySceneManager.OpenOrReopen(AdvancedSceneManager.Models.Scene,AdvancedSceneManager.Models.SceneCollection)
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.OpenOrReopen*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.OpenOrReopen
  name: OpenOrReopen
  nameWithType: ASM.OpenOrReopen
  fullName: AdvancedSceneManager.Utility.ASM.OpenOrReopen
- uid: AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith
  name: OpenWhereNameStartsWith
  nameWithType: ASM.OpenWhereNameStartsWith
  fullName: AdvancedSceneManager.Utility.ASM.OpenWhereNameStartsWith
- uid: AdvancedSceneManager.Core.CollectionManager.Close
  commentId: M:AdvancedSceneManager.Core.CollectionManager.Close
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.CloseCollection*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.CloseCollection
  name: CloseCollection
  nameWithType: ASM.CloseCollection
  fullName: AdvancedSceneManager.Utility.ASM.CloseCollection
- uid: AdvancedSceneManager.Core.UtilitySceneManager.Close(AdvancedSceneManager.Core.OpenSceneInfo)
  commentId: M:AdvancedSceneManager.Core.UtilitySceneManager.Close(AdvancedSceneManager.Core.OpenSceneInfo)
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.Close*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.Close
  name: Close
  nameWithType: ASM.Close
  fullName: AdvancedSceneManager.Utility.ASM.Close
- uid: AdvancedSceneManager.Core.CollectionManager.Toggle(AdvancedSceneManager.Models.SceneCollection,System.Nullable{System.Boolean})
  commentId: M:AdvancedSceneManager.Core.CollectionManager.Toggle(AdvancedSceneManager.Models.SceneCollection,System.Nullable{System.Boolean})
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.Toggle*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.Toggle
  name: Toggle
  nameWithType: ASM.Toggle
  fullName: AdvancedSceneManager.Utility.ASM.Toggle
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Core.CollectionManager.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Core.CollectionManager.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.IsOpen*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.IsOpen
  name: IsOpen
  nameWithType: ASM.IsOpen
  fullName: AdvancedSceneManager.Utility.ASM.IsOpen
- uid: AdvancedSceneManager.Core.UtilitySceneManager.IsOpen(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.UtilitySceneManager.IsOpen(AdvancedSceneManager.Models.Scene)
  isExternal: true
- uid: AdvancedSceneManager.Models.IsOpenReturnValue
  commentId: T:AdvancedSceneManager.Models.IsOpenReturnValue
  parent: AdvancedSceneManager.Models
  name: IsOpenReturnValue
  nameWithType: IsOpenReturnValue
  fullName: AdvancedSceneManager.Models.IsOpenReturnValue
- uid: AdvancedSceneManager.Core.UtilitySceneManager.SetActive(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.UtilitySceneManager.SetActive(AdvancedSceneManager.Models.Scene)
  isExternal: true
- uid: AdvancedSceneManager.Utility.ASM.SetActiveScene*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.SetActiveScene
  name: SetActiveScene
  nameWithType: ASM.SetActiveScene
  fullName: AdvancedSceneManager.Utility.ASM.SetActiveScene
- uid: AdvancedSceneManager.Utility.ASM.FindCollections*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.FindCollections
  name: FindCollections
  nameWithType: ASM.FindCollections
  fullName: AdvancedSceneManager.Utility.ASM.FindCollections
- uid: System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Boolean}[]
  isExternal: true
  name: (T1, T2)<SceneCollection, Boolean>[]
  nameWithType: (T1, T2)<SceneCollection, Boolean>[]
  fullName: System.ValueTuple<AdvancedSceneManager.Models.SceneCollection, System.Boolean>[]
  nameWithType.vb: (T1, T2)(Of SceneCollection, Boolean)()
  fullName.vb: System.ValueTuple(Of AdvancedSceneManager.Models.SceneCollection, System.Boolean)()
  name.vb: (T1, T2)(Of SceneCollection, Boolean)()
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Models.SceneCollection
    name: SceneCollection
    nameWithType: SceneCollection
    fullName: AdvancedSceneManager.Models.SceneCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Models.SceneCollection
    name: SceneCollection
    nameWithType: SceneCollection
    fullName: AdvancedSceneManager.Models.SceneCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AdvancedSceneManager.Utility.ASM.Quit*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.Quit
  name: Quit
  nameWithType: ASM.Quit
  fullName: AdvancedSceneManager.Utility.ASM.Quit
- uid: AdvancedSceneManager.Utility.ASM.Restart*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.Restart
  name: Restart
  nameWithType: ASM.Restart
  fullName: AdvancedSceneManager.Utility.ASM.Restart
- uid: AdvancedSceneManager.Utility.ASM.RestartCollection*
  commentId: Overload:AdvancedSceneManager.Utility.ASM.RestartCollection
  name: RestartCollection
  nameWithType: ASM.RestartCollection
  fullName: AdvancedSceneManager.Utility.ASM.RestartCollection
