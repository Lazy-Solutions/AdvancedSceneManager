### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  commentId: T:AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  id: BuildEventsUtility
  parent: AdvancedSceneManager.Editor.Utility
  children:
  - AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onError
  - AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onErrorWithArgs
  - AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onWarningWithArgs
  - AdvancedSceneManager.Editor.Utility.BuildEventsUtility.postBuild
  - AdvancedSceneManager.Editor.Utility.BuildEventsUtility.preBuild
  langs:
  - csharp
  - vb
  name: BuildEventsUtility
  nameWithType: BuildEventsUtility
  fullName: AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: BuildEventsUtility
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
    startLine: 14
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: "\n<p>An utility for registering to build events.</p>\n<p>Only available in editor.</p>\n"
  example: []
  syntax:
    content: public static class BuildEventsUtility
    content.vb: Public Module BuildEventsUtility
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.preBuild
  commentId: E:AdvancedSceneManager.Editor.Utility.BuildEventsUtility.preBuild
  id: preBuild
  parent: AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  langs:
  - csharp
  - vb
  name: preBuild
  nameWithType: BuildEventsUtility.preBuild
  fullName: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.preBuild
  type: Event
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: preBuild
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
    startLine: 21
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Occurs before build.
  remarks: Note that changes may not be included in build.
  example: []
  syntax:
    content: public static event Action<BuildReport> preBuild
    return:
      type: System.Action{UnityEditor.Build.Reporting.BuildReport}
    content.vb: Public Shared Event preBuild As Action(Of BuildReport)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.postBuild
  commentId: E:AdvancedSceneManager.Editor.Utility.BuildEventsUtility.postBuild
  id: postBuild
  parent: AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  langs:
  - csharp
  - vb
  name: postBuild
  nameWithType: BuildEventsUtility.postBuild
  fullName: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.postBuild
  type: Event
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: postBuild
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
    startLine: 24
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Occurs after build.
  example: []
  syntax:
    content: public static event Action<BuildReport> postBuild
    return:
      type: System.Action{UnityEditor.Build.Reporting.BuildReport}
    content.vb: Public Shared Event postBuild As Action(Of BuildReport)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onError
  commentId: E:AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onError
  id: onError
  parent: AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  langs:
  - csharp
  - vb
  name: onError
  nameWithType: BuildEventsUtility.onError
  fullName: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onError
  type: Event
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: onError
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
    startLine: 27
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Occurs when an error occurs during build.
  example: []
  syntax:
    content: public static event Action onError
    return:
      type: System.Action
    content.vb: Public Shared Event onError As Action
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onErrorWithArgs
  commentId: E:AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onErrorWithArgs
  id: onErrorWithArgs
  parent: AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  langs:
  - csharp
  - vb
  name: onErrorWithArgs
  nameWithType: BuildEventsUtility.onErrorWithArgs
  fullName: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onErrorWithArgs
  type: Event
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: onErrorWithArgs
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
    startLine: 30
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Occurs when an error occurs during build.
  example: []
  syntax:
    content: public static event BuildEventsUtility.BuildError onErrorWithArgs
    return:
      type: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.BuildError
    content.vb: Public Shared Event onErrorWithArgs As BuildEventsUtility.BuildError
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onWarningWithArgs
  commentId: E:AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onWarningWithArgs
  id: onWarningWithArgs
  parent: AdvancedSceneManager.Editor.Utility.BuildEventsUtility
  langs:
  - csharp
  - vb
  name: onWarningWithArgs
  nameWithType: BuildEventsUtility.onWarningWithArgs
  fullName: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.onWarningWithArgs
  type: Event
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: onWarningWithArgs
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BuildEventsUtility.cs
    startLine: 33
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Occurs when an error occurs during build.
  example: []
  syntax:
    content: public static event BuildEventsUtility.BuildError onWarningWithArgs
    return:
      type: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.BuildError
    content.vb: Public Shared Event onWarningWithArgs As BuildEventsUtility.BuildError
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AdvancedSceneManager.Editor.Utility
  commentId: N:AdvancedSceneManager.Editor.Utility
  name: AdvancedSceneManager.Editor.Utility
  nameWithType: AdvancedSceneManager.Editor.Utility
  fullName: AdvancedSceneManager.Editor.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{UnityEditor.Build.Reporting.BuildReport}
  commentId: T:System.Action{UnityEditor.Build.Reporting.BuildReport}
  parent: System
  definition: System.Action`1
  name: Action<BuildReport>
  nameWithType: Action<BuildReport>
  fullName: System.Action<UnityEditor.Build.Reporting.BuildReport>
  nameWithType.vb: Action(Of BuildReport)
  fullName.vb: System.Action(Of UnityEditor.Build.Reporting.BuildReport)
  name.vb: Action(Of BuildReport)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEditor.Build.Reporting.BuildReport
    name: BuildReport
    nameWithType: BuildReport
    fullName: UnityEditor.Build.Reporting.BuildReport
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEditor.Build.Reporting.BuildReport
    name: BuildReport
    nameWithType: BuildReport
    fullName: UnityEditor.Build.Reporting.BuildReport
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.BuildError
  commentId: T:AdvancedSceneManager.Editor.Utility.BuildEventsUtility.BuildError
  parent: AdvancedSceneManager.Editor.Utility
  name: BuildEventsUtility.BuildError
  nameWithType: BuildEventsUtility.BuildError
  fullName: AdvancedSceneManager.Editor.Utility.BuildEventsUtility.BuildError
