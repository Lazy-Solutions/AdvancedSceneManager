### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Defaults.Quotes
  commentId: T:AdvancedSceneManager.Defaults.Quotes
  id: Quotes
  parent: AdvancedSceneManager.Defaults
  children:
  - AdvancedSceneManager.Defaults.Quotes.quoteList
  langs:
  - csharp
  - vb
  name: Quotes
  nameWithType: Quotes
  fullName: AdvancedSceneManager.Defaults.Quotes
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Defaults/Quote/Quotes.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Quotes
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Defaults/Quote/Quotes.cs
    startLine: 8
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Defaults
  summary: A list of quotes for <xref href="AdvancedSceneManager.Defaults.QuoteLoadingScreen" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class Quotes : MonoBehaviour'
    content.vb: >-
      Public Class Quotes
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - UnityEngine.Component.AdvancedSceneManager.Utility.SceneUtility.Scene
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Defaults.Quotes.quoteList
  commentId: F:AdvancedSceneManager.Defaults.Quotes.quoteList
  id: quoteList
  parent: AdvancedSceneManager.Defaults.Quotes
  langs:
  - csharp
  - vb
  name: quoteList
  nameWithType: Quotes.quoteList
  fullName: AdvancedSceneManager.Defaults.Quotes.quoteList
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Defaults/Quote/Quotes.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: quoteList
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Defaults/Quote/Quotes.cs
    startLine: 12
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Defaults
  summary: The list of quotes.
  example: []
  syntax:
    content: public List<Quotes.Quote> quoteList
    return:
      type: System.Collections.Generic.List{AdvancedSceneManager.Defaults.Quotes.Quote}
    content.vb: Public quoteList As List(Of Quotes.Quote)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AdvancedSceneManager.Defaults.QuoteLoadingScreen
  commentId: T:AdvancedSceneManager.Defaults.QuoteLoadingScreen
  name: QuoteLoadingScreen
  nameWithType: QuoteLoadingScreen
  fullName: AdvancedSceneManager.Defaults.QuoteLoadingScreen
- uid: AdvancedSceneManager.Defaults
  commentId: N:AdvancedSceneManager.Defaults
  name: AdvancedSceneManager.Defaults
  nameWithType: AdvancedSceneManager.Defaults
  fullName: AdvancedSceneManager.Defaults
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: UnityEngine.Component.AdvancedSceneManager.Utility.SceneUtility.Scene
  commentId: M:AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  parent: AdvancedSceneManager.Utility.SceneUtility
  definition: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  name: Scene()
  nameWithType: SceneUtility.Scene()
  fullName: AdvancedSceneManager.Utility.SceneUtility.Scene()
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  commentId: M:AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  isExternal: true
  name: Scene(Component)
  nameWithType: SceneUtility.Scene(Component)
  fullName: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.SceneUtility
  commentId: T:AdvancedSceneManager.Utility.SceneUtility
  parent: AdvancedSceneManager.Utility
  name: SceneUtility
  nameWithType: SceneUtility
  fullName: AdvancedSceneManager.Utility.SceneUtility
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Collections.Generic.List{AdvancedSceneManager.Defaults.Quotes.Quote}
  commentId: T:System.Collections.Generic.List{AdvancedSceneManager.Defaults.Quotes.Quote}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Quotes.Quote>
  nameWithType: List<Quotes.Quote>
  fullName: System.Collections.Generic.List<AdvancedSceneManager.Defaults.Quotes.Quote>
  nameWithType.vb: List(Of Quotes.Quote)
  fullName.vb: System.Collections.Generic.List(Of AdvancedSceneManager.Defaults.Quotes.Quote)
  name.vb: List(Of Quotes.Quote)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Defaults.Quotes.Quote
    name: Quotes.Quote
    nameWithType: Quotes.Quote
    fullName: AdvancedSceneManager.Defaults.Quotes.Quote
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Defaults.Quotes.Quote
    name: Quotes.Quote
    nameWithType: Quotes.Quote
    fullName: AdvancedSceneManager.Defaults.Quotes.Quote
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
