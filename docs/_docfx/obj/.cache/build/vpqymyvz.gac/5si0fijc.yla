<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="AdvancedSceneManager_Editor_ScenePropertyDrawer" data-uid="AdvancedSceneManager.Editor.ScenePropertyDrawer" class="text-break">Class ScenePropertyDrawer
  </h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">UnityEditor.GUIDrawer</span></div>
    <div class="level2"><span class="xref">UnityEditor.PropertyDrawer</span></div>
    <div class="level3"><span class="xref">ScenePropertyDrawer</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="AdvancedSceneManager.Editor.html">AdvancedSceneManager.Editor</a></h6>
  <h6><strong>Assembly</strong>: AdvancedSceneManager.Editor.dll</h6>
  <h5 id="AdvancedSceneManager_Editor_ScenePropertyDrawer_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[CustomPropertyDrawer(typeof(Scene))]
public class ScenePropertyDrawer : PropertyDrawer</code></pre>
  </div>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Editor_ScenePropertyDrawer_ObjectField_" data-uid="AdvancedSceneManager.Editor.ScenePropertyDrawer.ObjectField*"></a>
  <h4 id="AdvancedSceneManager_Editor_ScenePropertyDrawer_ObjectField__1_UnityEngine_Rect___0_System_Func_UnityEngine_Object_System_ValueTuple___0_System_Boolean___System_Type___" data-uid="AdvancedSceneManager.Editor.ScenePropertyDrawer.ObjectField``1(UnityEngine.Rect,``0,System.Func{UnityEngine.Object,System.ValueTuple{``0,System.Boolean}},System.Type[])">ObjectField&lt;T&gt;(Rect, T, Func&lt;Object, (T obj, Boolean didConvert)&gt;, Type[])</h4>
  <div class="markdown level1 summary"><p>Makes a object field. You can assign objects either by drag and drop objects or by selecting a object using the Object Picker, allows other types to be dragged onto the field and be converted to the target object..</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static T ObjectField&lt;T&gt;(Rect position, T obj, Func&lt;Object, (T obj, bool didConvert)&gt; convertAllowedType = null, params Type[] extraAllowedTypes)
    where T : Object</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.Rect</span></td>
        <td><span class="parametername">position</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">obj</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<span class="xref">UnityEngine.Object</span>, <span class="xref">System.ValueTuple</span>&lt;T, <span class="xref">System.Boolean</span>&gt;&gt;</td>
        <td><span class="parametername">convertAllowedType</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.type">Type</a>[]</td>
        <td><span class="parametername">extraAllowedTypes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Editor_ScenePropertyDrawer_OnGUI_" data-uid="AdvancedSceneManager.Editor.ScenePropertyDrawer.OnGUI*"></a>
  <h4 id="AdvancedSceneManager_Editor_ScenePropertyDrawer_OnGUI_UnityEngine_Rect_UnityEditor_SerializedProperty_UnityEngine_GUIContent_" data-uid="AdvancedSceneManager.Editor.ScenePropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">OnGUI(Rect, SerializedProperty, GUIContent)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.Rect</span></td>
        <td><span class="parametername">position</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">UnityEditor.SerializedProperty</span></td>
        <td><span class="parametername">property</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">UnityEngine.GUIContent</span></td>
        <td><span class="parametername">label</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)</span></div>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
