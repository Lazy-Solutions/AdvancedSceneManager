<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="AdvancedSceneManager_Core_CollectionManager" data-uid="AdvancedSceneManager.Core.CollectionManager" class="text-break">Class CollectionManager
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The manager for collection scenes.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">UnityEngine.Object</span></div>
    <div class="level2"><span class="xref">UnityEngine.ScriptableObject</span></div>
    <div class="level3"><span class="xref">AdvancedSceneManager.Core.SceneManagerBase</span></div>
    <div class="level4"><span class="xref">CollectionManager</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="AdvancedSceneManager.Core.html">AdvancedSceneManager.Core</a></h6>
  <h6><strong>Assembly</strong>: AdvancedSceneManager.dll</h6>
  <h5 id="AdvancedSceneManager_Core_CollectionManager_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class CollectionManager : SceneManagerBase, ISerializationCallbackReceiver</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Core_CollectionManager_remarks"><strong>Remarks</strong></h5>
  <div class="markdown level0 remarks"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Usage: <a class="xref" href="AdvancedSceneManager.SceneManager.html#AdvancedSceneManager_SceneManager_collection">collection</a>.</p>
</div>
  <h3 id="properties">Properties
  </h3>
  <a id="AdvancedSceneManager_Core_CollectionManager_current_" data-uid="AdvancedSceneManager.Core.CollectionManager.current*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_current" data-uid="AdvancedSceneManager.Core.CollectionManager.current">current</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The currently open collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneCollection current { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_CollectionManager_previous_" data-uid="AdvancedSceneManager.Core.CollectionManager.previous*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_previous" data-uid="AdvancedSceneManager.Core.CollectionManager.previous">previous</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The previously open collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneCollection previous { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Core_CollectionManager_CanOpen_" data-uid="AdvancedSceneManager.Core.CollectionManager.CanOpen*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_CanOpen_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Core.CollectionManager.CanOpen(AdvancedSceneManager.Models.Scene)">CanOpen(Scene)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever the scene can be opened by the current collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override bool CanOpen(Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">AdvancedSceneManager.Core.SceneManagerBase.CanOpen(AdvancedSceneManager.Models.Scene)</span></div>
  <a id="AdvancedSceneManager_Core_CollectionManager_Close_" data-uid="AdvancedSceneManager.Core.CollectionManager.Close*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_Close" data-uid="AdvancedSceneManager.Core.CollectionManager.Close">Close()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Closes the current collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Close()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_CollectionManager_Close_" data-uid="AdvancedSceneManager.Core.CollectionManager.Close*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_Close_AdvancedSceneManager_Core_OpenSceneInfo_" data-uid="AdvancedSceneManager.Core.CollectionManager.Close(AdvancedSceneManager.Core.OpenSceneInfo)">Close(OpenSceneInfo)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Closes a scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override SceneOperation Close(OpenSceneInfo scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">AdvancedSceneManager.Core.SceneManagerBase.Close(AdvancedSceneManager.Core.OpenSceneInfo)</span></div>
  <h5 id="AdvancedSceneManager_Core_CollectionManager_Close_AdvancedSceneManager_Core_OpenSceneInfo__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Throws a <a class="xref" href="AdvancedSceneManager.Exceptions.CloseSceneException.html">CloseSceneException</a> if the scene is not a part of the current collection.</p>
</div>
  <a id="AdvancedSceneManager_Core_CollectionManager_CloseMultiple_" data-uid="AdvancedSceneManager.Core.CollectionManager.CloseMultiple*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_CloseMultiple_AdvancedSceneManager_Core_OpenSceneInfo___" data-uid="AdvancedSceneManager.Core.CollectionManager.CloseMultiple(AdvancedSceneManager.Core.OpenSceneInfo[])">CloseMultiple(OpenSceneInfo[])</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Closes the scenes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override SceneOperation CloseMultiple(params OpenSceneInfo[] scenes)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a>[]</td>
        <td><span class="parametername">scenes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">AdvancedSceneManager.Core.SceneManagerBase.CloseMultiple(AdvancedSceneManager.Core.OpenSceneInfo[])</span></div>
  <h5 id="AdvancedSceneManager_Core_CollectionManager_CloseMultiple_AdvancedSceneManager_Core_OpenSceneInfo____remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Throws a <a class="xref" href="AdvancedSceneManager.Exceptions.CloseSceneException.html">CloseSceneException</a> if a scene is not a part of the current collection.</p>
</div>
  <a id="AdvancedSceneManager_Core_CollectionManager_IsOpen_" data-uid="AdvancedSceneManager.Core.CollectionManager.IsOpen*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_IsOpen_AdvancedSceneManager_Models_SceneCollection_" data-uid="AdvancedSceneManager.Core.CollectionManager.IsOpen(AdvancedSceneManager.Models.SceneCollection)">IsOpen(SceneCollection)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever the collection is currently open.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsOpen(SceneCollection collection)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_CollectionManager_OnAfterDeserialize2_" data-uid="AdvancedSceneManager.Core.CollectionManager.OnAfterDeserialize2*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_OnAfterDeserialize2" data-uid="AdvancedSceneManager.Core.CollectionManager.OnAfterDeserialize2">OnAfterDeserialize2()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override void OnAfterDeserialize2()</code></pre>
  </div>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">AdvancedSceneManager.Core.SceneManagerBase.OnAfterDeserialize2()</span></div>
  <a id="AdvancedSceneManager_Core_CollectionManager_Open_" data-uid="AdvancedSceneManager.Core.CollectionManager.Open*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_Open_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Core.CollectionManager.Open(AdvancedSceneManager.Models.Scene)">Open(Scene)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens a scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override SceneOperation&lt;OpenSceneInfo&gt; Open(Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation-1.html">SceneOperation</a>&lt;<a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)</span></div>
  <h5 id="AdvancedSceneManager_Core_CollectionManager_Open_AdvancedSceneManager_Models_Scene__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Throws a <a class="xref" href="AdvancedSceneManager.Exceptions.OpenSceneException.html">OpenSceneException</a> if the scene cannot be opened by the current collection.</p>
</div>
  <a id="AdvancedSceneManager_Core_CollectionManager_Open_" data-uid="AdvancedSceneManager.Core.CollectionManager.Open*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_Open_AdvancedSceneManager_Models_SceneCollection_System_Boolean_System_Boolean_" data-uid="AdvancedSceneManager.Core.CollectionManager.Open(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean)">Open(SceneCollection, Boolean, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Open(SceneCollection collection, bool ignoreLoadingScreen = false, bool force = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">ignoreLoadingScreen</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">force</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Open even if scene is tagged with DoNotOpen.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_CollectionManager_OpenMultiple_" data-uid="AdvancedSceneManager.Core.CollectionManager.OpenMultiple*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_OpenMultiple_AdvancedSceneManager_Models_Scene___" data-uid="AdvancedSceneManager.Core.CollectionManager.OpenMultiple(AdvancedSceneManager.Models.Scene[])">OpenMultiple(Scene[])</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens the scenes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override SceneOperation&lt;OpenSceneInfo[]&gt; OpenMultiple(params Scene[] scenes)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>[]</td>
        <td><span class="parametername">scenes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation-1.html">SceneOperation</a>&lt;<a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a>[]&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">AdvancedSceneManager.Core.SceneManagerBase.OpenMultiple(AdvancedSceneManager.Models.Scene[])</span></div>
  <h5 id="AdvancedSceneManager_Core_CollectionManager_OpenMultiple_AdvancedSceneManager_Models_Scene____remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Throws a <a class="xref" href="AdvancedSceneManager.Exceptions.OpenSceneException.html">OpenSceneException</a> if a scene cannot be opened by the current collection.</p>
</div>
  <a id="AdvancedSceneManager_Core_CollectionManager_Reopen_" data-uid="AdvancedSceneManager.Core.CollectionManager.Reopen*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_Reopen_System_Boolean_" data-uid="AdvancedSceneManager.Core.CollectionManager.Reopen(System.Boolean)">Reopen(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Reopens the current collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Reopen(bool reopenPersistent = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">reopenPersistent</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_CollectionManager_Toggle_" data-uid="AdvancedSceneManager.Core.CollectionManager.Toggle*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_Toggle_AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Boolean__" data-uid="AdvancedSceneManager.Core.CollectionManager.Toggle(AdvancedSceneManager.Models.SceneCollection,System.Nullable{System.Boolean})">Toggle(SceneCollection, Nullable&lt;Boolean&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Toggles the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Toggle(SceneCollection collection, bool? enabled = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.Boolean</span>&gt;</td>
        <td><span class="parametername">enabled</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">If null, collection will be toggled on or off depending on whatever collection is open or not. Pass a value to ensure that collection either open or closed.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="events">Events
  </h3>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_closed" data-uid="AdvancedSceneManager.Core.CollectionManager.closed">closed</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Called when a collection is closed.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public event Action&lt;SceneCollection&gt; closed</code></pre>
  </div>
  <h5 class="eventType">Event Type</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_opened" data-uid="AdvancedSceneManager.Core.CollectionManager.opened">opened</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.CollectionManager.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Called when a collection is opened.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public event Action&lt;SceneCollection&gt; opened</code></pre>
  </div>
  <h5 class="eventType">Event Type</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="operators">Operators
  </h3>
  <a id="AdvancedSceneManager_Core_CollectionManager_op_Implicit_" data-uid="AdvancedSceneManager.Core.CollectionManager.op_Implicit*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_op_Implicit_AdvancedSceneManager_Core_CollectionManager__AdvancedSceneManager_Models_SceneCollection" data-uid="AdvancedSceneManager.Core.CollectionManager.op_Implicit(AdvancedSceneManager.Core.CollectionManager)~AdvancedSceneManager.Models.SceneCollection">Implicit(CollectionManager to SceneCollection)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static implicit operator SceneCollection(CollectionManager manager)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.CollectionManager.html">CollectionManager</a></td>
        <td><span class="parametername">manager</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_CollectionManager_op_Implicit_" data-uid="AdvancedSceneManager.Core.CollectionManager.op_Implicit*"></a>
  <h4 id="AdvancedSceneManager_Core_CollectionManager_op_Implicit_AdvancedSceneManager_Core_CollectionManager__System_Boolean" data-uid="AdvancedSceneManager.Core.CollectionManager.op_Implicit(AdvancedSceneManager.Core.CollectionManager)~System.Boolean">Implicit(CollectionManager to Boolean)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static implicit operator bool (CollectionManager manager)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.CollectionManager.html">CollectionManager</a></td>
        <td><span class="parametername">manager</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="AdvancedSceneManager.Utility.ScriptableObjectUtility.html#AdvancedSceneManager_Utility_ScriptableObjectUtility_Save_UnityEngine_ScriptableObject_">ScriptableObjectUtility.Save(ScriptableObject)</a>
  </div>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
