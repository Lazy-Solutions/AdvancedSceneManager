<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="AdvancedSceneManager_Utility_LoadingScreenUtility" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility" class="text-break">Class LoadingScreenUtility
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Manager for loading screens.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">LoadingScreenUtility</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="AdvancedSceneManager.Utility.html">AdvancedSceneManager.Utility</a></h6>
  <h6><strong>Assembly</strong>: AdvancedSceneManager.dll</h6>
  <h5 id="AdvancedSceneManager_Utility_LoadingScreenUtility_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class LoadingScreenUtility</code></pre>
  </div>
  <h3 id="properties">Properties
  </h3>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_fade_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.fade*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_fade" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.fade">fade</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the default fade loading screen. Will be null if not included in build.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Scene fade { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsAnyLoadingScreenOpen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsAnyLoadingScreenOpen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsAnyLoadingScreenOpen" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsAnyLoadingScreenOpen">IsAnyLoadingScreenOpen</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if any loading screens are open.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsAnyLoadingScreenOpen { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_loadingScreens_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.loadingScreens*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_loadingScreens" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.loadingScreens">loadingScreens</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The currently open loading screens.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static ReadOnlyCollection&lt;LoadingScreen&gt; loadingScreens { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.ObjectModel.ReadOnlyCollection</span>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_CloseAll_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.CloseAll*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_CloseAll" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.CloseAll">CloseAll()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Hide all loading screens.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation CloseAll()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_CloseLoadingScreen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.CloseLoadingScreen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_CloseLoadingScreen_AdvancedSceneManager_Callbacks_LoadingScreen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.CloseLoadingScreen(AdvancedSceneManager.Callbacks.LoadingScreen)">CloseLoadingScreen(LoadingScreen)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Hide the loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation CloseLoadingScreen(LoadingScreen loadingScreen)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a></td>
        <td><span class="parametername">loadingScreen</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_CloseLoadingScreen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.CloseLoadingScreen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_CloseLoadingScreen_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.CloseLoadingScreen(AdvancedSceneManager.Models.Scene)">CloseLoadingScreen(Scene)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Hide the loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation CloseLoadingScreen(Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoAction_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoAction*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoAction_AdvancedSceneManager_Models_Scene_System_Action_System_Action_AdvancedSceneManager_Callbacks_LoadingScreen__" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoAction(AdvancedSceneManager.Models.Scene,System.Action,System.Action{AdvancedSceneManager.Callbacks.LoadingScreen})">DoAction(Scene, Action, Action&lt;LoadingScreen&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens loading screen, performs action and hides loading screen again.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation DoAction(Scene scene, Action action, Action&lt;LoadingScreen&gt; loadingScreenCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Action</span></td>
        <td><span class="parametername">action</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td><span class="parametername">loadingScreenCallback</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoAction_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoAction*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoAction_AdvancedSceneManager_Models_Scene_System_Func_System_Collections_IEnumerator__System_Action_AdvancedSceneManager_Callbacks_LoadingScreen__" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoAction(AdvancedSceneManager.Models.Scene,System.Func{System.Collections.IEnumerator},System.Action{AdvancedSceneManager.Callbacks.LoadingScreen})">DoAction(Scene, Func&lt;IEnumerator&gt;, Action&lt;LoadingScreen&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens loading screen, performs action and hides loading screen again.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation DoAction(Scene scene, Func&lt;IEnumerator&gt; coroutine, Action&lt;LoadingScreen&gt; loadingScreenCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<span class="xref">System.Collections.IEnumerator</span>&gt;</td>
        <td><span class="parametername">coroutine</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td><span class="parametername">loadingScreenCallback</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoAction_AdvancedSceneManager_Models_Scene_System_Func_System_Collections_IEnumerator__System_Action_AdvancedSceneManager_Callbacks_LoadingScreen___remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Throws <a class="xref" href="AdvancedSceneManager.Exceptions.OpenSceneException.html">OpenSceneException</a> if <code data-dev-comment-type="paramref" class="paramref">scene</code> is null.</p>
</div>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoActionWithFade_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoActionWithFade*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoActionWithFade_System_Action_System_Single_System_Nullable_UnityEngine_Color__" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoActionWithFade(System.Action,System.Single,System.Nullable{UnityEngine.Color})">DoActionWithFade(Action, Single, Nullable&lt;Color&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Fades screen out, performs action and fades in again.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation DoActionWithFade(Action action, float duration = 1F, Color? color = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span></td>
        <td><span class="parametername">action</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">duration</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">UnityEngine.Color</span>&gt;</td>
        <td><span class="parametername">color</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoActionWithFade_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoActionWithFade*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_DoActionWithFade_System_Func_System_Collections_IEnumerator__System_Single_System_Nullable_UnityEngine_Color__" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.DoActionWithFade(System.Func{System.Collections.IEnumerator},System.Single,System.Nullable{UnityEngine.Color})">DoActionWithFade(Func&lt;IEnumerator&gt;, Single, Nullable&lt;Color&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Fades screen out, performs action and fades in again.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation DoActionWithFade(Func&lt;IEnumerator&gt; action, float duration = 1F, Color? color = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<span class="xref">System.Collections.IEnumerator</span>&gt;</td>
        <td><span class="parametername">action</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">duration</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">UnityEngine.Color</span>&gt;</td>
        <td><span class="parametername">color</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_FadeIn_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.FadeIn*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_FadeIn_AdvancedSceneManager_Callbacks_LoadingScreen_System_Single_System_Nullable_UnityEngine_Color__" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.FadeIn(AdvancedSceneManager.Callbacks.LoadingScreen,System.Single,System.Nullable{UnityEngine.Color})">FadeIn(LoadingScreen, Single, Nullable&lt;Color&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Fades in the screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation FadeIn(LoadingScreen loadingScreen, float duration = 1F, Color? color = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a></td>
        <td><span class="parametername">loadingScreen</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">duration</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">UnityEngine.Color</span>&gt;</td>
        <td><span class="parametername">color</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_FadeOut_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.FadeOut*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_FadeOut_System_Single_System_Nullable_UnityEngine_Color__" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.FadeOut(System.Single,System.Nullable{UnityEngine.Color})">FadeOut(Single, Nullable&lt;Color&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Fades out the screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation&lt;LoadingScreen&gt; FadeOut(float duration = 1F, Color? color = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">duration</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">UnityEngine.Color</span>&gt;</td>
        <td><span class="parametername">color</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation-1.html">SceneOperation</a>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_FindLoadingScreen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.FindLoadingScreen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_FindLoadingScreen_AdvancedSceneManager_Models_SceneCollection_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.FindLoadingScreen(AdvancedSceneManager.Models.SceneCollection)">FindLoadingScreen(SceneCollection)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Find the loading screen that is associated with this collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Scene FindLoadingScreen(SceneCollection collection)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsLoadingScreenOpen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsLoadingScreenOpen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsLoadingScreenOpen_AdvancedSceneManager_Core_OpenSceneInfo_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsLoadingScreenOpen(AdvancedSceneManager.Core.OpenSceneInfo)">IsLoadingScreenOpen(OpenSceneInfo)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if this scene is a loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsLoadingScreenOpen(OpenSceneInfo scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsLoadingScreenOpen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsLoadingScreenOpen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsLoadingScreenOpen_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsLoadingScreenOpen(AdvancedSceneManager.Models.Scene)">IsLoadingScreenOpen(Scene)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if this scene is a loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsLoadingScreenOpen(Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsLoadingScreenOpen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsLoadingScreenOpen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_IsLoadingScreenOpen_UnityEngine_SceneManagement_Scene_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.IsLoadingScreenOpen(UnityEngine.SceneManagement.Scene)">IsLoadingScreenOpen(Scene)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if this scene is a loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsLoadingScreenOpen(Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.SceneManagement.Scene</span></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_OpenLoadingScreen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.OpenLoadingScreen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_OpenLoadingScreen_AdvancedSceneManager_Models_Scene_System_Nullable_System_Single__System_Action_AdvancedSceneManager_Callbacks_LoadingScreen__System_String_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.OpenLoadingScreen(AdvancedSceneManager.Models.Scene,System.Nullable{System.Single},System.Action{AdvancedSceneManager.Callbacks.LoadingScreen},System.String)">OpenLoadingScreen(Scene, Nullable&lt;Single&gt;, Action&lt;LoadingScreen&gt;, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Shows a loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation&lt;LoadingScreen&gt; OpenLoadingScreen(Scene scene, float? timeout = null, Action&lt;LoadingScreen&gt; callbackBeforeBegin = null, string typeName = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.Single</span>&gt;</td>
        <td><span class="parametername">timeout</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The time to wait after opening scene before cancelling load screen.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td><span class="parametername">callbackBeforeBegin</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">typeName</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Overrides the name of the type in the missing script message.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation-1.html">SceneOperation</a>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_OpenLoadingScreen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.OpenLoadingScreen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_OpenLoadingScreen_AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Single__System_Action_AdvancedSceneManager_Callbacks_LoadingScreen__" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.OpenLoadingScreen(AdvancedSceneManager.Models.SceneCollection,System.Nullable{System.Single},System.Action{AdvancedSceneManager.Callbacks.LoadingScreen})">OpenLoadingScreen(SceneCollection, Nullable&lt;Single&gt;, Action&lt;LoadingScreen&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Shows the loading screen associated with this collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation&lt;LoadingScreen&gt; OpenLoadingScreen(SceneCollection collection, float? timeout = null, Action&lt;LoadingScreen&gt; callbackBeforeBegin = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.Single</span>&gt;</td>
        <td><span class="parametername">timeout</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The time to wait after opening scene before cancelling load screen.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td><span class="parametername">callbackBeforeBegin</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation-1.html">SceneOperation</a>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_LoadingScreenUtility_OpenLoadingScreen_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.OpenLoadingScreen*"></a>
  <h4 id="AdvancedSceneManager_Utility_LoadingScreenUtility_OpenLoadingScreen__1_AdvancedSceneManager_Models_Scene_System_Nullable_System_Single__System_Action___0__System_String_" data-uid="AdvancedSceneManager.Utility.LoadingScreenUtility.OpenLoadingScreen``1(AdvancedSceneManager.Models.Scene,System.Nullable{System.Single},System.Action{``0},System.String)">OpenLoadingScreen&lt;T&gt;(Scene, Nullable&lt;Single&gt;, Action&lt;T&gt;, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Shows a loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneOperation&lt;T&gt; OpenLoadingScreen&lt;T&gt;(Scene scene, float? timeout = null, Action&lt;T&gt; callbackBeforeBegin = null, string typeName = null)
    where T : LoadingScreen</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.Single</span>&gt;</td>
        <td><span class="parametername">timeout</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The time to wait after opening scene before cancelling load screen.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Action</span>&lt;T&gt;</td>
        <td><span class="parametername">callbackBeforeBegin</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">typeName</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.LoadingScreenUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Overrides the name of the type in the missing script message.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation-1.html">SceneOperation</a>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
