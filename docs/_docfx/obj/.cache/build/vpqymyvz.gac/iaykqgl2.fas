<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width">
    <title>Scene operations | Advanced Scene Manager </title>
    <meta name="title" content="Scene operations | Advanced Scene Manager ">
    <meta name="generator" content="docfx 2.59.2.0">
    
    <link rel="shortcut icon" href="../resources/favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../guides/readme.html">
                <img id="logo" class="svg" src="..//resources/logo.png" alt="" style="width: 50px;height: 50px;">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list">Search Results for <span></span></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">
<h2 id="scene-operations" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="1" sourceendlinenumber="1">Scene operations</h2>

<p sourcefile="guides/SceneOperation.md" sourcestartlinenumber="3" sourceendlinenumber="3"><br></p>
<p sourcefile="guides/SceneOperation.md" sourcestartlinenumber="5" sourceendlinenumber="5">The scene operation is what executes the logic of Advanced Scene Manager. A scene operation takes lists of scenes to open and close, and a few other properties to modify behavior, and then generates and executes the <a href="SceneAction.html" data-raw-source="[actions](SceneAction.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="5" sourceendlinenumber="5">actions</a> when it is at front of the queue.</p>
<p sourcefile="guides/SceneOperation.md" sourcestartlinenumber="7" sourceendlinenumber="7">Process:</p>
<ol sourcefile="guides/SceneOperation.md" sourcestartlinenumber="8" sourceendlinenumber="19">
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="8" sourceendlinenumber="8">Queue and wait until we&#39;re up<br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="9" sourceendlinenumber="9">Create <a href="SceneAction.html" data-raw-source="[actions](SceneAction.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="9" sourceendlinenumber="9">actions</a><br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="10" sourceendlinenumber="10">Block input (cannot change properties anymore)<br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="11" sourceendlinenumber="11">Open <a href="LoadingScreen.html" data-raw-source="[loading screen](LoadingScreen.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="11" sourceendlinenumber="11">loading screen</a>, if one is defined<br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="12" sourceendlinenumber="12">Call <a href="Callbacks.html" data-raw-source="[collection closed callbacks](Callbacks.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="12" sourceendlinenumber="12">collection closed callbacks</a>, if applicable<br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="13" sourceendlinenumber="13">Run generated <a href="SceneAction.html" data-raw-source="[actions](SceneAction.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="13" sourceendlinenumber="13">actions</a>, one by one.<br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="14" sourceendlinenumber="14">Set active <a href="Scene.html" data-raw-source="[scene](Scene.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="14" sourceendlinenumber="14">scene</a>, if a <a href="SceneCollection.html" data-raw-source="[collection](SceneCollection.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="14" sourceendlinenumber="14">collection</a> was opened<br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="15" sourceendlinenumber="15">Call callbacks added through WithCallback methods<br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="16" sourceendlinenumber="16">Call <a href="Callbacks.html" data-raw-source="[collection open callbacks](Callbacks.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="16" sourceendlinenumber="16">collection open callbacks</a><br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="17" sourceendlinenumber="17">Hide <a href="LoadingScreen.html" data-raw-source="[loading screen](LoadingScreen.md)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="17" sourceendlinenumber="17">loading screen</a><br></li>
<li sourcefile="guides/SceneOperation.md" sourcestartlinenumber="18" sourceendlinenumber="19">Dequeue<br>
</br></li>
</ol>
<p sourcefile="guides/SceneOperation.md" sourcestartlinenumber="21" sourceendlinenumber="22">If you wish to use them yourself in code:<br>
The first method just returns <a href="../api/AdvancedSceneManager.Core.SceneOperation.html" data-raw-source="[SceneOperation](../api/AdvancedSceneManager.Core.SceneOperation.html)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="22" sourceendlinenumber="22">SceneOperation</a>, this allows you to yield it in a coroutine to wait until it is done.</p>
<p sourcefile="guides/SceneOperation.md" sourcestartlinenumber="24" sourceendlinenumber="24">The second method also returns a reference to the <a href="../api/AdvancedSceneManager.Core.OpenSceneInfo.html" data-raw-source="[opened scene](../api/AdvancedSceneManager.Core.OpenSceneInfo.html)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="24" sourceendlinenumber="24">opened scene</a>, which can be accessed (when done) through <a href="../api/AdvancedSceneManager.Core.SceneOperation-1.html#AdvancedSceneManager_Core_SceneOperation_1_value" data-raw-source="[SceneOperation.value](../api/AdvancedSceneManager.Core.SceneOperation-1.html#AdvancedSceneManager_Core_SceneOperation_1_value)" sourcefile="guides/SceneOperation.md" sourcestartlinenumber="24" sourceendlinenumber="24">SceneOperation.value</a>.</p>
<pre sourcefile="guides/SceneOperation.md" sourcestartlinenumber="26" sourceendlinenumber="40"><code class="lang-csharp">  //SceneOperation can be yielded in a coroutine to wait until it is finished.
  SceneOperation OpenSceneWithLoadingScreen(Scene scene, Scene loadingScreen) =&gt;
      SceneOperation.Add(SceneManager.standalone).
      Open(scene).
      WithLoadingScreen(loadingScreen).
      WithCallback(Callback.After(Phase.FinishLoad).Do(() =&gt; Debug.Log(&quot;loaded!&quot;)));

  SceneOperation&lt;OpenSceneInfo&gt; OpenSceneWithLoadingScreen2(Scene scene, Scene loadingScreen) =&gt;
      SceneOperation.Add(SceneManager.standalone, @return: o =&gt; o.openedScenes.FirstOrDefault()).
      Open(scene).
      WithLoadingScreen(loadingScreen).
      WithCallback(Callback.After(Phase.FinishLoad).Do(() =&gt; Debug.Log(&quot;loaded!&quot;)));
</code></pre></article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            <a href='https://assetstore.unity.com/packages/slug/174152'>Advanced Scene Manager</a> - <a href='https://assetstore.unity.com/publishers/48996'>Lazy Solutions</a>
            
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
