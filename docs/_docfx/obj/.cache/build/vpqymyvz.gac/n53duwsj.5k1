<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="AdvancedSceneManager_Models_SceneCollection" data-uid="AdvancedSceneManager.Models.SceneCollection" class="text-break">Class SceneCollection
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a> contains a list of <a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>, all of which are opened when the <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a> is opened (except for scenes tagged DoNotOpen).</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">UnityEngine.Object</span></div>
    <div class="level2"><span class="xref">UnityEngine.ScriptableObject</span></div>
    <div class="level3"><span class="xref">SceneCollection</span></div>
      <div class="level4"><a class="xref" href="AdvancedSceneManager.Models.SceneCollectionTemplate.html">SceneCollectionTemplate</a></div>
  </div>
  <div classs="implements">
    <h5>Implements</h5>
    <div><a class="xref" href="AdvancedSceneManager.Models.ISceneObject.html">ISceneObject</a></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="AdvancedSceneManager.Models.html">AdvancedSceneManager.Models</a></h6>
  <h6><strong>Assembly</strong>: AdvancedSceneManager.dll</h6>
  <h5 id="AdvancedSceneManager_Models_SceneCollection_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class SceneCollection : ScriptableObject, IReadOnlyList&lt;Scene&gt;, IReadOnlyCollection&lt;Scene&gt;, IEnumerable&lt;Scene&gt;, IEnumerable, ISceneObject, INotifyPropertyChanged</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_SceneCollection_remarks"><strong>Remarks</strong></h5>
  <div class="markdown level0 remarks"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only one <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a> can be open at a time.</p>
</div>
  <h3 id="properties">Properties
  </h3>
  <a id="AdvancedSceneManager_Models_SceneCollection_activeScene_" data-uid="AdvancedSceneManager.Models.SceneCollection.activeScene*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_activeScene" data-uid="AdvancedSceneManager.Models.SceneCollection.activeScene">activeScene</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Specifies the scene that should be activated after collection is opened.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Scene activeScene { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_Count_" data-uid="AdvancedSceneManager.Models.SceneCollection.Count*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Count" data-uid="AdvancedSceneManager.Models.SceneCollection.Count">Count</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Count { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_extraData_" data-uid="AdvancedSceneManager.Models.SceneCollection.extraData*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_extraData" data-uid="AdvancedSceneManager.Models.SceneCollection.extraData">extraData</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The extra data that is associated with this collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ScriptableObject extraData { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.ScriptableObject</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Models_SceneCollection_extraData_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Use <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html#AdvancedSceneManager_Models_SceneCollection_ExtraData__1">ExtraData&lt;T&gt;()</a> to cast it to the desired type.</p>
</div>
  <a id="AdvancedSceneManager_Models_SceneCollection_hasScenes_" data-uid="AdvancedSceneManager.Models.SceneCollection.hasScenes*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_hasScenes" data-uid="AdvancedSceneManager.Models.SceneCollection.hasScenes">hasScenes</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if this collection has any scenes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool hasScenes { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_isIncluded_" data-uid="AdvancedSceneManager.Models.SceneCollection.isIncluded*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_isIncluded" data-uid="AdvancedSceneManager.Models.SceneCollection.isIncluded">isIncluded</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever this collection should be included in build.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool isIncluded { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_IsReadOnly_" data-uid="AdvancedSceneManager.Models.SceneCollection.IsReadOnly*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_IsReadOnly" data-uid="AdvancedSceneManager.Models.SceneCollection.IsReadOnly">IsReadOnly</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Inherited from <span class="xref">System.Collections.Generic.IReadOnlyList&lt;T&gt;</span>, not to be confused with read-only functionality for collections (which does not currently exist, beyond locking plugin), this is just for enumeration.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsReadOnly { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_Item_" data-uid="AdvancedSceneManager.Models.SceneCollection.Item*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Item_System_Int32_" data-uid="AdvancedSceneManager.Models.SceneCollection.Item(System.Int32)">Item[Int32]</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Scene this[int index] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">index</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_loadingPriority_" data-uid="AdvancedSceneManager.Models.SceneCollection.loadingPriority*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_loadingPriority" data-uid="AdvancedSceneManager.Models.SceneCollection.loadingPriority">loadingPriority</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The thread priority to use when opening this collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public CollectionThreadPriority loadingPriority { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.CollectionThreadPriority.html">CollectionThreadPriority</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_loadingScreen_" data-uid="AdvancedSceneManager.Models.SceneCollection.loadingScreen*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_loadingScreen" data-uid="AdvancedSceneManager.Models.SceneCollection.loadingScreen">loadingScreen</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The loading screen that is associated with this collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Scene loadingScreen { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_loadingScreenUsage_" data-uid="AdvancedSceneManager.Models.SceneCollection.loadingScreenUsage*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_loadingScreenUsage" data-uid="AdvancedSceneManager.Models.SceneCollection.loadingScreenUsage">loadingScreenUsage</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Specifies what loading screen to use.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public LoadingScreenUsage loadingScreenUsage { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.LoadingScreenUsage.html">LoadingScreenUsage</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_name_" data-uid="AdvancedSceneManager.Models.SceneCollection.name*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_name" data-uid="AdvancedSceneManager.Models.SceneCollection.name">name</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string name { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Models_SceneCollection_name_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">See also: <a class="xref" href="AdvancedSceneManager.SceneManager.html#AdvancedSceneManager_SceneManager_assetManagement">assetManagement</a>.Rename().</p>
</div>
  <a id="AdvancedSceneManager_Models_SceneCollection_scenes_" data-uid="AdvancedSceneManager.Models.SceneCollection.scenes*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_scenes" data-uid="AdvancedSceneManager.Models.SceneCollection.scenes">scenes</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets the scenes in this collection, note that some might be null if no reference is added in scene manager window.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Scene[] scenes { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_startupOption_" data-uid="AdvancedSceneManager.Models.SceneCollection.startupOption*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_startupOption" data-uid="AdvancedSceneManager.Models.SceneCollection.startupOption">startupOption</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Specifies startup option.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public CollectionStartupOption startupOption { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.CollectionStartupOption.html">CollectionStartupOption</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_title_" data-uid="AdvancedSceneManager.Models.SceneCollection.title*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_title" data-uid="AdvancedSceneManager.Models.SceneCollection.title">title</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The title of this collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string title { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Models_SceneCollection_title_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">See also: <a class="xref" href="AdvancedSceneManager.SceneManager.html#AdvancedSceneManager_SceneManager_assetManagement">assetManagement</a>.Rename().</p>
</div>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Models_SceneCollection_AllScenePaths_" data-uid="AdvancedSceneManager.Models.SceneCollection.AllScenePaths*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_AllScenePaths" data-uid="AdvancedSceneManager.Models.SceneCollection.AllScenePaths">AllScenePaths()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets all scenes contained in this collection, including overriden loading screen, if set.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string[] AllScenePaths()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_AllScenes_" data-uid="AdvancedSceneManager.Models.SceneCollection.AllScenes*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_AllScenes" data-uid="AdvancedSceneManager.Models.SceneCollection.AllScenes">AllScenes()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets all scenes contained in this collection, including overriden loading screen, if set.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Scene[] AllScenes()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_Close_" data-uid="AdvancedSceneManager.Models.SceneCollection.Close*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Close" data-uid="AdvancedSceneManager.Models.SceneCollection.Close">Close()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Closes the current collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Close()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_CloseEvent_" data-uid="AdvancedSceneManager.Models.SceneCollection.CloseEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_CloseEvent" data-uid="AdvancedSceneManager.Models.SceneCollection.CloseEvent">CloseEvent()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Closes the current collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void CloseEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_SceneCollection_Contains_" data-uid="AdvancedSceneManager.Models.SceneCollection.Contains*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Contains_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Models.SceneCollection.Contains(AdvancedSceneManager.Models.Scene)">Contains(Scene)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Contains(Scene item)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">item</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_ExtraData_" data-uid="AdvancedSceneManager.Models.SceneCollection.ExtraData*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_ExtraData__1" data-uid="AdvancedSceneManager.Models.SceneCollection.ExtraData``1">ExtraData&lt;T&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Casts and returns <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html#AdvancedSceneManager_Models_SceneCollection_extraData">extraData</a> as the specified type. Returns null if invalid type.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public T ExtraData&lt;T&gt;()
    where T : ScriptableObject</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_Find_" data-uid="AdvancedSceneManager.Models.SceneCollection.Find*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Find_System_String_System_Boolean_" data-uid="AdvancedSceneManager.Models.SceneCollection.Find(System.String,System.Boolean)">Find(String, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a> with the specified name.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static SceneCollection Find(string title, bool onlyActiveProfile = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">title</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">onlyActiveProfile</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_FindProfile_" data-uid="AdvancedSceneManager.Models.SceneCollection.FindProfile*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_FindProfile" data-uid="AdvancedSceneManager.Models.SceneCollection.FindProfile">FindProfile()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Find the <a class="xref" href="AdvancedSceneManager.Models.Profile.html">Profile</a> that this collection is associated with.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Profile FindProfile()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Profile.html">Profile</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_GetEnumerator_" data-uid="AdvancedSceneManager.Models.SceneCollection.GetEnumerator*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_GetEnumerator" data-uid="AdvancedSceneManager.Models.SceneCollection.GetEnumerator">GetEnumerator()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerator&lt;Scene&gt; GetEnumerator()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerator</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_IsOpen_" data-uid="AdvancedSceneManager.Models.SceneCollection.IsOpen*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_IsOpen" data-uid="AdvancedSceneManager.Models.SceneCollection.IsOpen">IsOpen()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever the collection is currently open.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsOpen()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_OnPropertyChanged_" data-uid="AdvancedSceneManager.Models.SceneCollection.OnPropertyChanged*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_OnPropertyChanged" data-uid="AdvancedSceneManager.Models.SceneCollection.OnPropertyChanged">OnPropertyChanged()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Raises <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html#AdvancedSceneManager_Models_SceneCollection_PropertyChanged">PropertyChanged</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void OnPropertyChanged()</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_SceneCollection_OnPropertyChanged_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only available in editor.</p>
</div>
  <a id="AdvancedSceneManager_Models_SceneCollection_Open_" data-uid="AdvancedSceneManager.Models.SceneCollection.Open*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Open" data-uid="AdvancedSceneManager.Models.SceneCollection.Open">Open()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Open()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_OpenEvent_" data-uid="AdvancedSceneManager.Models.SceneCollection.OpenEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_OpenEvent" data-uid="AdvancedSceneManager.Models.SceneCollection.OpenEvent">OpenEvent()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void OpenEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_SceneCollection_OpenOrReopen_" data-uid="AdvancedSceneManager.Models.SceneCollection.OpenOrReopen*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_OpenOrReopen" data-uid="AdvancedSceneManager.Models.SceneCollection.OpenOrReopen">OpenOrReopen()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens or reopens the collection, depending on whatever it is open or not.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation OpenOrReopen()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_Reopen_" data-uid="AdvancedSceneManager.Models.SceneCollection.Reopen*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Reopen" data-uid="AdvancedSceneManager.Models.SceneCollection.Reopen">Reopen()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Reopens the current collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Reopen()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_ReopenEvent_" data-uid="AdvancedSceneManager.Models.SceneCollection.ReopenEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_ReopenEvent" data-uid="AdvancedSceneManager.Models.SceneCollection.ReopenEvent">ReopenEvent()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Reopens the current collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ReopenEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_SceneCollection_Tag_" data-uid="AdvancedSceneManager.Models.SceneCollection.Tag*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Tag_AdvancedSceneManager_Models_Scene_AdvancedSceneManager_Models_SceneTag_" data-uid="AdvancedSceneManager.Models.SceneCollection.Tag(AdvancedSceneManager.Models.Scene,AdvancedSceneManager.Models.SceneTag)">Tag(Scene, SceneTag)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneTag Tag(Scene scene, SceneTag setTo = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneTag.html">SceneTag</a></td>
        <td><span class="parametername">setTo</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneTag.html">SceneTag</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_Toggle_" data-uid="AdvancedSceneManager.Models.SceneCollection.Toggle*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Toggle" data-uid="AdvancedSceneManager.Models.SceneCollection.Toggle">Toggle()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Toggles the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Toggle()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_Toggle_" data-uid="AdvancedSceneManager.Models.SceneCollection.Toggle*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_Toggle_System_Boolean_" data-uid="AdvancedSceneManager.Models.SceneCollection.Toggle(System.Boolean)">Toggle(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Toggles the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Toggle(bool enabled)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">enabled</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Models_SceneCollection_ToggleEvent_" data-uid="AdvancedSceneManager.Models.SceneCollection.ToggleEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_ToggleEvent" data-uid="AdvancedSceneManager.Models.SceneCollection.ToggleEvent">ToggleEvent()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Toggles the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ToggleEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_SceneCollection_ToggleEvent_" data-uid="AdvancedSceneManager.Models.SceneCollection.ToggleEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_ToggleEvent_System_Boolean_" data-uid="AdvancedSceneManager.Models.SceneCollection.ToggleEvent(System.Boolean)">ToggleEvent(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Toggles the collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ToggleEvent(bool enabled)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">enabled</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="events">Events
  </h3>
  <h4 id="AdvancedSceneManager_Models_SceneCollection_PropertyChanged" data-uid="AdvancedSceneManager.Models.SceneCollection.PropertyChanged">PropertyChanged</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Occurs when a property changes on this collection.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public event PropertyChangedEventHandler PropertyChanged</code></pre>
  </div>
  <h5 class="eventType">Event Type</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.ComponentModel.PropertyChangedEventHandler</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Models_SceneCollection_PropertyChanged_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.SceneCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only available in editor.</p>
</div>
  <h3 id="implements">Implements</h3>
  <div>
      <a class="xref" href="AdvancedSceneManager.Models.ISceneObject.html">ISceneObject</a>
  </div>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="AdvancedSceneManager.Utility.SceneCollectionUtility.html#AdvancedSceneManager_Utility_SceneCollectionUtility_Find_System_Collections_Generic_IEnumerable_AdvancedSceneManager_Models_Scene__System_String_">SceneCollectionUtility.Find(IEnumerable&lt;Scene&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="AdvancedSceneManager.Utility.ScriptableObjectUtility.html#AdvancedSceneManager_Utility_ScriptableObjectUtility_Save_UnityEngine_ScriptableObject_">ScriptableObjectUtility.Save(ScriptableObject)</a>
  </div>
  <div>
      <a class="xref" href="AdvancedSceneManager.Editor.Utility.ListUtility.html#AdvancedSceneManager_Editor_Utility_ListUtility_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0_System_Int32__">ListUtility.ForEach&lt;T&gt;(IEnumerable&lt;T&gt;, Action&lt;T, Int32&gt;)</a>
  </div>
  <div>
      <a class="xref" href="AdvancedSceneManager.Editor.Utility.ListUtility.html#AdvancedSceneManager_Editor_Utility_ListUtility_Flatten__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Collections_Generic_IEnumerable___0___">ListUtility.Flatten&lt;T&gt;(IEnumerable&lt;T&gt;, Func&lt;T, IEnumerable&lt;T&gt;&gt;)</a>
  </div>
  <div>
      <a class="xref" href="AdvancedSceneManager.Editor.Utility.ListUtility.html#AdvancedSceneManager_Editor_Utility_ListUtility_Except__1_System_Collections_Generic_IEnumerable___0____0_">ListUtility.Except&lt;T&gt;(IEnumerable&lt;T&gt;, T)</a>
  </div>
  <div>
      <a class="xref" href="AdvancedSceneManager.Editor.Utility.ListUtility.html#AdvancedSceneManager_Editor_Utility_ListUtility_GroupConsecutive__1_System_Collections_Generic_IEnumerable___0__System_Func___0___0_System_Boolean__">ListUtility.GroupConsecutive&lt;T&gt;(IEnumerable&lt;T&gt;, Func&lt;T, T, Boolean&gt;)</a>
  </div>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
