<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="AdvancedSceneManager_Utility_SceneUtility" data-uid="AdvancedSceneManager.Utility.SceneUtility" class="text-break">Class SceneUtility
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">An utility class to perform actions on scenes.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">SceneUtility</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="AdvancedSceneManager.Utility.html">AdvancedSceneManager.Utility</a></h6>
  <h6><strong>Assembly</strong>: AdvancedSceneManager.dll</h6>
  <h5 id="AdvancedSceneManager_Utility_SceneUtility_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class SceneUtility</code></pre>
  </div>
  <h3 id="properties">Properties
  </h3>
  <a id="AdvancedSceneManager_Utility_SceneUtility_hasAnyScenes_" data-uid="AdvancedSceneManager.Utility.SceneUtility.hasAnyScenes*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_hasAnyScenes" data-uid="AdvancedSceneManager.Utility.SceneUtility.hasAnyScenes">hasAnyScenes</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if there are any scenes open that are not dynamically created, and not yet saved to disk.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool hasAnyScenes { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_isStartupScene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.isStartupScene*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_isStartupScene" data-uid="AdvancedSceneManager.Utility.SceneUtility.isStartupScene">isStartupScene</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if current, and only, scene is the startup scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool isStartupScene { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_sceneCount_" data-uid="AdvancedSceneManager.Utility.SceneUtility.sceneCount*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_sceneCount" data-uid="AdvancedSceneManager.Utility.SceneUtility.sceneCount">sceneCount</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int sceneCount { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Create_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Create*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Create_System_Action_AdvancedSceneManager_Models_Scene__AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Int32__System_Boolean_System_Boolean_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Create(System.Action{AdvancedSceneManager.Models.Scene},AdvancedSceneManager.Models.SceneCollection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">Create(Action&lt;Scene&gt;, SceneCollection, Nullable&lt;Int32&gt;, Boolean, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Creates a scene, using save prompt for path. Returns <span class="xref">null</span> if save dialog cancelled.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Create(Action&lt;Scene&gt; onCreated, SceneCollection collection = null, int? index = null, bool replaceIndex = false, bool save = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>&gt;</td>
        <td><span class="parametername">onCreated</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The collection to add the scene to.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.Int32</span>&gt;</td>
        <td><span class="parametername">index</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The index of the scene in <code data-dev-comment-type="paramref" class="paramref">collection</code>, no effect if <code data-dev-comment-type="paramref" class="paramref">collection</code> is <span class="xref">null</span>.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">replaceIndex</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Replaces the scene at the specified index, rather than insert it.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">save</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Save collection to disk.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Utility_SceneUtility_Create_System_Action_AdvancedSceneManager_Models_Scene__AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Int32__System_Boolean_System_Boolean__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only usable in editor</p>
</div>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Create_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Create*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Create_System_String_AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Int32__System_Boolean_System_Boolean_System_Boolean_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Create(System.String,AdvancedSceneManager.Models.SceneCollection,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean)">Create(String, SceneCollection, Nullable&lt;Int32&gt;, Boolean, Boolean, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Creates a scene at the specified path.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Scene Create(string path, SceneCollection collection = null, int? index = null, bool replaceIndex = false, bool save = true, bool createSceneScriptableObject = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">path</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The path that the scene should be saved to.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The collection to add the scene to.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.Int32</span>&gt;</td>
        <td><span class="parametername">index</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The index of the scene in <code data-dev-comment-type="paramref" class="paramref">collection</code>, no effect if <code data-dev-comment-type="paramref" class="paramref">collection</code> is <span class="xref">null</span>.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">replaceIndex</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Replaces the scene at the specified index, rather than insert it.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">save</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Save collection to disk.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">createSceneScriptableObject</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">If <span class="xref">false</span>, no <a class="xref" href="AdvancedSceneManager.Utility.SceneUtility.html#AdvancedSceneManager_Utility_SceneUtility_Scene_UnityEngine_GameObject_">Scene(GameObject)</a> <span class="xref">UnityEngine.ScriptableObject</span> will be created, scene also won&apos;t be added to <code data-dev-comment-type="paramref" class="paramref">collection</code>. Returns <span class="xref">null</span>.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Utility_SceneUtility_Create_System_String_AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Int32__System_Boolean_System_Boolean_System_Boolean__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only usable in editor</p>
</div>
  <a id="AdvancedSceneManager_Utility_SceneUtility_CreateDynamic_" data-uid="AdvancedSceneManager.Utility.SceneUtility.CreateDynamic*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_CreateDynamic_System_String_UnityEngine_SceneManagement_LocalPhysicsMode_" data-uid="AdvancedSceneManager.Utility.SceneUtility.CreateDynamic(System.String,UnityEngine.SceneManagement.LocalPhysicsMode)">CreateDynamic(String, LocalPhysicsMode)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Creates a scene at runtime, that is not saved to disk.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static OpenSceneInfo CreateDynamic(string name, LocalPhysicsMode localPhysicsMode = LocalPhysicsMode.None)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">UnityEngine.SceneManagement.LocalPhysicsMode</span></td>
        <td><span class="parametername">localPhysicsMode</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_CreateInCurrentFolder_" data-uid="AdvancedSceneManager.Utility.SceneUtility.CreateInCurrentFolder*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_CreateInCurrentFolder_System_Action_AdvancedSceneManager_Models_Scene__AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Int32__System_Boolean_System_Boolean_" data-uid="AdvancedSceneManager.Utility.SceneUtility.CreateInCurrentFolder(System.Action{AdvancedSceneManager.Models.Scene},AdvancedSceneManager.Models.SceneCollection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">CreateInCurrentFolder(Action&lt;Scene&gt;, SceneCollection, Nullable&lt;Int32&gt;, Boolean, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Creates a scene, using <span class="xref">UnityEditor.ProjectWindowUtil.CreateScene()</span>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void CreateInCurrentFolder(Action&lt;Scene&gt; onCreated, SceneCollection collection = null, int? index = null, bool replaceIndex = false, bool save = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>&gt;</td>
        <td><span class="parametername">onCreated</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The collection to add the scene to.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">System.Int32</span>&gt;</td>
        <td><span class="parametername">index</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The index of the scene in <code data-dev-comment-type="paramref" class="paramref">collection</code>, no effect if <code data-dev-comment-type="paramref" class="paramref">collection</code> is <span class="xref">null</span>.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">replaceIndex</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Replaces the scene at the specified index, rather than insert it.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">save</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Save collection to disk.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Utility_SceneUtility_CreateInCurrentFolder_System_Action_AdvancedSceneManager_Models_Scene__AdvancedSceneManager_Models_SceneCollection_System_Nullable_System_Int32__System_Boolean_System_Boolean__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only usable in editor</p>
</div>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Find_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Find*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Find_System_Func_AdvancedSceneManager_Models_Scene_System_Boolean__AdvancedSceneManager_Models_SceneCollection_AdvancedSceneManager_Models_Profile_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Find(System.Func{AdvancedSceneManager.Models.Scene,System.Boolean},AdvancedSceneManager.Models.SceneCollection,AdvancedSceneManager.Models.Profile)">Find(Func&lt;Scene, Boolean&gt;, SceneCollection, Profile)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Find scenes by predicate, in the specified collection or profile, if defined.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Scene&gt; Find(Func&lt;Scene, bool&gt; predicate, SceneCollection inCollection = null, Profile inProfile = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>, <span class="xref">System.Boolean</span>&gt;</td>
        <td><span class="parametername">predicate</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">inCollection</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Profile.html">Profile</a></td>
        <td><span class="parametername">inProfile</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Find_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Find*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Find_System_String_AdvancedSceneManager_Models_SceneCollection_AdvancedSceneManager_Models_Profile_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Find(System.String,AdvancedSceneManager.Models.SceneCollection,AdvancedSceneManager.Models.Profile)">Find(String, SceneCollection, Profile)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Find scenes by name, in the specified collection or profile, if defined.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Scene&gt; Find(string name, SceneCollection inCollection = null, Profile inProfile = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">inCollection</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Profile.html">Profile</a></td>
        <td><span class="parametername">inProfile</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_FindASMScene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.FindASMScene*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_FindASMScene_UnityEditor_SceneAsset_" data-uid="AdvancedSceneManager.Utility.SceneUtility.FindASMScene(UnityEditor.SceneAsset)">FindASMScene(SceneAsset)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the asm representation of this <span class="xref">UnityEditor.SceneAsset</span>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Scene FindASMScene(this SceneAsset scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEditor.SceneAsset</span></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Utility_SceneUtility_FindASMScene_UnityEditor_SceneAsset__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only available in editor.</p>
</div>
  <a id="AdvancedSceneManager_Utility_SceneUtility_FindOpen_" data-uid="AdvancedSceneManager.Utility.SceneUtility.FindOpen*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_FindOpen_System_Func_AdvancedSceneManager_Models_Scene_System_Boolean__" data-uid="AdvancedSceneManager.Utility.SceneUtility.FindOpen(System.Func{AdvancedSceneManager.Models.Scene,System.Boolean})">FindOpen(Func&lt;Scene, Boolean&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Find open scenes by predicate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Scene&gt; FindOpen(Func&lt;Scene, bool&gt; predicate)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>, <span class="xref">System.Boolean</span>&gt;</td>
        <td><span class="parametername">predicate</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_FindOpen_" data-uid="AdvancedSceneManager.Utility.SceneUtility.FindOpen*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_FindOpen_System_String_" data-uid="AdvancedSceneManager.Utility.SceneUtility.FindOpen(System.String)">FindOpen(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Find open scenes by name.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Scene&gt; FindOpen(string name)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_GetAllOpenUnityScenes_" data-uid="AdvancedSceneManager.Utility.SceneUtility.GetAllOpenUnityScenes*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_GetAllOpenUnityScenes" data-uid="AdvancedSceneManager.Utility.SceneUtility.GetAllOpenUnityScenes">GetAllOpenUnityScenes()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Get all open unity scenes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Scene&gt; GetAllOpenUnityScenes()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<span class="xref">UnityEngine.SceneManagement.Scene</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_MergeScenes_" data-uid="AdvancedSceneManager.Utility.SceneUtility.MergeScenes*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_MergeScenes_System_String___" data-uid="AdvancedSceneManager.Utility.SceneUtility.MergeScenes(System.String[])">MergeScenes(String[])</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Merges the scenes together, the first scene in the list will be the output scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void MergeScenes(params string[] scenes)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><span class="parametername">scenes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Utility_SceneUtility_MergeScenes_System_String____remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only available in editor.</p>
</div>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Move_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Move*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Move_UnityEngine_GameObject_AdvancedSceneManager_Core_OpenSceneInfo_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Move(UnityEngine.GameObject,AdvancedSceneManager.Core.OpenSceneInfo)">Move(GameObject, OpenSceneInfo)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Move(this GameObject obj, OpenSceneInfo scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.GameObject</span></td>
        <td><span class="parametername">obj</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Move_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Move*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Move_UnityEngine_GameObject_UnityEngine_SceneManagement_Scene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Move(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene)">Move(GameObject, Scene)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Move(this GameObject obj, Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.GameObject</span></td>
        <td><span class="parametername">obj</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">UnityEngine.SceneManagement.Scene</span></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_MoveToNewScene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.MoveToNewScene*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_MoveToNewScene_UnityEngine_GameObject___" data-uid="AdvancedSceneManager.Utility.SceneUtility.MoveToNewScene(UnityEngine.GameObject[])">MoveToNewScene(GameObject[])</h4>
  <div class="markdown level1 summary"><p>Moves the object to a new scene.</p>
<p>Only available in editor.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void MoveToNewScene(params GameObject[] objects)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.GameObject</span>[]</td>
        <td><span class="parametername">objects</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Remove_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Remove*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Remove_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Remove(AdvancedSceneManager.Models.Scene)">Remove(Scene)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Removes the <code data-dev-comment-type="paramref" class="paramref">scene</code> and its associated <span class="xref">UnityEditor.SceneAsset</span>, and removes any references to it from any <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Remove(Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Remove_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Remove*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Remove_System_String_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Remove(System.String)">Remove(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Removes the <span class="xref">UnityEditor.SceneAsset</span> at the specified path and its associated <a class="xref" href="AdvancedSceneManager.Utility.SceneUtility.html#AdvancedSceneManager_Utility_SceneUtility_Scene_UnityEngine_GameObject_">Scene(GameObject)</a>, and removes any references to it from any <a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Remove(string path)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">path</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Scene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Scene*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Scene_UnityEngine_Component_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)">Scene(Component)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets the runtime info of the associated scene to this <span class="xref">UnityEngine.Component</span>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static OpenSceneInfo Scene(this Component component)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.Component</span></td>
        <td><span class="parametername">component</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Scene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Scene*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Scene_UnityEngine_GameObject_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.GameObject)">Scene(GameObject)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets the runtime info of the associated scene to this <span class="xref">UnityEngine.GameObject</span>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static OpenSceneInfo Scene(this GameObject gameObject)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.GameObject</span></td>
        <td><span class="parametername">gameObject</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Utility_SceneUtility_Scene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Scene*"></a>
  <h4 id="AdvancedSceneManager_Utility_SceneUtility_Scene_UnityEngine_SceneManagement_Scene_" data-uid="AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.SceneManagement.Scene)">Scene(Scene)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Utility.SceneUtility.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets the ASM runtime info of this <span class="xref">UnityEngine.SceneManagement.Scene</span>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static OpenSceneInfo Scene(this Scene scene)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.SceneManagement.Scene</span></td>
        <td><span class="parametername">scene</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.OpenSceneInfo.html">OpenSceneInfo</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
