<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="AdvancedSceneManager_Callbacks_LoadingScreen" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen" class="text-break">Class LoadingScreen
  </h1>
  <div class="markdown level0 summary"><p>A class that contains callbacks for loading screens.</p>
<p>One instance must exist in a scene that specified as a loading screen.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">UnityEngine.Object</span></div>
    <div class="level2"><span class="xref">UnityEngine.Component</span></div>
    <div class="level3"><span class="xref">UnityEngine.Behaviour</span></div>
    <div class="level4"><span class="xref">UnityEngine.MonoBehaviour</span></div>
    <div class="level5"><span class="xref">LoadingScreen</span></div>
      <div class="level6"><a class="xref" href="AdvancedSceneManager.Callbacks.SplashScreen.html">SplashScreen</a></div>
      <div class="level6"><a class="xref" href="AdvancedSceneManager.Defaults.DefaultLoadingScreen.html">DefaultLoadingScreen</a></div>
      <div class="level6"><a class="xref" href="AdvancedSceneManager.Defaults.IconBounceLoadingScreen.html">IconBounceLoadingScreen</a></div>
      <div class="level6"><a class="xref" href="AdvancedSceneManager.Defaults.PressAnyButtonLoadingScreen.html">PressAnyButtonLoadingScreen</a></div>
      <div class="level6"><a class="xref" href="AdvancedSceneManager.Defaults.QuoteLoadingScreen.html">QuoteLoadingScreen</a></div>
      <div class="level6"><a class="xref" href="AdvancedSceneManager.Defaults.VideoLoadingScreen.html">VideoLoadingScreen</a></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="AdvancedSceneManager.Callbacks.html">AdvancedSceneManager.Callbacks</a></h6>
  <h6><strong>Assembly</strong>: AdvancedSceneManager.dll</h6>
  <h5 id="AdvancedSceneManager_Callbacks_LoadingScreen_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public abstract class LoadingScreen : MonoBehaviour</code></pre>
  </div>
  <h3 id="fields">Fields
  </h3>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_canvas" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.canvas">canvas</h4>
  <div class="markdown level1 summary"><p>The canvas that this loading screen uses.</p>
<p>This will automatically register canvas with <a class="xref" href="AdvancedSceneManager.Utility.CanvasSortOrderUtility.html">CanvasSortOrderUtility</a>, to automatically manage canvas sort order.</p>
<p>You probably want to set this through the inspector.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Tooltip(&quot;The canvas to automatically manage sort order for, optional.&quot;)]
public Canvas canvas</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">UnityEngine.Canvas</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_onDestroy" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.onDestroy">onDestroy</h4>
  <div class="markdown level1 summary"><p>Occurs when loading screen is destroyed.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Action&lt;LoadingScreen&gt; onDestroy</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html">LoadingScreen</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  <a id="AdvancedSceneManager_Callbacks_LoadingScreen_operation_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.operation*"></a>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_operation" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.operation">operation</h4>
  <div class="markdown level1 summary"><p>The current scene operation that this loading screen is associated with. May be null for the first few frames, before loading has actually begun.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation operation { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Callbacks_LoadingScreen_OnCancel_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnCancel*"></a>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_OnCancel_AdvancedSceneManager_Core_SceneOperation_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnCancel(AdvancedSceneManager.Core.SceneOperation)">OnCancel(SceneOperation)</h4>
  <div class="markdown level1 summary"><p>Called when the associated <a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a> is cancelled.</p>
<p>Note that <a class="xref" href="AdvancedSceneManager.Callbacks.LoadingScreen.html#AdvancedSceneManager_Callbacks_LoadingScreen_OnClose_AdvancedSceneManager_Core_SceneOperation_">OnClose(SceneOperation)</a> is not called.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public virtual void OnCancel(SceneOperation operation)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td><span class="parametername">operation</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Callbacks_LoadingScreen_OnClose_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnClose*"></a>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_OnClose_AdvancedSceneManager_Core_SceneOperation_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnClose(AdvancedSceneManager.Core.SceneOperation)">OnClose(SceneOperation)</h4>
  <div class="markdown level1 summary"><p>Called when the associated <a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a> has ended.</p>
<p>Use this callback to hide your loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public abstract IEnumerator OnClose(SceneOperation operation)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td><span class="parametername">operation</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.IEnumerator</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Callbacks_LoadingScreen_OnDestroy_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnDestroy*"></a>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_OnDestroy" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnDestroy">OnDestroy()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected virtual void OnDestroy()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Callbacks_LoadingScreen_OnOpen_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnOpen*"></a>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_OnOpen_AdvancedSceneManager_Core_SceneOperation_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnOpen(AdvancedSceneManager.Core.SceneOperation)">OnOpen(SceneOperation)</h4>
  <div class="markdown level1 summary"><p>Called when the associated <a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a> is about to start.</p>
<p>Use this callback to show your loading screen, the scene manager will wait until its done.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public abstract IEnumerator OnOpen(SceneOperation operation)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td><span class="parametername">operation</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.IEnumerator</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Callbacks_LoadingScreen_OnScenePhaseChanged_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnScenePhaseChanged*"></a>
  <h4 id="AdvancedSceneManager_Callbacks_LoadingScreen_OnScenePhaseChanged_AdvancedSceneManager_Core_SceneOperation_AdvancedSceneManager_Core_Phase_AdvancedSceneManager_Core_Phase_" data-uid="AdvancedSceneManager.Callbacks.LoadingScreen.OnScenePhaseChanged(AdvancedSceneManager.Core.SceneOperation,AdvancedSceneManager.Core.Phase,AdvancedSceneManager.Core.Phase)">OnScenePhaseChanged(SceneOperation, Phase, Phase)</h4>
  <div class="markdown level1 summary"><p>Called when the associated <a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a> is moving to a different phase.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public virtual void OnScenePhaseChanged(SceneOperation operation, Phase previousPhase, Phase nextPhase)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.SceneOperation.html">SceneOperation</a></td>
        <td><span class="parametername">operation</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.Phase.html">Phase</a></td>
        <td><span class="parametername">previousPhase</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Core.Phase.html">Phase</a></td>
        <td><span class="parametername">nextPhase</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="AdvancedSceneManager.Utility.SceneUtility.html#AdvancedSceneManager_Utility_SceneUtility_Scene_UnityEngine_Component_">SceneUtility.Scene(Component)</a>
  </div>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
