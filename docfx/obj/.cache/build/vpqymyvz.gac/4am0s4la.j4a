<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width">
    <title>Scene
   | Advanced Scene Manager </title>
    <meta name="title" content="Scene
   | Advanced Scene Manager ">
    <meta name="generator" content="docfx 2.59.2.0">
    
    <link rel="shortcut icon" href="../resources/favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../guides/readme.html">
                <img id="logo" class="svg" src="..//resources/logo.png" alt="" style="width: 50px;height: 50px;">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list">Search Results for <span></span></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="AdvancedSceneManager.Models.Scene">
  
  
  <h1 id="AdvancedSceneManager_Models_Scene" data-uid="AdvancedSceneManager.Models.Scene" class="text-break">Scene
  </h1>
  <div class="markdown level0 summary"><p>A <a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a> is a <a class="xref" href="https://docs.unity3d.com/ScriptReference/ScriptableObject.html">ScriptableObject</a> that represents a scene in Unity, and are automatically generated or updated when a scene is added, renamed, moved or removed.</p>
<p>The advantage of doing it this way is that we can actually create variables in script that refers to a scene rather than an arbitrary int or magic string. This also allows us to open scenes directly from an <a class="xref" href="https://docs.unity3d.com/ScriptReference/Events.UnityEvent.html">UnityEvent</a> and not have to use a proxy script.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></div>
    <div class="level1"><a class="xref" href="https://docs.unity3d.com/ScriptReference/Object.html">Object</a></div>
    <div class="level2"><a class="xref" href="https://docs.unity3d.com/ScriptReference/ScriptableObject.html">ScriptableObject</a></div>
    <div class="level3"><span class="xref">Scene</span></div>
  </div>
  <div classs="implements">
    <h5>Implements</h5>
    <div><a class="xref" href="AdvancedSceneManager.Models.ISceneObject.html">ISceneObject</a></div>
  </div>
  <h3 id="properties">Properties
  </h3>
  <a id="AdvancedSceneManager_Models_Scene_assetID_" data-uid="AdvancedSceneManager.Models.Scene.assetID*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_assetID" data-uid="AdvancedSceneManager.Models.Scene.assetID">assetID</h4>
  <div class="markdown level1 summary"><p>The id of the asset in the asset database.</p>
<p>Automatically updated.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string assetID { get; }</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_isActive_" data-uid="AdvancedSceneManager.Models.Scene.isActive*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_isActive" data-uid="AdvancedSceneManager.Models.Scene.isActive">isActive</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if this scene is currently active.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool isActive { get; }</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_isIncluded_" data-uid="AdvancedSceneManager.Models.Scene.isIncluded*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_isIncluded" data-uid="AdvancedSceneManager.Models.Scene.isIncluded">isIncluded</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever this scene is included in build, this would be if the scene is contained in a collection, or if it is used as a splash screen / loading screen.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool isIncluded { get; }</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_name_" data-uid="AdvancedSceneManager.Models.Scene.name*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_name" data-uid="AdvancedSceneManager.Models.Scene.name">name</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string name { get; }</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_Scene_name_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">See also: <a class="xref" href="AdvancedSceneManager.SceneManager.html#AdvancedSceneManager_SceneManager_assetManagement">assetManagement</a>.Rename().</p>
</div>
  <a id="AdvancedSceneManager_Models_Scene_path_" data-uid="AdvancedSceneManager.Models.Scene.path*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_path" data-uid="AdvancedSceneManager.Models.Scene.path">path</h4>
  <div class="markdown level1 summary"><p>The path to the scene file, relative to the project folder.</p>
<p>Automatically updated.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string path { get; }</code></pre>
  </div>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Models_Scene_Close_" data-uid="AdvancedSceneManager.Models.Scene.Close*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Close" data-uid="AdvancedSceneManager.Models.Scene.Close">Close()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Closes a scene regardless of whatever it is associated with a collection, or is was opened as stand-alone.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Close()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_CloseEvent_" data-uid="AdvancedSceneManager.Models.Scene.CloseEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_CloseEvent" data-uid="AdvancedSceneManager.Models.Scene.CloseEvent">CloseEvent()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void CloseEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Equals_" data-uid="AdvancedSceneManager.Models.Scene.Equals*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Equals_AdvancedSceneManager_Core_OpenSceneInfo_" data-uid="AdvancedSceneManager.Models.Scene.Equals(AdvancedSceneManager.Core.OpenSceneInfo)">Equals(OpenSceneInfo)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Equals(OpenSceneInfo scene)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Equals_" data-uid="AdvancedSceneManager.Models.Scene.Equals*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Equals_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Models.Scene.Equals(AdvancedSceneManager.Models.Scene)">Equals(Scene)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Equals(Scene scene)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Equals_" data-uid="AdvancedSceneManager.Models.Scene.Equals*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Equals_System_Nullable_UnityEngine_SceneManagement_Scene__" data-uid="AdvancedSceneManager.Models.Scene.Equals(System.Nullable{UnityEngine.SceneManagement.Scene})">Equals(Nullable&lt;Scene&gt;)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Equals(Scene? scene)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Equals_" data-uid="AdvancedSceneManager.Models.Scene.Equals*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Equals_System_Object_" data-uid="AdvancedSceneManager.Models.Scene.Equals(System.Object)">Equals(Object)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override bool Equals(object other)</code></pre>
  </div>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="https://docs.unity3d.com/ScriptReference/Object.Equals.html">Object.Equals(Object)</a></div>
  <a id="AdvancedSceneManager_Models_Scene_Equals_" data-uid="AdvancedSceneManager.Models.Scene.Equals*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Equals_UnityEditor_SceneAsset_" data-uid="AdvancedSceneManager.Models.Scene.Equals(UnityEditor.SceneAsset)">Equals(SceneAsset)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Equals(SceneAsset scene)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Equals_" data-uid="AdvancedSceneManager.Models.Scene.Equals*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Equals_UnityEngine_SceneManagement_Scene_" data-uid="AdvancedSceneManager.Models.Scene.Equals(UnityEngine.SceneManagement.Scene)">Equals(Scene)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Equals(Scene scene)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Find_" data-uid="AdvancedSceneManager.Models.Scene.Find*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Find_System_String_AdvancedSceneManager_Models_SceneCollection_AdvancedSceneManager_Models_Profile_" data-uid="AdvancedSceneManager.Models.Scene.Find(System.String,AdvancedSceneManager.Models.SceneCollection,AdvancedSceneManager.Models.Profile)">Find(String, SceneCollection, Profile)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the scene with the specified name.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Scene Find(string name, SceneCollection inCollection = null, Profile inProfile = null)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_FindAll_" data-uid="AdvancedSceneManager.Models.Scene.FindAll*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_FindAll_System_String_AdvancedSceneManager_Models_SceneCollection_AdvancedSceneManager_Models_Profile_" data-uid="AdvancedSceneManager.Models.Scene.FindAll(System.String,AdvancedSceneManager.Models.SceneCollection,AdvancedSceneManager.Models.Profile)">FindAll(String, SceneCollection, Profile)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the scenes with the specified name.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;Scene&gt; FindAll(string name, SceneCollection inCollection = null, Profile inProfile = null)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_FindCollections_" data-uid="AdvancedSceneManager.Models.Scene.FindCollections*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_FindCollections_AdvancedSceneManager_Models_Profile_" data-uid="AdvancedSceneManager.Models.Scene.FindCollections(AdvancedSceneManager.Models.Profile)">FindCollections(Profile)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds which collections that this scene is a part of.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public (SceneCollection collection, bool asLoadingScreen)[] FindCollections(Profile profile)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_FindCollections_" data-uid="AdvancedSceneManager.Models.Scene.FindCollections*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_FindCollections_System_Boolean_" data-uid="AdvancedSceneManager.Models.Scene.FindCollections(System.Boolean)">FindCollections(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds which collections that this scene is a part of.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public (SceneCollection collection, bool asLoadingScreen)[] FindCollections(bool allProfiles = false)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_FindObject_" data-uid="AdvancedSceneManager.Models.Scene.FindObject*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_FindObject__1" data-uid="AdvancedSceneManager.Models.Scene.FindObject``1">FindObject&lt;T&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the object in the heirarchy of this <a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public T FindObject&lt;T&gt;()
    where T : Component</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_Scene_FindObject__1_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only works if scene is loaded.</p>
</div>
  <a id="AdvancedSceneManager_Models_Scene_FindObjects_" data-uid="AdvancedSceneManager.Models.Scene.FindObjects*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_FindObjects__1" data-uid="AdvancedSceneManager.Models.Scene.FindObjects``1">FindObjects&lt;T&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the objects in the heirarchy of this <a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;T&gt; FindObjects&lt;T&gt;()
    where T : Component</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_Scene_FindObjects__1_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Only works if scene is loaded.</p>
</div>
  <a id="AdvancedSceneManager_Models_Scene_GetHashCode_" data-uid="AdvancedSceneManager.Models.Scene.GetHashCode*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_GetHashCode" data-uid="AdvancedSceneManager.Models.Scene.GetHashCode">GetHashCode()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override int GetHashCode()</code></pre>
  </div>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="https://docs.unity3d.com/ScriptReference/Object.GetHashCode.html">Object.GetHashCode()</a></div>
  <a id="AdvancedSceneManager_Models_Scene_GetOpenSceneInfo_" data-uid="AdvancedSceneManager.Models.Scene.GetOpenSceneInfo*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_GetOpenSceneInfo" data-uid="AdvancedSceneManager.Models.Scene.GetOpenSceneInfo">GetOpenSceneInfo()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Finds the first open instance of this <a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>, if it is open.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public OpenSceneInfo GetOpenSceneInfo()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_GetRootGameObjects_" data-uid="AdvancedSceneManager.Models.Scene.GetRootGameObjects*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_GetRootGameObjects" data-uid="AdvancedSceneManager.Models.Scene.GetRootGameObjects">GetRootGameObjects()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets the root game objects in this <a class="xref" href="AdvancedSceneManager.Models.Scene.html">Scene</a>, only works if scene is loaded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;GameObject&gt; GetRootGameObjects()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_IsOpen_" data-uid="AdvancedSceneManager.Models.Scene.IsOpen*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_IsOpen" data-uid="AdvancedSceneManager.Models.Scene.IsOpen">IsOpen()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever the scene is open, either as part of a collection, or as stand-alone.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IsOpenReturnValue IsOpen()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_OnOpen_" data-uid="AdvancedSceneManager.Models.Scene.OnOpen*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_OnOpen_System_Int32_System_Int32_" data-uid="AdvancedSceneManager.Models.Scene.OnOpen(System.Int32,System.Int32)">OnOpen(Int32, Int32)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[OnOpenAsset]
public static bool OnOpen(int instanceID, int _)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_OnPropertyChanged_" data-uid="AdvancedSceneManager.Models.Scene.OnPropertyChanged*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_OnPropertyChanged" data-uid="AdvancedSceneManager.Models.Scene.OnPropertyChanged">OnPropertyChanged()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void OnPropertyChanged()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Open_" data-uid="AdvancedSceneManager.Models.Scene.Open*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Open" data-uid="AdvancedSceneManager.Models.Scene.Open">Open()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation&lt;OpenSceneInfo&gt; Open()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_OpenEvent_" data-uid="AdvancedSceneManager.Models.Scene.OpenEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_OpenEvent" data-uid="AdvancedSceneManager.Models.Scene.OpenEvent">OpenEvent()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void OpenEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_OpenSingle_" data-uid="AdvancedSceneManager.Models.Scene.OpenSingle*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_OpenSingle" data-uid="AdvancedSceneManager.Models.Scene.OpenSingle">OpenSingle()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Close existing scenes and open the specified one.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation&lt;OpenSceneInfo&gt; OpenSingle()</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_Scene_OpenSingle_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">This will close the current collection.</p>
</div>
  <a id="AdvancedSceneManager_Models_Scene_OpenSingleEvent_" data-uid="AdvancedSceneManager.Models.Scene.OpenSingleEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_OpenSingleEvent" data-uid="AdvancedSceneManager.Models.Scene.OpenSingleEvent">OpenSingleEvent()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Close existing scenes and open the specified one.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void OpenSingleEvent()</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_Scene_OpenSingleEvent_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">This will close the current collection.</p>
</div>
  <a id="AdvancedSceneManager_Models_Scene_OpenWithLoadingScreenEvent_" data-uid="AdvancedSceneManager.Models.Scene.OpenWithLoadingScreenEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_OpenWithLoadingScreenEvent_AdvancedSceneManager_Models_Scene_" data-uid="AdvancedSceneManager.Models.Scene.OpenWithLoadingScreenEvent(AdvancedSceneManager.Models.Scene)">OpenWithLoadingScreenEvent(Scene)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void OpenWithLoadingScreenEvent(Scene loadingScene)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Preload_" data-uid="AdvancedSceneManager.Models.Scene.Preload*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Preload" data-uid="AdvancedSceneManager.Models.Scene.Preload">Preload()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Preloads the scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation&lt;PreloadedSceneHelper&gt; Preload()</code></pre>
  </div>
  <h5 id="AdvancedSceneManager_Models_Scene_Preload_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Use <a class="xref" href="AdvancedSceneManager.Utility.PreloadedSceneHelper.html#AdvancedSceneManager_Utility_PreloadedSceneHelper_FinishLoading">FinishLoading()</a> or <span class="xref">AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)</span> to finish loading scene.</p>
</div>
  <a id="AdvancedSceneManager_Models_Scene_Reopen_" data-uid="AdvancedSceneManager.Models.Scene.Reopen*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Reopen" data-uid="AdvancedSceneManager.Models.Scene.Reopen">Reopen()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Reopen a scene regardless of whatever it is associated with a collection, or is was opened as stand-alone.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation&lt;OpenSceneInfo&gt; Reopen()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_ReopenEvent_" data-uid="AdvancedSceneManager.Models.Scene.ReopenEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_ReopenEvent" data-uid="AdvancedSceneManager.Models.Scene.ReopenEvent">ReopenEvent()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ReopenEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_SetActiveScene_" data-uid="AdvancedSceneManager.Models.Scene.SetActiveScene*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_SetActiveScene" data-uid="AdvancedSceneManager.Models.Scene.SetActiveScene">SetActiveScene()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Sets a scene as the activate scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void SetActiveScene()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Toggle_" data-uid="AdvancedSceneManager.Models.Scene.Toggle*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Toggle" data-uid="AdvancedSceneManager.Models.Scene.Toggle">Toggle()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Toggles the scene open or closed, if the scene is part of the current collection, then the scene will be toggled within the collection, otherwise, it will be toggled as a stand-alone scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Toggle()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_Toggle_" data-uid="AdvancedSceneManager.Models.Scene.Toggle*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_Toggle_System_Boolean_" data-uid="AdvancedSceneManager.Models.Scene.Toggle(System.Boolean)">Toggle(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Models.Scene.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Toggles the scene open or closed, if the scene is part of the current collection, then the scene will be toggled within the collection, otherwise, it will be toggled as a stand-alone scene.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public SceneOperation Toggle(bool enabled)</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_ToggleEvent_" data-uid="AdvancedSceneManager.Models.Scene.ToggleEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_ToggleEvent" data-uid="AdvancedSceneManager.Models.Scene.ToggleEvent">ToggleEvent()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ToggleEvent()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Models_Scene_ToggleEvent_" data-uid="AdvancedSceneManager.Models.Scene.ToggleEvent*"></a>
  <h4 id="AdvancedSceneManager_Models_Scene_ToggleEvent_System_Boolean_" data-uid="AdvancedSceneManager.Models.Scene.ToggleEvent(System.Boolean)">ToggleEvent(Boolean)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ToggleEvent(bool enabled)</code></pre>
  </div>
  <h3 id="events">Events
  </h3>
  <h4 id="AdvancedSceneManager_Models_Scene_PropertyChanged" data-uid="AdvancedSceneManager.Models.Scene.PropertyChanged">PropertyChanged</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public event PropertyChangedEventHandler PropertyChanged</code></pre>
  </div>
  <h3 id="implements">Implements</h3>
  <div>
      <a class="xref" href="AdvancedSceneManager.Models.ISceneObject.html">ISceneObject</a>
  </div>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="AdvancedSceneManager.Utility.ScriptableObjectUtility.html#AdvancedSceneManager_Utility_ScriptableObjectUtility_Save_UnityEngine_ScriptableObject_">ScriptableObjectUtility.Save(ScriptableObject)</a>
  </div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            <a href='https://assetstore.unity.com/packages/slug/174152'>Advanced Scene Manager</a> - <a href='https://assetstore.unity.com/publishers/48996'>Lazy Solutions</a>
            
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
