<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
<h2 id="splash-screen" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="1" sourceendlinenumber="1">Splash screen</h2>

<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="3" sourceendlinenumber="3"><br></p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="5" sourceendlinenumber="5">A splash screen in ASM is implemented as a script inheriting</p>
<pre sourcefile="guides/SplashScreen.md" sourcestartlinenumber="6" sourceendlinenumber="8"><code class="lang-csharp">AdvancedSceneManager.Callbacks.SplashScreen
</code></pre><p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="9" sourceendlinenumber="9">and placing it in a dedicated scene, and assigning it in the ASM <a href="SceneManagerWindow.html#settings" data-raw-source="[settings](SceneManagerWindow.md#settings)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="9" sourceendlinenumber="9">settings</a>.</p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="11" sourceendlinenumber="11">One splash is provided out-of-the-box, which, while functional, is just intended as a reference, and can be found in &#39;AdvancedSceneManager/System/Defaults&#39;.</p>
<blockquote sourcefile="guides/SplashScreen.md" sourcestartlinenumber="13" sourceendlinenumber="14"><p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="13" sourceendlinenumber="14">ASM Splash Screen<br>
Displays the text &#39;Advanced Scene Manager&#39;, with fade animations.</p>
</blockquote>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="16" sourceendlinenumber="16">Splash screens in ASM are implemented as <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.html" data-raw-source="[MonoBehaviour](https://docs.unity3d.com/ScriptReference/MonoBehaviour.html)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="16" sourceendlinenumber="16">MonoBehaviour</a> (through SplashScreen class) with a callback that manages everything that should happen during the splash screen. Callback is waited for, and execution of ASM is stopped until callback done.</p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="18" sourceendlinenumber="18">This means that, in difference from Unity&#39;s own splash screens, you may do whatever you want during the splash screen, such as play video and/or download extra data from the internet or just load assets, like an initial loading screen.</p>
<h3 id="code" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="20" sourceendlinenumber="20">Code</h3>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="22" sourceendlinenumber="22">Create a script called &#39;CustomSplashScreen&#39; and make it inherit from SplashScreen, you may have to import &#39;AdvancedSceneManager.Callbacks&#39;.</p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="24" sourceendlinenumber="24">Remove default methods generated by unity, and override DisplaySplashScreen().</p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="26" sourceendlinenumber="26">In this guide we&#39;ll create a splash screen that fades in some text, then out, to do this we can create add public <a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/class-CanvasGroup.html" data-raw-source="[CanvasGroup](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/class-CanvasGroup.html)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="26" sourceendlinenumber="26">CanvasGroup</a> variable, and use the extension method Fade() provided by ASM. In between fade in and out, add a delay.</p>
<pre sourcefile="guides/SplashScreen.md" sourcestartlinenumber="28" sourceendlinenumber="39"><code class="lang-csharp">//using AdvancedSceneManager.Utility;

public CanvasGroup group;

public override IEnumerator DisplaySplashScreen()
{
    yield return group.Fade(1, 1);
    yield return new WaitForSecondsRealtime(4);
    yield return group.Fade(0, 1);
}
</code></pre><p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="41" sourceendlinenumber="41">This will fade the splash screen in, wait for 4 seconds, and then fade out again, and then ASM will continue with <a href="SceneManager.html#runtime" data-raw-source="[startup](SceneManager.md#runtime)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="41" sourceendlinenumber="41">startup</a>.</p>
<h3 id="ui" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="43" sourceendlinenumber="43">UI</h3>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="45" sourceendlinenumber="45">Create a new scene called &#39;CustomSplashScreen&#39;. Add a <a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/UICanvas.html" data-raw-source="[Canvas](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/UICanvas.html)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="45" sourceendlinenumber="45">Canvas</a>, a black background image to cover whats behind ui, then a <a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/class-CanvasGroup.html" data-raw-source="[CanvasGroup](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/class-CanvasGroup.html)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="45" sourceendlinenumber="45">CanvasGroup</a> on a child object to background, set alpha on <a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/class-CanvasGroup.html" data-raw-source="[CanvasGroup](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/class-CanvasGroup.html)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="45" sourceendlinenumber="45">CanvasGroup</a> to 0 to prevent potential flickering. Add some <a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/script-Text.html" data-raw-source="[text](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/script-Text.html)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="45" sourceendlinenumber="45">text</a> in the center, with whatever you want, perhaps developer or publisher name?</p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="47" sourceendlinenumber="47">Now add the &#39;CustomSplashScreen&#39; script we created earlier to the <a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/UICanvas.html" data-raw-source="[canvas](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/UICanvas.html)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="47" sourceendlinenumber="47">canvas</a>, then assign canvas and group.</p>
<h3 id="actually-using-it" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="49" sourceendlinenumber="49">Actually using it</h3>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="50" sourceendlinenumber="50">Making ASM actually use it is as simple as assigning it in the <a href="SceneManagerWindow.html#settings" data-raw-source="[settings](SceneManagerWindow.md#settings)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="50" sourceendlinenumber="50">settings</a> tab in <a href="SceneManagerWindow.html" data-raw-source="[Scene Manager Window](SceneManagerWindow.md)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="50" sourceendlinenumber="50">Scene Manager Window</a>.</p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="52" sourceendlinenumber="52"><img src="../image/settings-splashscreen.png" alt="" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="52" sourceendlinenumber="52"></p>
<p sourcefile="guides/SplashScreen.md" sourcestartlinenumber="54" sourceendlinenumber="54">And with this, we&#39;re done! You may now use the <img src="../image/play.png" alt="" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="54" sourceendlinenumber="54"> in <a href="SceneManagerWindow.html" data-raw-source="[Scene Manager Window](SceneManagerWindow.md)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="54" sourceendlinenumber="54">Scene Manager Window</a> to start game as if it was a build, since splash screen won&#39;t play otherwise, and you should see the text fade in, wait for a few seconds, and then fade out again, and then ASM will continue <a href="SceneManager.html#runtime" data-raw-source="[startup](SceneManager.md#runtime)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="54" sourceendlinenumber="54">startup</a> process, and open your <a href="SceneCollection.html" data-raw-source="[collections](SceneCollection.md)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="54" sourceendlinenumber="54">collections</a> and <a href="Scene.html" data-raw-source="[scenes](Scene.md)" sourcefile="guides/SplashScreen.md" sourcestartlinenumber="54" sourceendlinenumber="54">scenes</a>.</p>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
