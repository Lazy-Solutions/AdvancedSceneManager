<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="AdvancedSceneManager_Core_Runtime" data-uid="AdvancedSceneManager.Core.Runtime" class="text-break">Class Runtime
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Manages the start and quit processes of the game.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">Runtime</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="AdvancedSceneManager.Core.html">AdvancedSceneManager.Core</a></h6>
  <h6><strong>Assembly</strong>: AdvancedSceneManager.dll</h6>
  <h5 id="AdvancedSceneManager_Core_Runtime_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Runtime</code></pre>
  </div>
  <h3 id="properties">Properties
  </h3>
  <a id="AdvancedSceneManager_Core_Runtime_isBuildMode_" data-uid="AdvancedSceneManager.Core.Runtime.isBuildMode*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_isBuildMode" data-uid="AdvancedSceneManager.Core.Runtime.isBuildMode">isBuildMode</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever we&apos;re currently in build mode.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool isBuildMode { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Core_Runtime_isBuildMode_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">This is true when in build or when play button in scene manager window is pressed.</p>
</div>
  <a id="AdvancedSceneManager_Core_Runtime_isInitialized_" data-uid="AdvancedSceneManager.Core.Runtime.isInitialized*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_isInitialized" data-uid="AdvancedSceneManager.Core.Runtime.isInitialized">isInitialized</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever ASM is done with startup process.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool isInitialized { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_Runtime_isQuitting_" data-uid="AdvancedSceneManager.Core.Runtime.isQuitting*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_isQuitting" data-uid="AdvancedSceneManager.Core.Runtime.isQuitting">isQuitting</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets whatever ASM is currently in the process of quitting.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool isQuitting { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_Runtime_wasStartedAsBuild_" data-uid="AdvancedSceneManager.Core.Runtime.wasStartedAsBuild*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_wasStartedAsBuild" data-uid="AdvancedSceneManager.Core.Runtime.wasStartedAsBuild">wasStartedAsBuild</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Gets if game was started as a build.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool wasStartedAsBuild { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  <a id="AdvancedSceneManager_Core_Runtime_CancelQuit_" data-uid="AdvancedSceneManager.Core.Runtime.CancelQuit*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_CancelQuit" data-uid="AdvancedSceneManager.Core.Runtime.CancelQuit">CancelQuit()</h4>
  <div class="markdown level1 summary"><p>Cancels a quit in progress.</p>
<p>Only usable during a RegisterQuitCallback() or while isQuitting is true.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void CancelQuit()</code></pre>
  </div>
  <a id="AdvancedSceneManager_Core_Runtime_Quit_" data-uid="AdvancedSceneManager.Core.Runtime.Quit*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_Quit_System_Boolean_System_Nullable_UnityEngine_Color__System_Single_" data-uid="AdvancedSceneManager.Core.Runtime.Quit(System.Boolean,System.Nullable{UnityEngine.Color},System.Single)">Quit(Boolean, Nullable&lt;Color&gt;, Single)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Quits the game, and calls quitCallbacks, optionally with a fade animation.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Quit(bool fade = true, Color? fadeColor = null, float fadeDuration = 1F)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">fade</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Nullable</span>&lt;<span class="xref">UnityEngine.Color</span>&gt;</td>
        <td><span class="parametername">fadeColor</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">fadeDuration</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_Runtime_RegisterQuitCallback_" data-uid="AdvancedSceneManager.Core.Runtime.RegisterQuitCallback*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_RegisterQuitCallback_System_Collections_IEnumerator_" data-uid="AdvancedSceneManager.Core.Runtime.RegisterQuitCallback(System.Collections.IEnumerator)">RegisterQuitCallback(IEnumerator)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Register a callback to be called before quit.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RegisterQuitCallback(IEnumerator courutine)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.IEnumerator</span></td>
        <td><span class="parametername">courutine</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="AdvancedSceneManager_Core_Runtime_Restart_" data-uid="AdvancedSceneManager.Core.Runtime.Restart*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_Restart_System_Boolean_" data-uid="AdvancedSceneManager.Core.Runtime.Restart(System.Boolean)">Restart(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Restarts game and plays startup sequence again.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Restart(bool playSplashScreen = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">playSplashScreen</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Core_Runtime_Restart_System_Boolean__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Enters playmode if in editor.</p>
</div>
  <a id="AdvancedSceneManager_Core_Runtime_Start_" data-uid="AdvancedSceneManager.Core.Runtime.Start*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_Start_AdvancedSceneManager_Models_SceneCollection_System_Boolean_System_Boolean_" data-uid="AdvancedSceneManager.Core.Runtime.Start(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean)">Start(SceneCollection, Boolean, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Starts startup sequence.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Start(SceneCollection collection = null, bool ignoreDoNotOpen = false, bool playSplashScreen = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="AdvancedSceneManager.Models.SceneCollection.html">SceneCollection</a></td>
        <td><span class="parametername">collection</span></td>
        <td><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Opens the collection after all other collections and scenes flagged to open has.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">ignoreDoNotOpen</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">playSplashScreen</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="AdvancedSceneManager_Core_Runtime_Start_AdvancedSceneManager_Models_SceneCollection_System_Boolean_System_Boolean__remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Enters playmode if in editor.</p>
</div>
  <a id="AdvancedSceneManager_Core_Runtime_UnregisterQuitCallback_" data-uid="AdvancedSceneManager.Core.Runtime.UnregisterQuitCallback*"></a>
  <h4 id="AdvancedSceneManager_Core_Runtime_UnregisterQuitCallback_System_Collections_IEnumerator_" data-uid="AdvancedSceneManager.Core.Runtime.UnregisterQuitCallback(System.Collections.IEnumerator)">UnregisterQuitCallback(IEnumerator)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Unregister a callback that was to be called before quit.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void UnregisterQuitCallback(IEnumerator courutine)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.IEnumerator</span></td>
        <td><span class="parametername">courutine</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="events">Events
  </h3>
  <h4 id="AdvancedSceneManager_Core_Runtime_afterStart" data-uid="AdvancedSceneManager.Core.Runtime.afterStart">afterStart</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Occurs after startup process is done, or when <a class="xref" href="AdvancedSceneManager.Core.Runtime.html#AdvancedSceneManager_Core_Runtime_Restart_System_Boolean_">Restart(Boolean)</a> is called.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public event Action afterStart</code></pre>
  </div>
  <h5 class="eventType">Event Type</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h4 id="AdvancedSceneManager_Core_Runtime_beforeStart" data-uid="AdvancedSceneManager.Core.Runtime.beforeStart">beforeStart</h4>
  <div class="markdown level1 summary"><p sourcefile="api/AdvancedSceneManager.Core.Runtime.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Occurs before startup process is started, or when <a class="xref" href="AdvancedSceneManager.Core.Runtime.html#AdvancedSceneManager_Core_Runtime_Restart_System_Boolean_">Restart(Boolean)</a> is called.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public event Action beforeStart</code></pre>
  </div>
  <h5 class="eventType">Event Type</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
