### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility
  commentId: T:AdvancedSceneManager.Utility.ScriptableObjectUtility
  id: ScriptableObjectUtility
  parent: AdvancedSceneManager.Utility
  children:
  - AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton``1(System.String,System.String)
  - AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  langs:
  - csharp
  - vb
  name: ScriptableObjectUtility
  nameWithType: ScriptableObjectUtility
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ScriptableObjectUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ScriptableObjectUtility
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ScriptableObjectUtility.cs
    startLine: 14
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Contains utility methods for <xref href="UnityEngine.ScriptableObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class ScriptableObjectUtility
    content.vb: Public Module ScriptableObjectUtility
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  commentId: M:AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  id: Save(UnityEngine.ScriptableObject)
  isExtensionMethod: true
  parent: AdvancedSceneManager.Utility.ScriptableObjectUtility
  langs:
  - csharp
  - vb
  name: Save(ScriptableObject)
  nameWithType: ScriptableObjectUtility.Save(ScriptableObject)
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ScriptableObjectUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Save
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ScriptableObjectUtility.cs
    startLine: 19
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Saves the <xref href="UnityEngine.ScriptableObject" data-throw-if-not-resolved="false"></xref>.
  remarks: Safe to call from outside editor, but has no effect.
  example: []
  syntax:
    content: public static void Save(this ScriptableObject obj)
    parameters:
    - id: obj
      type: UnityEngine.ScriptableObject
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Save(obj As ScriptableObject)
  overload: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton``1(System.String,System.String)
  commentId: M:AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton``1(System.String,System.String)
  id: GetSingleton``1(System.String,System.String)
  parent: AdvancedSceneManager.Utility.ScriptableObjectUtility
  langs:
  - csharp
  - vb
  name: GetSingleton<T>(String, String)
  nameWithType: ScriptableObjectUtility.GetSingleton<T>(String, String)
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton<T>(System.String, System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ScriptableObjectUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GetSingleton
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/ScriptableObjectUtility.cs
    startLine: 45
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets a singleton instance of the specified type.
  example: []
  syntax:
    content: >-
      public static T GetSingleton<T>(string assetPath, string resourcesPath)
          where T : ScriptableObject
    parameters:
    - id: assetPath
      type: System.String
    - id: resourcesPath
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetSingleton(Of T As ScriptableObject)(assetPath As String, resourcesPath As String) As T
  overload: AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton*
  nameWithType.vb: ScriptableObjectUtility.GetSingleton(Of T)(String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton(Of T)(System.String, System.String)
  name.vb: GetSingleton(Of T)(String, String)
references:
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save*
  commentId: Overload:AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  name: Save
  nameWithType: ScriptableObjectUtility.Save
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton*
  commentId: Overload:AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton
  name: GetSingleton
  nameWithType: ScriptableObjectUtility.GetSingleton
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.GetSingleton
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
