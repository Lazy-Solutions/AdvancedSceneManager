### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Utility.PauseScreenUtility
  commentId: T:AdvancedSceneManager.Utility.PauseScreenUtility
  id: PauseScreenUtility
  parent: AdvancedSceneManager.Utility
  children:
  - AdvancedSceneManager.Utility.PauseScreenUtility.Begin
  - AdvancedSceneManager.Utility.PauseScreenUtility.canvasGroup
  - AdvancedSceneManager.Utility.PauseScreenUtility.End
  - AdvancedSceneManager.Utility.PauseScreenUtility.Hide(System.Boolean)
  - AdvancedSceneManager.Utility.PauseScreenUtility.isOpen
  - AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey
  - AdvancedSceneManager.Utility.PauseScreenUtility.quit
  - AdvancedSceneManager.Utility.PauseScreenUtility.Quit
  - AdvancedSceneManager.Utility.PauseScreenUtility.restartCollection
  - AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection
  - AdvancedSceneManager.Utility.PauseScreenUtility.restartGame
  - AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame
  - AdvancedSceneManager.Utility.PauseScreenUtility.resume
  - AdvancedSceneManager.Utility.PauseScreenUtility.Resume
  - AdvancedSceneManager.Utility.PauseScreenUtility.Show
  - AdvancedSceneManager.Utility.PauseScreenUtility.StopListening
  - AdvancedSceneManager.Utility.PauseScreenUtility.Toggle
  langs:
  - csharp
  - vb
  name: PauseScreenUtility
  nameWithType: PauseScreenUtility
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: PauseScreenUtility
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 16
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Contains functions for interacting with the default pause screen.
  example: []
  syntax:
    content: >-
      [AddComponentMenu("")]

      public class PauseScreenUtility : MonoBehaviour
    content.vb: >-
      <AddComponentMenu("")>

      Public Class PauseScreenUtility
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - UnityEngine.Component.AdvancedSceneManager.Utility.SceneUtility.Scene
  attributes:
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: ''
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.isOpen
  commentId: P:AdvancedSceneManager.Utility.PauseScreenUtility.isOpen
  id: isOpen
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: isOpen
  nameWithType: PauseScreenUtility.isOpen
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.isOpen
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isOpen
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 48
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets if the pause screen is currently open.
  example: []
  syntax:
    content: public static bool isOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property isOpen As Boolean
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.isOpen*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey
  id: ListenForKey
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: ListenForKey()
  nameWithType: PauseScreenUtility.ListenForKey()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ListenForKey
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 54
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Starts listening keys and opens pause screen when keys pressed.
  example: []
  syntax:
    content: public static void ListenForKey()
    content.vb: Public Shared Sub ListenForKey
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.StopListening
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.StopListening
  id: StopListening
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: StopListening()
  nameWithType: PauseScreenUtility.StopListening()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.StopListening()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: StopListening
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 61
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Stops listening for keys, this will disable pause screen. (Manually calling <xref href="AdvancedSceneManager.Utility.PauseScreenUtility.Show" data-throw-if-not-resolved="false"></xref> will still work though)
  example: []
  syntax:
    content: public static void StopListening()
    content.vb: Public Shared Sub StopListening
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.StopListening*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Show
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.Show
  id: Show
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: Show()
  nameWithType: PauseScreenUtility.Show()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Show()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Show
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 102
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Shows the pause screen.
  example: []
  syntax:
    content: public static void Show()
    content.vb: Public Shared Sub Show
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Hide(System.Boolean)
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.Hide(System.Boolean)
  id: Hide(System.Boolean)
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: Hide(Boolean)
  nameWithType: PauseScreenUtility.Hide(Boolean)
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Hide(System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Hide
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 140
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Hides the pause screen.
  example: []
  syntax:
    content: public static void Hide(bool ignoreAnimations = false)
    parameters:
    - id: ignoreAnimations
      type: System.Boolean
    content.vb: Public Shared Sub Hide(ignoreAnimations As Boolean = False)
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.Hide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Toggle
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.Toggle
  id: Toggle
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: Toggle()
  nameWithType: PauseScreenUtility.Toggle()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Toggle()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Toggle
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 170
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Toggles the pause screen on / off.
  example: []
  syntax:
    content: public static void Toggle()
    content.vb: Public Shared Sub Toggle
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.Toggle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.resume
  commentId: F:AdvancedSceneManager.Utility.PauseScreenUtility.resume
  id: resume
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: resume
  nameWithType: PauseScreenUtility.resume
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.resume
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: resume
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 180
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public Button resume
    return:
      type: UnityEngine.UI.Button
    content.vb: Public resume As Button
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.restartCollection
  commentId: F:AdvancedSceneManager.Utility.PauseScreenUtility.restartCollection
  id: restartCollection
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: restartCollection
  nameWithType: PauseScreenUtility.restartCollection
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.restartCollection
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: restartCollection
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 181
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public Button restartCollection
    return:
      type: UnityEngine.UI.Button
    content.vb: Public restartCollection As Button
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.restartGame
  commentId: F:AdvancedSceneManager.Utility.PauseScreenUtility.restartGame
  id: restartGame
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: restartGame
  nameWithType: PauseScreenUtility.restartGame
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.restartGame
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: restartGame
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 182
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public Button restartGame
    return:
      type: UnityEngine.UI.Button
    content.vb: Public restartGame As Button
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.quit
  commentId: F:AdvancedSceneManager.Utility.PauseScreenUtility.quit
  id: quit
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: quit
  nameWithType: PauseScreenUtility.quit
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.quit
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: quit
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 183
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public Button quit
    return:
      type: UnityEngine.UI.Button
    content.vb: Public quit As Button
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.canvasGroup
  commentId: F:AdvancedSceneManager.Utility.PauseScreenUtility.canvasGroup
  id: canvasGroup
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: canvasGroup
  nameWithType: PauseScreenUtility.canvasGroup
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.canvasGroup
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: canvasGroup
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 185
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public CanvasGroup canvasGroup
    return:
      type: UnityEngine.CanvasGroup
    content.vb: Public canvasGroup As CanvasGroup
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Begin
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.Begin
  id: Begin
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: Begin()
  nameWithType: PauseScreenUtility.Begin()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Begin()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Begin
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 187
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public IEnumerator Begin()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function Begin As IEnumerator
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.Begin*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.End
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.End
  id: End
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: End()
  nameWithType: PauseScreenUtility.End()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.End()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: End
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 196
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public IEnumerator End()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function End As IEnumerator
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.End*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection
  id: RestartCollection
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: RestartCollection()
  nameWithType: PauseScreenUtility.RestartCollection()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: RestartCollection
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 204
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public void RestartCollection()
    content.vb: Public Sub RestartCollection
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame
  id: RestartGame
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: RestartGame()
  nameWithType: PauseScreenUtility.RestartGame()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: RestartGame
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 223
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public void RestartGame()
    content.vb: Public Sub RestartGame
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Resume
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.Resume
  id: Resume
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: PauseScreenUtility.Resume()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Resume()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Resume
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 229
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public void Resume()
    content.vb: Public Sub Resume
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.Resume*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Quit
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.Quit
  id: Quit
  parent: AdvancedSceneManager.Utility.PauseScreenUtility
  langs:
  - csharp
  - vb
  name: Quit()
  nameWithType: PauseScreenUtility.Quit()
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Quit()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Quit
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/PauseScreenUtility.cs
    startLine: 232
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public void Quit()
    content.vb: Public Sub Quit
  overload: AdvancedSceneManager.Utility.PauseScreenUtility.Quit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: UnityEngine.Component.AdvancedSceneManager.Utility.SceneUtility.Scene
  commentId: M:AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  parent: AdvancedSceneManager.Utility.SceneUtility
  definition: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  name: Scene()
  nameWithType: SceneUtility.Scene()
  fullName: AdvancedSceneManager.Utility.SceneUtility.Scene()
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  commentId: M:AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  isExternal: true
  name: Scene(Component)
  nameWithType: SceneUtility.Scene(Component)
  fullName: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.SceneUtility
  commentId: T:AdvancedSceneManager.Utility.SceneUtility
  parent: AdvancedSceneManager.Utility
  name: SceneUtility
  nameWithType: SceneUtility
  fullName: AdvancedSceneManager.Utility.SceneUtility
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.isOpen*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.isOpen
  name: isOpen
  nameWithType: PauseScreenUtility.isOpen
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.isOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey
  name: ListenForKey
  nameWithType: PauseScreenUtility.ListenForKey
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.ListenForKey
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Show
  commentId: M:AdvancedSceneManager.Utility.PauseScreenUtility.Show
  isExternal: true
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.StopListening*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.StopListening
  name: StopListening
  nameWithType: PauseScreenUtility.StopListening
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.StopListening
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Show*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.Show
  name: Show
  nameWithType: PauseScreenUtility.Show
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Show
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Hide*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.Hide
  name: Hide
  nameWithType: PauseScreenUtility.Hide
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Hide
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Toggle*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.Toggle
  name: Toggle
  nameWithType: PauseScreenUtility.Toggle
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Toggle
- uid: UnityEngine.UI.Button
  commentId: T:UnityEngine.UI.Button
  parent: UnityEngine.UI
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: UnityEngine.UI.Button
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  isExternal: true
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
- uid: UnityEngine.CanvasGroup
  commentId: T:UnityEngine.CanvasGroup
  parent: UnityEngine
  isExternal: true
  name: CanvasGroup
  nameWithType: CanvasGroup
  fullName: UnityEngine.CanvasGroup
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Begin*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.Begin
  name: Begin
  nameWithType: PauseScreenUtility.Begin
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Begin
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.End*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.End
  name: End
  nameWithType: PauseScreenUtility.End
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.End
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection
  name: RestartCollection
  nameWithType: PauseScreenUtility.RestartCollection
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.RestartCollection
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame
  name: RestartGame
  nameWithType: PauseScreenUtility.RestartGame
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.RestartGame
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Resume*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.Resume
  name: Resume
  nameWithType: PauseScreenUtility.Resume
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Resume
- uid: AdvancedSceneManager.Utility.PauseScreenUtility.Quit*
  commentId: Overload:AdvancedSceneManager.Utility.PauseScreenUtility.Quit
  name: Quit
  nameWithType: PauseScreenUtility.Quit
  fullName: AdvancedSceneManager.Utility.PauseScreenUtility.Quit
