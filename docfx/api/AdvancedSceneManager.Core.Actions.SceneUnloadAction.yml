### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  commentId: T:AdvancedSceneManager.Core.Actions.SceneUnloadAction
  id: SceneUnloadAction
  parent: AdvancedSceneManager.Core.Actions
  children:
  - AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor(System.Func{AdvancedSceneManager.Core.OpenSceneInfo},AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction(System.Boolean@)
  - AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  - AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Core.SceneManagerBase)
  - AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag(AdvancedSceneManager.Core.OpenSceneInfo)
  langs:
  - csharp
  - vb
  name: SceneUnloadAction
  nameWithType: SceneUnloadAction
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: SceneUnloadAction
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
    startLine: 10
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: Finish load of a scene that was loaded, but not activated. See <xref href="AdvancedSceneManager.Core.Actions.SceneLoadAction" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class SceneUnloadAction : OverridableAction<SceneUnloadAction>'
    content.vb: >-
      Public Class SceneUnloadAction
          Inherits OverridableAction(Of SceneUnloadAction)
  inheritance:
  - System.Object
  - AdvancedSceneManager.Core.Actions.SceneAction
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  inheritedMembers:
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.overrides
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,AdvancedSceneManager.Core.Actions.SceneUnloadAction,System.Collections.IEnumerator})
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ClearOverride(System.String)
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ClearOverrides
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.lazyScene
  - AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ToString
  - AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  - AdvancedSceneManager.Core.Actions.SceneAction.openScene
  - AdvancedSceneManager.Core.Actions.SceneAction.scene
  - AdvancedSceneManager.Core.Actions.SceneAction.collection
  - AdvancedSceneManager.Core.Actions.SceneAction.progress
  - AdvancedSceneManager.Core.Actions.SceneAction.isDone
  - AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  - AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  - AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  - AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  - AdvancedSceneManager.Core.Actions.SceneAction.Done
  - AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Models.SceneCollection)
  id: '#ctor(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Models.SceneCollection)'
  parent: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  langs:
  - csharp
  - vb
  name: SceneUnloadAction(OpenSceneInfo, SceneCollection)
  nameWithType: SceneUnloadAction.SceneUnloadAction(OpenSceneInfo, SceneCollection)
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.SceneUnloadAction(AdvancedSceneManager.Core.OpenSceneInfo, AdvancedSceneManager.Models.SceneCollection)
  type: Constructor
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: .ctor
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
    startLine: 13
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public SceneUnloadAction(OpenSceneInfo scene, SceneCollection collection = null)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Core.OpenSceneInfo
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    content.vb: Public Sub New(scene As OpenSceneInfo, collection As SceneCollection = Nothing)
  overload: AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor(System.Func{AdvancedSceneManager.Core.OpenSceneInfo},AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor(System.Func{AdvancedSceneManager.Core.OpenSceneInfo},AdvancedSceneManager.Models.SceneCollection)
  id: '#ctor(System.Func{AdvancedSceneManager.Core.OpenSceneInfo},AdvancedSceneManager.Models.SceneCollection)'
  parent: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  langs:
  - csharp
  - vb
  name: SceneUnloadAction(Func<OpenSceneInfo>, SceneCollection)
  nameWithType: SceneUnloadAction.SceneUnloadAction(Func<OpenSceneInfo>, SceneCollection)
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.SceneUnloadAction(System.Func<AdvancedSceneManager.Core.OpenSceneInfo>, AdvancedSceneManager.Models.SceneCollection)
  type: Constructor
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: .ctor
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
    startLine: 22
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public SceneUnloadAction(Func<OpenSceneInfo> scene, SceneCollection collection = null)
    parameters:
    - id: scene
      type: System.Func{AdvancedSceneManager.Core.OpenSceneInfo}
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    content.vb: Public Sub New(scene As Func(Of OpenSceneInfo), collection As SceneCollection = Nothing)
  overload: AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor*
  nameWithType.vb: SceneUnloadAction.SceneUnloadAction(Func(Of OpenSceneInfo), SceneCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AdvancedSceneManager.Core.Actions.SceneUnloadAction.SceneUnloadAction(System.Func(Of AdvancedSceneManager.Core.OpenSceneInfo), AdvancedSceneManager.Models.SceneCollection)
  name.vb: SceneUnloadAction(Func(Of OpenSceneInfo), SceneCollection)
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction(System.Boolean@)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction(System.Boolean@)
  id: BeforeDoAction(System.Boolean@)
  parent: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  langs:
  - csharp
  - vb
  name: BeforeDoAction(out Boolean)
  nameWithType: SceneUnloadAction.BeforeDoAction(out Boolean)
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction(out System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: BeforeDoAction
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
    startLine: 30
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: protected override void BeforeDoAction(out bool exitOutEarly)
    parameters:
    - id: exitOutEarly
      type: System.Boolean
    content.vb: Protected Overrides Sub BeforeDoAction(ByRef exitOutEarly As Boolean)
  overridden: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.BeforeDoAction(System.Boolean@)
  overload: AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction*
  nameWithType.vb: SceneUnloadAction.BeforeDoAction(ByRef Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction(ByRef System.Boolean)
  name.vb: BeforeDoAction(ByRef Boolean)
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  id: DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  parent: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  langs:
  - csharp
  - vb
  name: DoNonOverridenAction(SceneManagerBase)
  nameWithType: SceneUnloadAction.DoNonOverridenAction(SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: DoNonOverridenAction
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
    startLine: 37
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public override IEnumerator DoNonOverridenAction(SceneManagerBase _sceneManager)
    parameters:
    - id: _sceneManager
      type: AdvancedSceneManager.Core.SceneManagerBase
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overrides Function DoNonOverridenAction(_sceneManager As SceneManagerBase) As IEnumerator
  overridden: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  overload: AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag(AdvancedSceneManager.Core.OpenSceneInfo)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag(AdvancedSceneManager.Core.OpenSceneInfo)
  id: UnsetPersistentFlag(AdvancedSceneManager.Core.OpenSceneInfo)
  parent: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  langs:
  - csharp
  - vb
  name: UnsetPersistentFlag(OpenSceneInfo)
  nameWithType: SceneUnloadAction.UnsetPersistentFlag(OpenSceneInfo)
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag(AdvancedSceneManager.Core.OpenSceneInfo)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: UnsetPersistentFlag
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
    startLine: 58
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public void UnsetPersistentFlag(OpenSceneInfo scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Core.OpenSceneInfo
    content.vb: Public Sub UnsetPersistentFlag(scene As OpenSceneInfo)
  overload: AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Core.SceneManagerBase)
  id: Remove(AdvancedSceneManager.Core.OpenSceneInfo,AdvancedSceneManager.Core.SceneManagerBase)
  parent: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  langs:
  - csharp
  - vb
  name: Remove(OpenSceneInfo, SceneManagerBase)
  nameWithType: SceneUnloadAction.Remove(OpenSceneInfo, SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove(AdvancedSceneManager.Core.OpenSceneInfo, AdvancedSceneManager.Core.SceneManagerBase)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Remove
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Close/SceneUnloadAction.cs
    startLine: 61
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public void Remove(OpenSceneInfo scene, SceneManagerBase sceneManager)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Core.OpenSceneInfo
    - id: sceneManager
      type: AdvancedSceneManager.Core.SceneManagerBase
    content.vb: Public Sub Remove(scene As OpenSceneInfo, sceneManager As SceneManagerBase)
  overload: AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AdvancedSceneManager.Core.Actions.SceneLoadAction
  commentId: T:AdvancedSceneManager.Core.Actions.SceneLoadAction
  name: SceneLoadAction
  nameWithType: SceneLoadAction
  fullName: AdvancedSceneManager.Core.Actions.SceneLoadAction
- uid: AdvancedSceneManager.Core.Actions
  commentId: N:AdvancedSceneManager.Core.Actions
  name: AdvancedSceneManager.Core.Actions
  nameWithType: AdvancedSceneManager.Core.Actions
  fullName: AdvancedSceneManager.Core.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AdvancedSceneManager.Core.Actions.SceneAction
  commentId: T:AdvancedSceneManager.Core.Actions.SceneAction
  parent: AdvancedSceneManager.Core.Actions
  name: SceneAction
  nameWithType: SceneAction
  fullName: AdvancedSceneManager.Core.Actions.SceneAction
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  commentId: T:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  parent: AdvancedSceneManager.Core.Actions
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1
  name: OverridableAction<SceneUnloadAction>
  nameWithType: OverridableAction<SceneUnloadAction>
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>
  nameWithType.vb: OverridableAction(Of SceneUnloadAction)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction)
  name.vb: OverridableAction(Of SceneUnloadAction)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1
    name: OverridableAction
    nameWithType: OverridableAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction
    name: SceneUnloadAction
    nameWithType: SceneUnloadAction
    fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1
    name: OverridableAction
    nameWithType: OverridableAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction
    name: SceneUnloadAction
    nameWithType: SceneUnloadAction
    fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.overrides
  commentId: P:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.overrides
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.overrides
  name: overrides
  nameWithType: OverridableAction<SceneUnloadAction>.overrides
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.overrides
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).overrides
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).overrides
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,AdvancedSceneManager.Core.Actions.SceneUnloadAction,System.Collections.IEnumerator})
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,AdvancedSceneManager.Core.Actions.SceneUnloadAction,System.Collections.IEnumerator})
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,`0,System.Collections.IEnumerator})
  name: Override(String, Func<SceneManagerBase, SceneUnloadAction, IEnumerator>)
  nameWithType: OverridableAction<SceneUnloadAction>.Override(String, Func<SceneManagerBase, SceneUnloadAction, IEnumerator>)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.Override(System.String, System.Func<AdvancedSceneManager.Core.SceneManagerBase, AdvancedSceneManager.Core.Actions.SceneUnloadAction, System.Collections.IEnumerator>)
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).Override(String, Func(Of SceneManagerBase, SceneUnloadAction, IEnumerator))
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).Override(System.String, System.Func(Of AdvancedSceneManager.Core.SceneManagerBase, AdvancedSceneManager.Core.Actions.SceneUnloadAction, System.Collections.IEnumerator))
  name.vb: Override(String, Func(Of SceneManagerBase, SceneUnloadAction, IEnumerator))
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,`0,System.Collections.IEnumerator})
    name: Override
    nameWithType: OverridableAction<SceneUnloadAction>.Override
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.Override
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction
    name: SceneUnloadAction
    nameWithType: SceneUnloadAction
    fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,`0,System.Collections.IEnumerator})
    name: Override
    nameWithType: OverridableAction(Of SceneUnloadAction).Override
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).Override
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction
    name: SceneUnloadAction
    nameWithType: SceneUnloadAction
    fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ClearOverride(System.String)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ClearOverride(System.String)
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverride(System.String)
  name: ClearOverride(String)
  nameWithType: OverridableAction<SceneUnloadAction>.ClearOverride(String)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.ClearOverride(System.String)
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).ClearOverride(String)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).ClearOverride(System.String)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverride(System.String)
    name: ClearOverride
    nameWithType: OverridableAction<SceneUnloadAction>.ClearOverride
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.ClearOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverride(System.String)
    name: ClearOverride
    nameWithType: OverridableAction(Of SceneUnloadAction).ClearOverride
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).ClearOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ClearOverrides
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ClearOverrides
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverrides
  name: ClearOverrides()
  nameWithType: OverridableAction<SceneUnloadAction>.ClearOverrides()
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.ClearOverrides()
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).ClearOverrides()
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).ClearOverrides()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverrides
    name: ClearOverrides
    nameWithType: OverridableAction<SceneUnloadAction>.ClearOverrides
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.ClearOverrides
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverrides
    name: ClearOverrides
    nameWithType: OverridableAction(Of SceneUnloadAction).ClearOverrides
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).ClearOverrides
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  name: DoAction(SceneManagerBase)
  nameWithType: OverridableAction<SceneUnloadAction>.DoAction(SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).DoAction(SceneManagerBase)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoAction
    nameWithType: OverridableAction<SceneUnloadAction>.DoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.DoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoAction
    nameWithType: OverridableAction(Of SceneUnloadAction).DoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).DoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.lazyScene
  commentId: P:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.lazyScene
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.lazyScene
  name: lazyScene
  nameWithType: OverridableAction<SceneUnloadAction>.lazyScene
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.lazyScene
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).lazyScene
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).lazyScene
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ToString
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.ToString
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.ToString
  name: ToString()
  nameWithType: OverridableAction<SceneUnloadAction>.ToString()
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.ToString()
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).ToString()
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).ToString()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ToString
    name: ToString
    nameWithType: OverridableAction<SceneUnloadAction>.ToString
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ToString
    name: ToString
    nameWithType: OverridableAction(Of SceneUnloadAction).ToString
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: reportsProgress
  nameWithType: SceneAction.reportsProgress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
- uid: AdvancedSceneManager.Core.Actions.SceneAction.openScene
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.openScene
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: openScene
  nameWithType: SceneAction.openScene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.openScene
- uid: AdvancedSceneManager.Core.Actions.SceneAction.scene
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.scene
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: scene
  nameWithType: SceneAction.scene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.scene
- uid: AdvancedSceneManager.Core.Actions.SceneAction.collection
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.collection
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: collection
  nameWithType: SceneAction.collection
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.collection
- uid: AdvancedSceneManager.Core.Actions.SceneAction.progress
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.progress
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: progress
  nameWithType: SceneAction.progress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.progress
- uid: AdvancedSceneManager.Core.Actions.SceneAction.isDone
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.isDone
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: isDone
  nameWithType: SceneAction.isDone
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.isDone
- uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: RegisterCallback(Action)
  nameWithType: SceneAction.RegisterCallback(Action)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
    name: RegisterCallback
    nameWithType: SceneAction.RegisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
    name: RegisterCallback
    nameWithType: SceneAction.RegisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: UnregisterCallback(Action)
  nameWithType: SceneAction.UnregisterCallback(Action)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
    name: UnregisterCallback
    nameWithType: SceneAction.UnregisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
    name: UnregisterCallback
    nameWithType: SceneAction.UnregisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: OnProgressCallback(Action<Single>)
  nameWithType: SceneAction.OnProgressCallback(Action<Single>)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action<System.Single>)
  nameWithType.vb: SceneAction.OnProgressCallback(Action(Of Single))
  fullName.vb: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action(Of System.Single))
  name.vb: OnProgressCallback(Action(Of Single))
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
    name: OnProgressCallback
    nameWithType: SceneAction.OnProgressCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
    name: OnProgressCallback
    nameWithType: SceneAction.OnProgressCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: OnProgress(Single)
  nameWithType: SceneAction.OnProgress(Single)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
    name: OnProgress
    nameWithType: SceneAction.OnProgress
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
    name: OnProgress
    nameWithType: SceneAction.OnProgress
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.Done
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.Done
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: Done()
  nameWithType: SceneAction.Done()
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: Done(OpenSceneInfo)
  nameWithType: SceneAction.Done(OpenSceneInfo)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1
  commentId: T:AdvancedSceneManager.Core.Actions.OverridableAction`1
  name: OverridableAction<T>
  nameWithType: OverridableAction<T>
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>
  nameWithType.vb: OverridableAction(Of T)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T)
  name.vb: OverridableAction(Of T)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1
    name: OverridableAction
    nameWithType: OverridableAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1
    name: OverridableAction
    nameWithType: OverridableAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.overrides
  commentId: P:AdvancedSceneManager.Core.Actions.OverridableAction`1.overrides
  name: overrides
  nameWithType: OverridableAction<T>.overrides
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.overrides
  nameWithType.vb: OverridableAction(Of T).overrides
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).overrides
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,`0,System.Collections.IEnumerator})
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction`1.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,`0,System.Collections.IEnumerator})
  isExternal: true
  name: Override(String, Func<SceneManagerBase, T, IEnumerator>)
  nameWithType: OverridableAction<T>.Override(String, Func<SceneManagerBase, T, IEnumerator>)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.Override(System.String, System.Func<AdvancedSceneManager.Core.SceneManagerBase, T, System.Collections.IEnumerator>)
  nameWithType.vb: OverridableAction(Of T).Override(String, Func(Of SceneManagerBase, T, IEnumerator))
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).Override(System.String, System.Func(Of AdvancedSceneManager.Core.SceneManagerBase, T, System.Collections.IEnumerator))
  name.vb: Override(String, Func(Of SceneManagerBase, T, IEnumerator))
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,`0,System.Collections.IEnumerator})
    name: Override
    nameWithType: OverridableAction<T>.Override
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.Override
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.Override(System.String,System.Func{AdvancedSceneManager.Core.SceneManagerBase,`0,System.Collections.IEnumerator})
    name: Override
    nameWithType: OverridableAction(Of T).Override
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).Override
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverride(System.String)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverride(System.String)
  isExternal: true
  name: ClearOverride(String)
  nameWithType: OverridableAction<T>.ClearOverride(String)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.ClearOverride(System.String)
  nameWithType.vb: OverridableAction(Of T).ClearOverride(String)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).ClearOverride(System.String)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverride(System.String)
    name: ClearOverride
    nameWithType: OverridableAction<T>.ClearOverride
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.ClearOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverride(System.String)
    name: ClearOverride
    nameWithType: OverridableAction(Of T).ClearOverride
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).ClearOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverrides
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverrides
  name: ClearOverrides()
  nameWithType: OverridableAction<T>.ClearOverrides()
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.ClearOverrides()
  nameWithType.vb: OverridableAction(Of T).ClearOverrides()
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).ClearOverrides()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverrides
    name: ClearOverrides
    nameWithType: OverridableAction<T>.ClearOverrides
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.ClearOverrides
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ClearOverrides
    name: ClearOverrides
    nameWithType: OverridableAction(Of T).ClearOverrides
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).ClearOverrides
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction`1.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  name: DoAction(SceneManagerBase)
  nameWithType: OverridableAction<T>.DoAction(SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  nameWithType.vb: OverridableAction(Of T).DoAction(SceneManagerBase)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoAction
    nameWithType: OverridableAction<T>.DoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.DoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoAction
    nameWithType: OverridableAction(Of T).DoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).DoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.lazyScene
  commentId: P:AdvancedSceneManager.Core.Actions.OverridableAction`1.lazyScene
  name: lazyScene
  nameWithType: OverridableAction<T>.lazyScene
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.lazyScene
  nameWithType.vb: OverridableAction(Of T).lazyScene
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).lazyScene
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ToString
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction`1.ToString
  name: ToString()
  nameWithType: OverridableAction<T>.ToString()
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.ToString()
  nameWithType.vb: OverridableAction(Of T).ToString()
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).ToString()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ToString
    name: ToString
    nameWithType: OverridableAction<T>.ToString
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.ToString
    name: ToString
    nameWithType: OverridableAction(Of T).ToString
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneUnloadAction.#ctor
  name: SceneUnloadAction
  nameWithType: SceneUnloadAction.SceneUnloadAction
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.SceneUnloadAction
- uid: AdvancedSceneManager.Core.OpenSceneInfo
  commentId: T:AdvancedSceneManager.Core.OpenSceneInfo
  parent: AdvancedSceneManager.Core
  name: OpenSceneInfo
  nameWithType: OpenSceneInfo
  fullName: AdvancedSceneManager.Core.OpenSceneInfo
- uid: AdvancedSceneManager.Models.SceneCollection
  commentId: T:AdvancedSceneManager.Models.SceneCollection
  parent: AdvancedSceneManager.Models
  name: SceneCollection
  nameWithType: SceneCollection
  fullName: AdvancedSceneManager.Models.SceneCollection
- uid: AdvancedSceneManager.Core
  commentId: N:AdvancedSceneManager.Core
  name: AdvancedSceneManager.Core
  nameWithType: AdvancedSceneManager.Core
  fullName: AdvancedSceneManager.Core
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
- uid: System.Func{AdvancedSceneManager.Core.OpenSceneInfo}
  commentId: T:System.Func{AdvancedSceneManager.Core.OpenSceneInfo}
  parent: System
  definition: System.Func`1
  name: Func<OpenSceneInfo>
  nameWithType: Func<OpenSceneInfo>
  fullName: System.Func<AdvancedSceneManager.Core.OpenSceneInfo>
  nameWithType.vb: Func(Of OpenSceneInfo)
  fullName.vb: System.Func(Of AdvancedSceneManager.Core.OpenSceneInfo)
  name.vb: Func(Of OpenSceneInfo)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.BeforeDoAction(System.Boolean@)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.BeforeDoAction(System.Boolean@)
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.BeforeDoAction(System.Boolean@)
  name: BeforeDoAction(Boolean)
  nameWithType: OverridableAction<SceneUnloadAction>.BeforeDoAction(Boolean)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.BeforeDoAction(System.Boolean)
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).BeforeDoAction(Boolean)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).BeforeDoAction(System.Boolean)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.BeforeDoAction(System.Boolean@)
    name: BeforeDoAction
    nameWithType: OverridableAction<SceneUnloadAction>.BeforeDoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.BeforeDoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.BeforeDoAction(System.Boolean@)
    name: BeforeDoAction
    nameWithType: OverridableAction(Of SceneUnloadAction).BeforeDoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).BeforeDoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction
  name: BeforeDoAction
  nameWithType: SceneUnloadAction.BeforeDoAction
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.BeforeDoAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.BeforeDoAction(System.Boolean@)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction`1.BeforeDoAction(System.Boolean@)
  isExternal: true
  name: BeforeDoAction(Boolean)
  nameWithType: OverridableAction<T>.BeforeDoAction(Boolean)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.BeforeDoAction(System.Boolean)
  nameWithType.vb: OverridableAction(Of T).BeforeDoAction(Boolean)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).BeforeDoAction(System.Boolean)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.BeforeDoAction(System.Boolean@)
    name: BeforeDoAction
    nameWithType: OverridableAction<T>.BeforeDoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.BeforeDoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.BeforeDoAction(System.Boolean@)
    name: BeforeDoAction
    nameWithType: OverridableAction(Of T).BeforeDoAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).BeforeDoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  parent: AdvancedSceneManager.Core.Actions.OverridableAction{AdvancedSceneManager.Core.Actions.SceneUnloadAction}
  definition: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  name: DoNonOverridenAction(SceneManagerBase)
  nameWithType: OverridableAction<SceneUnloadAction>.DoNonOverridenAction(SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  nameWithType.vb: OverridableAction(Of SceneUnloadAction).DoNonOverridenAction(SceneManagerBase)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoNonOverridenAction
    nameWithType: OverridableAction<SceneUnloadAction>.DoNonOverridenAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<AdvancedSceneManager.Core.Actions.SceneUnloadAction>.DoNonOverridenAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoNonOverridenAction
    nameWithType: OverridableAction(Of SceneUnloadAction).DoNonOverridenAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of AdvancedSceneManager.Core.Actions.SceneUnloadAction).DoNonOverridenAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction
  name: DoNonOverridenAction
  nameWithType: SceneUnloadAction.DoNonOverridenAction
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.DoNonOverridenAction
- uid: AdvancedSceneManager.Core.SceneManagerBase
  commentId: T:AdvancedSceneManager.Core.SceneManagerBase
  parent: AdvancedSceneManager.Core
  name: SceneManagerBase
  nameWithType: SceneManagerBase
  fullName: AdvancedSceneManager.Core.SceneManagerBase
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.OverridableAction`1.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  name: DoNonOverridenAction(SceneManagerBase)
  nameWithType: OverridableAction<T>.DoNonOverridenAction(SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  nameWithType.vb: OverridableAction(Of T).DoNonOverridenAction(SceneManagerBase)
  fullName.vb: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoNonOverridenAction
    nameWithType: OverridableAction<T>.DoNonOverridenAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction<T>.DoNonOverridenAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.OverridableAction`1.DoNonOverridenAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoNonOverridenAction
    nameWithType: OverridableAction(Of T).DoNonOverridenAction
    fullName: AdvancedSceneManager.Core.Actions.OverridableAction(Of T).DoNonOverridenAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag
  name: UnsetPersistentFlag
  nameWithType: SceneUnloadAction.UnsetPersistentFlag
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.UnsetPersistentFlag
- uid: AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove
  name: Remove
  nameWithType: SceneUnloadAction.Remove
  fullName: AdvancedSceneManager.Core.Actions.SceneUnloadAction.Remove
