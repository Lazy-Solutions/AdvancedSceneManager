### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Editor.ScenesTab
  commentId: T:AdvancedSceneManager.Editor.ScenesTab
  id: ScenesTab
  parent: AdvancedSceneManager.Editor
  children:
  - AdvancedSceneManager.Editor.ScenesTab.FooterButtons
  - AdvancedSceneManager.Editor.ScenesTab.OnDisable
  - AdvancedSceneManager.Editor.ScenesTab.OnEnable(UnityEngine.UIElements.VisualElement)
  - AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement,System.Int32)
  - AdvancedSceneManager.Editor.ScenesTab.OnReorderStart(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement)
  - AdvancedSceneManager.Editor.ScenesTab.Open(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32},System.Boolean)
  - AdvancedSceneManager.Editor.ScenesTab.Path(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32})
  langs:
  - csharp
  - vb
  name: ScenesTab
  nameWithType: ScenesTab
  fullName: AdvancedSceneManager.Editor.ScenesTab
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ScenesTab
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 19
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static class ScenesTab
    content.vb: Public Module ScenesTab
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AdvancedSceneManager.Editor.ScenesTab.OnEnable(UnityEngine.UIElements.VisualElement)
  commentId: M:AdvancedSceneManager.Editor.ScenesTab.OnEnable(UnityEngine.UIElements.VisualElement)
  id: OnEnable(UnityEngine.UIElements.VisualElement)
  parent: AdvancedSceneManager.Editor.ScenesTab
  langs:
  - csharp
  - vb
  name: OnEnable(VisualElement)
  nameWithType: ScenesTab.OnEnable(VisualElement)
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnEnable(UnityEngine.UIElements.VisualElement)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OnEnable
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 24
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static void OnEnable(VisualElement element)
    parameters:
    - id: element
      type: UnityEngine.UIElements.VisualElement
    content.vb: Public Shared Sub OnEnable(element As VisualElement)
  overload: AdvancedSceneManager.Editor.ScenesTab.OnEnable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.ScenesTab.OnDisable
  commentId: M:AdvancedSceneManager.Editor.ScenesTab.OnDisable
  id: OnDisable
  parent: AdvancedSceneManager.Editor.ScenesTab
  langs:
  - csharp
  - vb
  name: OnDisable()
  nameWithType: ScenesTab.OnDisable()
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnDisable()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OnDisable
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 39
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static void OnDisable()
    content.vb: Public Shared Sub OnDisable
  overload: AdvancedSceneManager.Editor.ScenesTab.OnDisable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.ScenesTab.Open(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32},System.Boolean)
  commentId: M:AdvancedSceneManager.Editor.ScenesTab.Open(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32},System.Boolean)
  id: Open(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32},System.Boolean)
  isExtensionMethod: true
  parent: AdvancedSceneManager.Editor.ScenesTab
  langs:
  - csharp
  - vb
  name: Open((SceneCollection collection, Int32 i), Boolean)
  nameWithType: ScenesTab.Open((SceneCollection collection, Int32 i), Boolean)
  fullName: AdvancedSceneManager.Editor.ScenesTab.Open(System.ValueTuple<AdvancedSceneManager.Models.SceneCollection, System.Int32>, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Open
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 1092
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static void Open(this (SceneCollection collection, int i) scene, bool additive)
    parameters:
    - id: scene
      type: System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32}
    - id: additive
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Open(scene As(collection As SceneCollection, i As Integer)(Of SceneCollection , Integer), additive As Boolean)
  overload: AdvancedSceneManager.Editor.ScenesTab.Open*
  nameWithType.vb: ScenesTab.Open((collection As SceneCollection, i As Int32)(Of SceneCollection, Int32), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Editor.ScenesTab.Open(System.ValueTuple(Of AdvancedSceneManager.Models.SceneCollection, System.Int32), System.Boolean)
  name.vb: Open((collection As SceneCollection, i As Int32)(Of SceneCollection, Int32), Boolean)
- uid: AdvancedSceneManager.Editor.ScenesTab.Path(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32})
  commentId: M:AdvancedSceneManager.Editor.ScenesTab.Path(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32})
  id: Path(System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32})
  isExtensionMethod: true
  parent: AdvancedSceneManager.Editor.ScenesTab
  langs:
  - csharp
  - vb
  name: Path((SceneCollection collection, Int32 i))
  nameWithType: ScenesTab.Path((SceneCollection collection, Int32 i))
  fullName: AdvancedSceneManager.Editor.ScenesTab.Path(System.ValueTuple<AdvancedSceneManager.Models.SceneCollection, System.Int32>)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Path
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 1095
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static string Path(this (SceneCollection collection, int i) scene)
    parameters:
    - id: scene
      type: System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32}
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Path(scene As(collection As SceneCollection, i As Integer)(Of SceneCollection , Integer)) As String
  overload: AdvancedSceneManager.Editor.ScenesTab.Path*
  nameWithType.vb: ScenesTab.Path((collection As SceneCollection, i As Int32)(Of SceneCollection, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Editor.ScenesTab.Path(System.ValueTuple(Of AdvancedSceneManager.Models.SceneCollection, System.Int32))
  name.vb: Path((collection As SceneCollection, i As Int32)(Of SceneCollection, Int32))
- uid: AdvancedSceneManager.Editor.ScenesTab.FooterButtons
  commentId: P:AdvancedSceneManager.Editor.ScenesTab.FooterButtons
  id: FooterButtons
  parent: AdvancedSceneManager.Editor.ScenesTab
  langs:
  - csharp
  - vb
  name: FooterButtons
  nameWithType: ScenesTab.FooterButtons
  fullName: AdvancedSceneManager.Editor.ScenesTab.FooterButtons
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: FooterButtons
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 1226
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static SceneManagerWindow.FooterItem[] FooterButtons { get; }
    parameters: []
    return:
      type: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem[]
    content.vb: Public Shared ReadOnly Property FooterButtons As SceneManagerWindow.FooterItem()
  overload: AdvancedSceneManager.Editor.ScenesTab.FooterButtons*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AdvancedSceneManager.Editor.ScenesTab.OnReorderStart(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement)
  commentId: M:AdvancedSceneManager.Editor.ScenesTab.OnReorderStart(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement)
  id: OnReorderStart(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement)
  parent: AdvancedSceneManager.Editor.ScenesTab
  langs:
  - csharp
  - vb
  name: OnReorderStart(SceneManagerWindow.DragAndDropReorder.DragElement)
  nameWithType: ScenesTab.OnReorderStart(SceneManagerWindow.DragAndDropReorder.DragElement)
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnReorderStart(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OnReorderStart
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 1259
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static void OnReorderStart(SceneManagerWindow.DragAndDropReorder.DragElement element)
    parameters:
    - id: element
      type: AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement
    content.vb: Public Shared Sub OnReorderStart(element As SceneManagerWindow.DragAndDropReorder.DragElement)
  overload: AdvancedSceneManager.Editor.ScenesTab.OnReorderStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement,System.Int32)
  commentId: M:AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement,System.Int32)
  id: OnReorderEnd(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement,System.Int32)
  parent: AdvancedSceneManager.Editor.ScenesTab
  langs:
  - csharp
  - vb
  name: OnReorderEnd(SceneManagerWindow.DragAndDropReorder.DragElement, Int32)
  nameWithType: ScenesTab.OnReorderEnd(SceneManagerWindow.DragAndDropReorder.DragElement, Int32)
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd(AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement, System.Int32)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OnReorderEnd
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Windows/Tabs/ScenesTab.cs
    startLine: 1271
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static void OnReorderEnd(SceneManagerWindow.DragAndDropReorder.DragElement element, int newIndex)
    parameters:
    - id: element
      type: AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement
    - id: newIndex
      type: System.Int32
    content.vb: Public Shared Sub OnReorderEnd(element As SceneManagerWindow.DragAndDropReorder.DragElement, newIndex As Integer)
  overload: AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AdvancedSceneManager.Editor
  commentId: N:AdvancedSceneManager.Editor
  name: AdvancedSceneManager.Editor
  nameWithType: AdvancedSceneManager.Editor
  fullName: AdvancedSceneManager.Editor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Editor.ScenesTab.OnEnable*
  commentId: Overload:AdvancedSceneManager.Editor.ScenesTab.OnEnable
  name: OnEnable
  nameWithType: ScenesTab.OnEnable
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnEnable
- uid: UnityEngine.UIElements.VisualElement
  commentId: T:UnityEngine.UIElements.VisualElement
  parent: UnityEngine.UIElements
  isExternal: true
  name: VisualElement
  nameWithType: VisualElement
  fullName: UnityEngine.UIElements.VisualElement
- uid: UnityEngine.UIElements
  commentId: N:UnityEngine.UIElements
  isExternal: true
  name: UnityEngine.UIElements
  nameWithType: UnityEngine.UIElements
  fullName: UnityEngine.UIElements
- uid: AdvancedSceneManager.Editor.ScenesTab.OnDisable*
  commentId: Overload:AdvancedSceneManager.Editor.ScenesTab.OnDisable
  name: OnDisable
  nameWithType: ScenesTab.OnDisable
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnDisable
- uid: AdvancedSceneManager.Editor.ScenesTab.Open*
  commentId: Overload:AdvancedSceneManager.Editor.ScenesTab.Open
  name: Open
  nameWithType: ScenesTab.Open
  fullName: AdvancedSceneManager.Editor.ScenesTab.Open
- uid: System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32}
  commentId: T:System.ValueTuple{AdvancedSceneManager.Models.SceneCollection,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  name: (T1, T2)<SceneCollection, Int32>
  nameWithType: (T1, T2)<SceneCollection, Int32>
  fullName: System.ValueTuple<AdvancedSceneManager.Models.SceneCollection, System.Int32>
  nameWithType.vb: (T1, T2)(Of SceneCollection, Int32)
  fullName.vb: System.ValueTuple(Of AdvancedSceneManager.Models.SceneCollection, System.Int32)
  name.vb: (T1, T2)(Of SceneCollection, Int32)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Models.SceneCollection
    name: SceneCollection
    nameWithType: SceneCollection
    fullName: AdvancedSceneManager.Models.SceneCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Models.SceneCollection
    name: SceneCollection
    nameWithType: SceneCollection
    fullName: AdvancedSceneManager.Models.SceneCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  isExternal: true
  name: (T1, T2)<T1, T2>
  nameWithType: (T1, T2)<T1, T2>
  fullName: System.ValueTuple<T1, T2>
  nameWithType.vb: (T1, T2)(Of T1, T2)
  fullName.vb: System.ValueTuple(Of T1, T2)
  name.vb: (T1, T2)(Of T1, T2)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Editor.ScenesTab.Path*
  commentId: Overload:AdvancedSceneManager.Editor.ScenesTab.Path
  name: Path
  nameWithType: ScenesTab.Path
  fullName: AdvancedSceneManager.Editor.ScenesTab.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AdvancedSceneManager.Editor.ScenesTab.FooterButtons*
  commentId: Overload:AdvancedSceneManager.Editor.ScenesTab.FooterButtons
  name: FooterButtons
  nameWithType: ScenesTab.FooterButtons
  fullName: AdvancedSceneManager.Editor.ScenesTab.FooterButtons
- uid: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem[]
  isExternal: true
  name: SceneManagerWindow.FooterItem[]
  nameWithType: SceneManagerWindow.FooterItem[]
  fullName: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem[]
  nameWithType.vb: SceneManagerWindow.FooterItem()
  fullName.vb: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem()
  name.vb: SceneManagerWindow.FooterItem()
  spec.csharp:
  - uid: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem
    name: SceneManagerWindow.FooterItem
    nameWithType: SceneManagerWindow.FooterItem
    fullName: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem
    name: SceneManagerWindow.FooterItem
    nameWithType: SceneManagerWindow.FooterItem
    fullName: AdvancedSceneManager.Editor.SceneManagerWindow.FooterItem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AdvancedSceneManager.Editor.ScenesTab.OnReorderStart*
  commentId: Overload:AdvancedSceneManager.Editor.ScenesTab.OnReorderStart
  name: OnReorderStart
  nameWithType: ScenesTab.OnReorderStart
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnReorderStart
- uid: AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement
  commentId: T:AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement
  parent: AdvancedSceneManager.Editor
  name: SceneManagerWindow.DragAndDropReorder.DragElement
  nameWithType: SceneManagerWindow.DragAndDropReorder.DragElement
  fullName: AdvancedSceneManager.Editor.SceneManagerWindow.DragAndDropReorder.DragElement
- uid: AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd*
  commentId: Overload:AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd
  name: OnReorderEnd
  nameWithType: ScenesTab.OnReorderEnd
  fullName: AdvancedSceneManager.Editor.ScenesTab.OnReorderEnd
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
