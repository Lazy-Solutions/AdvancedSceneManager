### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper
  commentId: T:AdvancedSceneManager.Utility.PreloadedSceneHelper
  id: PreloadedSceneHelper
  parent: AdvancedSceneManager.Utility
  children:
  - AdvancedSceneManager.Utility.PreloadedSceneHelper.#ctor(AdvancedSceneManager.Core.OpenSceneInfo,System.Boolean)
  - AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard
  - AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  - AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks
  - AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded
  - AdvancedSceneManager.Utility.PreloadedSceneHelper.scene
  langs:
  - csharp
  - vb
  name: PreloadedSceneHelper
  nameWithType: PreloadedSceneHelper
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: PreloadedSceneHelper
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 29
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: An helper class to make working with preloaded scenes easier, contains method for finish loading and discarding preloaded scene.
  example: []
  syntax:
    content: public class PreloadedSceneHelper
    content.vb: Public Class PreloadedSceneHelper
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.#ctor(AdvancedSceneManager.Core.OpenSceneInfo,System.Boolean)
  commentId: M:AdvancedSceneManager.Utility.PreloadedSceneHelper.#ctor(AdvancedSceneManager.Core.OpenSceneInfo,System.Boolean)
  id: '#ctor(AdvancedSceneManager.Core.OpenSceneInfo,System.Boolean)'
  parent: AdvancedSceneManager.Utility.PreloadedSceneHelper
  langs:
  - csharp
  - vb
  name: PreloadedSceneHelper(OpenSceneInfo, Boolean)
  nameWithType: PreloadedSceneHelper.PreloadedSceneHelper(OpenSceneInfo, Boolean)
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.PreloadedSceneHelper(AdvancedSceneManager.Core.OpenSceneInfo, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: .ctor
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 32
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public PreloadedSceneHelper(OpenSceneInfo scene, bool hasRunCallbacks)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Core.OpenSceneInfo
    - id: hasRunCallbacks
      type: System.Boolean
    content.vb: Public Sub New(scene As OpenSceneInfo, hasRunCallbacks As Boolean)
  overload: AdvancedSceneManager.Utility.PreloadedSceneHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.scene
  commentId: P:AdvancedSceneManager.Utility.PreloadedSceneHelper.scene
  id: scene
  parent: AdvancedSceneManager.Utility.PreloadedSceneHelper
  langs:
  - csharp
  - vb
  name: scene
  nameWithType: PreloadedSceneHelper.scene
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.scene
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: scene
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 39
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: The scene that was preloaded.
  example: []
  syntax:
    content: public OpenSceneInfo scene { get; }
    parameters: []
    return:
      type: AdvancedSceneManager.Core.OpenSceneInfo
    content.vb: Public ReadOnly Property scene As OpenSceneInfo
  overload: AdvancedSceneManager.Utility.PreloadedSceneHelper.scene*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded
  commentId: P:AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded
  id: isStillPreloaded
  parent: AdvancedSceneManager.Utility.PreloadedSceneHelper
  langs:
  - csharp
  - vb
  name: isStillPreloaded
  nameWithType: PreloadedSceneHelper.isStillPreloaded
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isStillPreloaded
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 42
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets whatever the scene is still preloaded.
  example: []
  syntax:
    content: public bool isStillPreloaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isStillPreloaded As Boolean
  overload: AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks
  commentId: P:AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks
  id: hasRunCallbacks
  parent: AdvancedSceneManager.Utility.PreloadedSceneHelper
  langs:
  - csharp
  - vb
  name: hasRunCallbacks
  nameWithType: PreloadedSceneHelper.hasRunCallbacks
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: hasRunCallbacks
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 45
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets whatever <xref href="AdvancedSceneManager.Callbacks.ISceneOpen.OnSceneOpen" data-throw-if-not-resolved="false"></xref> callbacks has been called.
  example: []
  syntax:
    content: public bool hasRunCallbacks { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property hasRunCallbacks As Boolean
  overload: AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  commentId: M:AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  id: FinishLoading
  parent: AdvancedSceneManager.Utility.PreloadedSceneHelper
  langs:
  - csharp
  - vb
  name: FinishLoading()
  nameWithType: PreloadedSceneHelper.FinishLoading()
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: FinishLoading
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 48
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finishes loading scene.
  example: []
  syntax:
    content: public SceneOperation<OpenSceneInfo> FinishLoading()
    return:
      type: AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Core.OpenSceneInfo}
    content.vb: Public Function FinishLoading As SceneOperation(Of OpenSceneInfo)
  overload: AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard
  commentId: M:AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard
  id: Discard
  parent: AdvancedSceneManager.Utility.PreloadedSceneHelper
  langs:
  - csharp
  - vb
  name: Discard()
  nameWithType: PreloadedSceneHelper.Discard()
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Discard
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 68
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Closes the scene.
  example: []
  syntax:
    content: public SceneOperation Discard()
    return:
      type: AdvancedSceneManager.Core.SceneOperation
    content.vb: Public Function Discard As SceneOperation
  overload: AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.#ctor*
  commentId: Overload:AdvancedSceneManager.Utility.PreloadedSceneHelper.#ctor
  name: PreloadedSceneHelper
  nameWithType: PreloadedSceneHelper.PreloadedSceneHelper
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.PreloadedSceneHelper
- uid: AdvancedSceneManager.Core.OpenSceneInfo
  commentId: T:AdvancedSceneManager.Core.OpenSceneInfo
  parent: AdvancedSceneManager.Core
  name: OpenSceneInfo
  nameWithType: OpenSceneInfo
  fullName: AdvancedSceneManager.Core.OpenSceneInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Core
  commentId: N:AdvancedSceneManager.Core
  name: AdvancedSceneManager.Core
  nameWithType: AdvancedSceneManager.Core
  fullName: AdvancedSceneManager.Core
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.scene*
  commentId: Overload:AdvancedSceneManager.Utility.PreloadedSceneHelper.scene
  name: scene
  nameWithType: PreloadedSceneHelper.scene
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.scene
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded*
  commentId: Overload:AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded
  name: isStillPreloaded
  nameWithType: PreloadedSceneHelper.isStillPreloaded
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.isStillPreloaded
- uid: AdvancedSceneManager.Callbacks.ISceneOpen.OnSceneOpen
  commentId: M:AdvancedSceneManager.Callbacks.ISceneOpen.OnSceneOpen
  isExternal: true
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks*
  commentId: Overload:AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks
  name: hasRunCallbacks
  nameWithType: PreloadedSceneHelper.hasRunCallbacks
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.hasRunCallbacks
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading*
  commentId: Overload:AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  name: FinishLoading
  nameWithType: PreloadedSceneHelper.FinishLoading
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
- uid: AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Core.OpenSceneInfo}
  commentId: T:AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Core.OpenSceneInfo}
  parent: AdvancedSceneManager.Core
  definition: AdvancedSceneManager.Core.SceneOperation`1
  name: SceneOperation<OpenSceneInfo>
  nameWithType: SceneOperation<OpenSceneInfo>
  fullName: AdvancedSceneManager.Core.SceneOperation<AdvancedSceneManager.Core.OpenSceneInfo>
  nameWithType.vb: SceneOperation(Of OpenSceneInfo)
  fullName.vb: AdvancedSceneManager.Core.SceneOperation(Of AdvancedSceneManager.Core.OpenSceneInfo)
  name.vb: SceneOperation(Of OpenSceneInfo)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.SceneOperation`1
  commentId: T:AdvancedSceneManager.Core.SceneOperation`1
  parent: AdvancedSceneManager.Core
  name: SceneOperation<ReturnValue>
  nameWithType: SceneOperation<ReturnValue>
  fullName: AdvancedSceneManager.Core.SceneOperation<ReturnValue>
  nameWithType.vb: SceneOperation(Of ReturnValue)
  fullName.vb: AdvancedSceneManager.Core.SceneOperation(Of ReturnValue)
  name.vb: SceneOperation(Of ReturnValue)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: <
    nameWithType: <
    fullName: <
  - name: ReturnValue
    nameWithType: ReturnValue
    fullName: ReturnValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ReturnValue
    nameWithType: ReturnValue
    fullName: ReturnValue
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard*
  commentId: Overload:AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard
  name: Discard
  nameWithType: PreloadedSceneHelper.Discard
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper.Discard
- uid: AdvancedSceneManager.Core.SceneOperation
  commentId: T:AdvancedSceneManager.Core.SceneOperation
  parent: AdvancedSceneManager.Core
  name: SceneOperation
  nameWithType: SceneOperation
  fullName: AdvancedSceneManager.Core.SceneOperation
