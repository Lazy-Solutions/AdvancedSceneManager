### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Editor.Utility.TrimUtility
  commentId: T:AdvancedSceneManager.Editor.Utility.TrimUtility
  id: TrimUtility
  parent: AdvancedSceneManager.Editor.Utility
  children:
  - AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.Char,UnityEngine.UIElements.TextElement)
  - AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.String,UnityEngine.UIElements.TextElement)
  - AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel(UnityEngine.UIElements.TextElement,System.String,System.Func{System.Single},System.Boolean)
  langs:
  - csharp
  - vb
  name: TrimUtility
  nameWithType: TrimUtility
  fullName: AdvancedSceneManager.Editor.Utility.TrimUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: TrimUtility
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
    startLine: 13
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Applies text-overflow uss property in 2020+, but applies manual trim in earlier versions.
  example: []
  syntax:
    content: public static class TrimUtility
    content.vb: Public Module TrimUtility
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel(UnityEngine.UIElements.TextElement,System.String,System.Func{System.Single},System.Boolean)
  commentId: M:AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel(UnityEngine.UIElements.TextElement,System.String,System.Func{System.Single},System.Boolean)
  id: TrimLabel(UnityEngine.UIElements.TextElement,System.String,System.Func{System.Single},System.Boolean)
  isExtensionMethod: true
  parent: AdvancedSceneManager.Editor.Utility.TrimUtility
  langs:
  - csharp
  - vb
  name: TrimLabel(TextElement, String, Func<Single>, Boolean)
  nameWithType: TrimUtility.TrimLabel(TextElement, String, Func<Single>, Boolean)
  fullName: AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel(UnityEngine.UIElements.TextElement, System.String, System.Func<System.Single>, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: TrimLabel
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
    startLine: 17
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Trim the label and show ellipsis if too long.
  example: []
  syntax:
    content: public static void TrimLabel(this TextElement label, string text, Func<float> maxWidth, bool enableAuto)
    parameters:
    - id: label
      type: UnityEngine.UIElements.TextElement
    - id: text
      type: System.String
    - id: maxWidth
      type: System.Func{System.Single}
    - id: enableAuto
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub TrimLabel(label As TextElement, text As String, maxWidth As Func(Of Single), enableAuto As Boolean)
  overload: AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel*
  nameWithType.vb: TrimUtility.TrimLabel(TextElement, String, Func(Of Single), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel(UnityEngine.UIElements.TextElement, System.String, System.Func(Of System.Single), System.Boolean)
  name.vb: TrimLabel(TextElement, String, Func(Of Single), Boolean)
- uid: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.String,UnityEngine.UIElements.TextElement)
  commentId: M:AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.String,UnityEngine.UIElements.TextElement)
  id: GetLength(System.String,UnityEngine.UIElements.TextElement)
  parent: AdvancedSceneManager.Editor.Utility.TrimUtility
  langs:
  - csharp
  - vb
  name: GetLength(String, TextElement)
  nameWithType: TrimUtility.GetLength(String, TextElement)
  fullName: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.String, UnityEngine.UIElements.TextElement)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GetLength
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
    startLine: 77
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  syntax:
    content: public static float GetLength(string str, TextElement label)
    parameters:
    - id: str
      type: System.String
    - id: label
      type: UnityEngine.UIElements.TextElement
    return:
      type: System.Single
    content.vb: Public Shared Function GetLength(str As String, label As TextElement) As Single
  overload: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.Char,UnityEngine.UIElements.TextElement)
  commentId: M:AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.Char,UnityEngine.UIElements.TextElement)
  id: GetLength(System.Char,UnityEngine.UIElements.TextElement)
  parent: AdvancedSceneManager.Editor.Utility.TrimUtility
  langs:
  - csharp
  - vb
  name: GetLength(Char, TextElement)
  nameWithType: TrimUtility.GetLength(Char, TextElement)
  fullName: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength(System.Char, UnityEngine.UIElements.TextElement)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GetLength
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/TrimUtility.cs
    startLine: 80
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  syntax:
    content: public static float GetLength(char c, TextElement label)
    parameters:
    - id: c
      type: System.Char
    - id: label
      type: UnityEngine.UIElements.TextElement
    return:
      type: System.Single
    content.vb: Public Shared Function GetLength(c As Char, label As TextElement) As Single
  overload: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AdvancedSceneManager.Editor.Utility
  commentId: N:AdvancedSceneManager.Editor.Utility
  name: AdvancedSceneManager.Editor.Utility
  nameWithType: AdvancedSceneManager.Editor.Utility
  fullName: AdvancedSceneManager.Editor.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel*
  commentId: Overload:AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel
  name: TrimLabel
  nameWithType: TrimUtility.TrimLabel
  fullName: AdvancedSceneManager.Editor.Utility.TrimUtility.TrimLabel
- uid: UnityEngine.UIElements.TextElement
  commentId: T:UnityEngine.UIElements.TextElement
  parent: UnityEngine.UIElements
  isExternal: true
  name: TextElement
  nameWithType: TextElement
  fullName: UnityEngine.UIElements.TextElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Single}
  commentId: T:System.Func{System.Single}
  parent: System
  definition: System.Func`1
  name: Func<Single>
  nameWithType: Func<Single>
  fullName: System.Func<System.Single>
  nameWithType.vb: Func(Of Single)
  fullName.vb: System.Func(Of System.Single)
  name.vb: Func(Of Single)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: UnityEngine.UIElements
  commentId: N:UnityEngine.UIElements
  isExternal: true
  name: UnityEngine.UIElements
  nameWithType: UnityEngine.UIElements
  fullName: UnityEngine.UIElements
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength*
  commentId: Overload:AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength
  name: GetLength
  nameWithType: TrimUtility.GetLength
  fullName: AdvancedSceneManager.Editor.Utility.TrimUtility.GetLength
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
