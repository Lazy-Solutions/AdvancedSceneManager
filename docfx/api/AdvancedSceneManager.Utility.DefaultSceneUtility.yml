### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Utility.DefaultSceneUtility
  commentId: T:AdvancedSceneManager.Utility.DefaultSceneUtility
  id: DefaultSceneUtility
  parent: AdvancedSceneManager.Utility
  children:
  - AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene(UnityEngine.SceneManagement.Scene)
  - AdvancedSceneManager.Utility.DefaultSceneUtility.Name
  langs:
  - csharp
  - vb
  name: DefaultSceneUtility
  nameWithType: DefaultSceneUtility
  fullName: AdvancedSceneManager.Utility.DefaultSceneUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/DefaultSceneUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: DefaultSceneUtility
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/DefaultSceneUtility.cs
    startLine: 19
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: "\n<p>An utility class that manages the default scene, called &apos;AdvancedSceneManager&apos;.</p>\n<p>The default scene allows us to more easily close all scenes when we need to, since unity requires at least one scene to be open at any time.</p>\n"
  example: []
  syntax:
    content: public static class DefaultSceneUtility
    content.vb: Public Module DefaultSceneUtility
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AdvancedSceneManager.Utility.DefaultSceneUtility.Name
  commentId: F:AdvancedSceneManager.Utility.DefaultSceneUtility.Name
  id: Name
  parent: AdvancedSceneManager.Utility.DefaultSceneUtility
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DefaultSceneUtility.Name
  fullName: AdvancedSceneManager.Utility.DefaultSceneUtility.Name
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/DefaultSceneUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Name
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/DefaultSceneUtility.cs
    startLine: 76
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  syntax:
    content: public const string Name = "AdvancedSceneManager"
    return:
      type: System.String
    content.vb: Public Const Name As String = "AdvancedSceneManager"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene(UnityEngine.SceneManagement.Scene)
  commentId: M:AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene(UnityEngine.SceneManagement.Scene)
  id: IsDefaultScene(UnityEngine.SceneManagement.Scene)
  parent: AdvancedSceneManager.Utility.DefaultSceneUtility
  langs:
  - csharp
  - vb
  name: IsDefaultScene(Scene)
  nameWithType: DefaultSceneUtility.IsDefaultScene(Scene)
  fullName: AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene(UnityEngine.SceneManagement.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/DefaultSceneUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: IsDefaultScene
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/DefaultSceneUtility.cs
    startLine: 134
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets whatever the specified scene is the default scene.
  example: []
  syntax:
    content: public static bool IsDefaultScene(Scene scene)
    parameters:
    - id: scene
      type: UnityEngine.SceneManagement.Scene
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDefaultScene(scene As Scene) As Boolean
  overload: AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene*
  commentId: Overload:AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene
  name: IsDefaultScene
  nameWithType: DefaultSceneUtility.IsDefaultScene
  fullName: AdvancedSceneManager.Utility.DefaultSceneUtility.IsDefaultScene
- uid: UnityEngine.SceneManagement.Scene
  commentId: T:UnityEngine.SceneManagement.Scene
  parent: UnityEngine.SceneManagement
  isExternal: true
  name: Scene
  nameWithType: Scene
  fullName: UnityEngine.SceneManagement.Scene
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: UnityEngine.SceneManagement
  commentId: N:UnityEngine.SceneManagement
  isExternal: true
  name: UnityEngine.SceneManagement
  nameWithType: UnityEngine.SceneManagement
  fullName: UnityEngine.SceneManagement
