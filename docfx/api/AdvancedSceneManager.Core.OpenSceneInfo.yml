### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Core.OpenSceneInfo
  commentId: T:AdvancedSceneManager.Core.OpenSceneInfo
  id: OpenSceneInfo
  parent: AdvancedSceneManager.Core
  children:
  - AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Core.OpenSceneInfo)
  - AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Nullable{UnityEngine.SceneManagement.Scene})
  - AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Object)
  - AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEditor.SceneAsset)
  - AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEngine.SceneManagement.Scene)
  - AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode
  - AdvancedSceneManager.Core.OpenSceneInfo.isActive
  - AdvancedSceneManager.Core.OpenSceneInfo.isCollection
  - AdvancedSceneManager.Core.OpenSceneInfo.isOpen
  - AdvancedSceneManager.Core.OpenSceneInfo.isPersistent
  - AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded
  - AdvancedSceneManager.Core.OpenSceneInfo.isSpecial
  - AdvancedSceneManager.Core.OpenSceneInfo.isStandalone
  - AdvancedSceneManager.Core.OpenSceneInfo.scene
  - AdvancedSceneManager.Core.OpenSceneInfo.sceneManager
  - AdvancedSceneManager.Core.OpenSceneInfo.ToString
  - AdvancedSceneManager.Core.OpenSceneInfo.unityScene
  langs:
  - csharp
  - vb
  name: OpenSceneInfo
  nameWithType: OpenSceneInfo
  fullName: AdvancedSceneManager.Core.OpenSceneInfo
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenSceneInfo
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 13
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: >-
      [Serializable]

      public class OpenSceneInfo : IEquatable<OpenSceneInfo>, IEquatable<Scene>, IEquatable<Scene>, IEquatable<SceneAsset>
    content.vb: >-
      <Serializable>

      Public Class OpenSceneInfo
          Implements IEquatable(Of OpenSceneInfo), IEquatable(Of Scene), IEquatable(Of Scene), IEquatable(Of SceneAsset)
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Core.OpenSceneInfo.scene
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.scene
  id: scene
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: scene
  nameWithType: OpenSceneInfo.scene
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.scene
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: scene
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 35
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: The <xref href="AdvancedSceneManager.Models.Scene" data-throw-if-not-resolved="false"></xref> that this <xref href="AdvancedSceneManager.Core.OpenSceneInfo" data-throw-if-not-resolved="false"></xref> is associated with.
  example: []
  syntax:
    content: public Scene scene { get; }
    parameters: []
    return:
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public ReadOnly Property scene As Scene
  overload: AdvancedSceneManager.Core.OpenSceneInfo.scene*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.unityScene
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.unityScene
  id: unityScene
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: unityScene
  nameWithType: OpenSceneInfo.unityScene
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.unityScene
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: unityScene
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 38
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: The <xref href="UnityEngine.SceneManagement.Scene" data-throw-if-not-resolved="false"></xref> that this <xref href="AdvancedSceneManager.Core.OpenSceneInfo" data-throw-if-not-resolved="false"></xref> is associated with.
  example: []
  syntax:
    content: public Scene? unityScene { get; }
    parameters: []
    return:
      type: System.Nullable{UnityEngine.SceneManagement.Scene}
    content.vb: Public ReadOnly Property unityScene As Scene?
  overload: AdvancedSceneManager.Core.OpenSceneInfo.unityScene*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded
  id: isPreloaded
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: isPreloaded
  nameWithType: OpenSceneInfo.isPreloaded
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isPreloaded
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 41
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Gets whatever this scene is preloaded.
  example: []
  syntax:
    content: public bool isPreloaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isPreloaded As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isPersistent
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.isPersistent
  id: isPersistent
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: isPersistent
  nameWithType: OpenSceneInfo.isPersistent
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isPersistent
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isPersistent
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 44
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Gets whatever this scene is persistent. See <xref href="AdvancedSceneManager.Utility.PersistentUtility" data-throw-if-not-resolved="false"></xref> for more details.
  example: []
  syntax:
    content: public bool isPersistent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isPersistent As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.isPersistent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isCollection
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.isCollection
  id: isCollection
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: isCollection
  nameWithType: OpenSceneInfo.isCollection
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isCollection
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isCollection
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 47
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Gets whatever this scene is a collection scene.
  example: []
  syntax:
    content: public bool isCollection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isCollection As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.isCollection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isStandalone
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.isStandalone
  id: isStandalone
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: isStandalone
  nameWithType: OpenSceneInfo.isStandalone
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isStandalone
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isStandalone
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 50
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Gets whatever this scene is a collection scene.
  example: []
  syntax:
    content: public bool isStandalone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isStandalone As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.isStandalone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isSpecial
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.isSpecial
  id: isSpecial
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: isSpecial
  nameWithType: OpenSceneInfo.isSpecial
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isSpecial
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isSpecial
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 53
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Gets whatever this scene is a special scene, i.e. splash screen / loading screen.
  example: []
  syntax:
    content: public bool isSpecial { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSpecial As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.isSpecial*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isActive
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.isActive
  id: isActive
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: isActive
  nameWithType: OpenSceneInfo.isActive
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isActive
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isActive
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 59
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Gets whatever this scene is the active scene.
  example: []
  syntax:
    content: public bool isActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isActive As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.isActive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isOpen
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.isOpen
  id: isOpen
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: isOpen
  nameWithType: OpenSceneInfo.isOpen
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isOpen
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isOpen
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 70
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Gets whatever this scene is currently open.
  example: []
  syntax:
    content: public bool isOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isOpen As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.isOpen*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.sceneManager
  commentId: P:AdvancedSceneManager.Core.OpenSceneInfo.sceneManager
  id: sceneManager
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: sceneManager
  nameWithType: OpenSceneInfo.sceneManager
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.sceneManager
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: sceneManager
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 77
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: The scene manager associated with this <xref href="AdvancedSceneManager.Core.OpenSceneInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public SceneManagerBase sceneManager { get; }
    parameters: []
    return:
      type: AdvancedSceneManager.Core.SceneManagerBase
    content.vb: Public ReadOnly Property sceneManager As SceneManagerBase
  overload: AdvancedSceneManager.Core.OpenSceneInfo.sceneManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Object)
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: OpenSceneInfo.Equals(Object)
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 82
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: AdvancedSceneManager.Core.OpenSceneInfo.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode
  id: GetHashCode
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: OpenSceneInfo.GetHashCode()
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GetHashCode
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 100
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Core.OpenSceneInfo)
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Core.OpenSceneInfo)
  id: Equals(AdvancedSceneManager.Core.OpenSceneInfo)
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: Equals(OpenSceneInfo)
  nameWithType: OpenSceneInfo.Equals(OpenSceneInfo)
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Core.OpenSceneInfo)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 103
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool Equals(OpenSceneInfo osi)
    parameters:
    - id: osi
      type: AdvancedSceneManager.Core.OpenSceneInfo
    return:
      type: System.Boolean
    content.vb: Public Function Equals(osi As OpenSceneInfo) As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Models.Scene)
  id: Equals(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: Equals(Scene)
  nameWithType: OpenSceneInfo.Equals(Scene)
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.Equals(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 104
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool Equals(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    return:
      type: System.Boolean
    content.vb: Public Function Equals(scene As Scene) As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEngine.SceneManagement.Scene)
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEngine.SceneManagement.Scene)
  id: Equals(UnityEngine.SceneManagement.Scene)
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: Equals(Scene)
  nameWithType: OpenSceneInfo.Equals(Scene)
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEngine.SceneManagement.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 105
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool Equals(Scene scene)
    parameters:
    - id: scene
      type: UnityEngine.SceneManagement.Scene
    return:
      type: System.Boolean
    content.vb: Public Function Equals(scene As Scene) As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Nullable{UnityEngine.SceneManagement.Scene})
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Nullable{UnityEngine.SceneManagement.Scene})
  id: Equals(System.Nullable{UnityEngine.SceneManagement.Scene})
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: Equals(Nullable<Scene>)
  nameWithType: OpenSceneInfo.Equals(Nullable<Scene>)
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Nullable<UnityEngine.SceneManagement.Scene>)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 106
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool Equals(Scene? scene)
    parameters:
    - id: scene
      type: System.Nullable{UnityEngine.SceneManagement.Scene}
    return:
      type: System.Boolean
    content.vb: Public Function Equals(scene As Scene?) As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.Equals*
  nameWithType.vb: OpenSceneInfo.Equals(Nullable(Of Scene))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AdvancedSceneManager.Core.OpenSceneInfo.Equals(System.Nullable(Of UnityEngine.SceneManagement.Scene))
  name.vb: Equals(Nullable(Of Scene))
- uid: AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEditor.SceneAsset)
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEditor.SceneAsset)
  id: Equals(UnityEditor.SceneAsset)
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: Equals(SceneAsset)
  nameWithType: OpenSceneInfo.Equals(SceneAsset)
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.Equals(UnityEditor.SceneAsset)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 110
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool Equals(SceneAsset asset)
    parameters:
    - id: asset
      type: UnityEditor.SceneAsset
    return:
      type: System.Boolean
    content.vb: Public Function Equals(asset As SceneAsset) As Boolean
  overload: AdvancedSceneManager.Core.OpenSceneInfo.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.OpenSceneInfo.ToString
  commentId: M:AdvancedSceneManager.Core.OpenSceneInfo.ToString
  id: ToString
  parent: AdvancedSceneManager.Core.OpenSceneInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: OpenSceneInfo.ToString()
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.ToString()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ToString
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/OpenSceneInfo.cs
    startLine: 132
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: AdvancedSceneManager.Core.OpenSceneInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AdvancedSceneManager.Core
  commentId: N:AdvancedSceneManager.Core
  name: AdvancedSceneManager.Core
  nameWithType: AdvancedSceneManager.Core
  fullName: AdvancedSceneManager.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Models.Scene
  commentId: T:AdvancedSceneManager.Models.Scene
  parent: AdvancedSceneManager.Models
  name: Scene
  nameWithType: Scene
  fullName: AdvancedSceneManager.Models.Scene
- uid: AdvancedSceneManager.Core.OpenSceneInfo
  commentId: T:AdvancedSceneManager.Core.OpenSceneInfo
  parent: AdvancedSceneManager.Core
  name: OpenSceneInfo
  nameWithType: OpenSceneInfo
  fullName: AdvancedSceneManager.Core.OpenSceneInfo
- uid: AdvancedSceneManager.Core.OpenSceneInfo.scene*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.scene
  name: scene
  nameWithType: OpenSceneInfo.scene
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.scene
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
- uid: UnityEngine.SceneManagement.Scene
  commentId: T:UnityEngine.SceneManagement.Scene
  parent: UnityEngine.SceneManagement
  isExternal: true
  name: Scene
  nameWithType: Scene
  fullName: UnityEngine.SceneManagement.Scene
- uid: AdvancedSceneManager.Core.OpenSceneInfo.unityScene*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.unityScene
  name: unityScene
  nameWithType: OpenSceneInfo.unityScene
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.unityScene
- uid: System.Nullable{UnityEngine.SceneManagement.Scene}
  commentId: T:System.Nullable{UnityEngine.SceneManagement.Scene}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Scene>
  nameWithType: Nullable<Scene>
  fullName: System.Nullable<UnityEngine.SceneManagement.Scene>
  nameWithType.vb: Nullable(Of Scene)
  fullName.vb: System.Nullable(Of UnityEngine.SceneManagement.Scene)
  name.vb: Nullable(Of Scene)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.SceneManagement.Scene
    name: Scene
    nameWithType: Scene
    fullName: UnityEngine.SceneManagement.Scene
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.SceneManagement.Scene
    name: Scene
    nameWithType: Scene
    fullName: UnityEngine.SceneManagement.Scene
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.SceneManagement
  commentId: N:UnityEngine.SceneManagement
  isExternal: true
  name: UnityEngine.SceneManagement
  nameWithType: UnityEngine.SceneManagement
  fullName: UnityEngine.SceneManagement
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded
  name: isPreloaded
  nameWithType: OpenSceneInfo.isPreloaded
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isPreloaded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Utility.PersistentUtility
  commentId: T:AdvancedSceneManager.Utility.PersistentUtility
  name: PersistentUtility
  nameWithType: PersistentUtility
  fullName: AdvancedSceneManager.Utility.PersistentUtility
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isPersistent*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.isPersistent
  name: isPersistent
  nameWithType: OpenSceneInfo.isPersistent
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isPersistent
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isCollection*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.isCollection
  name: isCollection
  nameWithType: OpenSceneInfo.isCollection
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isCollection
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isStandalone*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.isStandalone
  name: isStandalone
  nameWithType: OpenSceneInfo.isStandalone
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isStandalone
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isSpecial*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.isSpecial
  name: isSpecial
  nameWithType: OpenSceneInfo.isSpecial
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isSpecial
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isActive*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.isActive
  name: isActive
  nameWithType: OpenSceneInfo.isActive
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isActive
- uid: AdvancedSceneManager.Core.OpenSceneInfo.isOpen*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.isOpen
  name: isOpen
  nameWithType: OpenSceneInfo.isOpen
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.isOpen
- uid: AdvancedSceneManager.Core.OpenSceneInfo.sceneManager*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.sceneManager
  name: sceneManager
  nameWithType: OpenSceneInfo.sceneManager
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.sceneManager
- uid: AdvancedSceneManager.Core.SceneManagerBase
  commentId: T:AdvancedSceneManager.Core.SceneManagerBase
  parent: AdvancedSceneManager.Core
  name: SceneManagerBase
  nameWithType: SceneManagerBase
  fullName: AdvancedSceneManager.Core.SceneManagerBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.OpenSceneInfo.Equals*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.Equals
  name: Equals
  nameWithType: OpenSceneInfo.Equals
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode
  name: GetHashCode
  nameWithType: OpenSceneInfo.GetHashCode
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEditor.SceneAsset
  commentId: T:UnityEditor.SceneAsset
  parent: UnityEditor
  isExternal: true
  name: SceneAsset
  nameWithType: SceneAsset
  fullName: UnityEditor.SceneAsset
- uid: UnityEditor
  commentId: N:UnityEditor
  isExternal: true
  name: UnityEditor
  nameWithType: UnityEditor
  fullName: UnityEditor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.OpenSceneInfo.ToString*
  commentId: Overload:AdvancedSceneManager.Core.OpenSceneInfo.ToString
  name: ToString
  nameWithType: OpenSceneInfo.ToString
  fullName: AdvancedSceneManager.Core.OpenSceneInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
