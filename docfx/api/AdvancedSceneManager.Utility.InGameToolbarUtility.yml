### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility
  commentId: T:AdvancedSceneManager.Utility.InGameToolbarUtility
  id: InGameToolbarUtility
  parent: AdvancedSceneManager.Utility
  children:
  - AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault
  - AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled
  - AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor
  langs:
  - csharp
  - vb
  name: InGameToolbarUtility
  nameWithType: InGameToolbarUtility
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: InGameToolbarUtility
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
    startLine: 21
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Provides an in-game toolbar that makes debugging scene management in build easier.
  remarks: Only activates in editor and developer builds, and is disabled in non dev build.
  example: []
  syntax:
    content: 'public class InGameToolbarUtility : MonoBehaviour'
    content.vb: >-
      Public Class InGameToolbarUtility
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - UnityEngine.Component.AdvancedSceneManager.Utility.SceneUtility.Scene
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled
  commentId: P:AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled
  id: isEnabled
  parent: AdvancedSceneManager.Utility.InGameToolbarUtility
  langs:
  - csharp
  - vb
  name: isEnabled
  nameWithType: InGameToolbarUtility.isEnabled
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isEnabled
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
    startLine: 37
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public static bool isEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property isEnabled As Boolean
  overload: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault
  commentId: P:AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault
  id: expandedByDefault
  parent: AdvancedSceneManager.Utility.InGameToolbarUtility
  langs:
  - csharp
  - vb
  name: expandedByDefault
  nameWithType: InGameToolbarUtility.expandedByDefault
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: expandedByDefault
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
    startLine: 44
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  example: []
  syntax:
    content: public static bool expandedByDefault { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property expandedByDefault As Boolean
  overload: AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor
  commentId: P:AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor
  id: isEnabledInEditor
  parent: AdvancedSceneManager.Utility.InGameToolbarUtility
  langs:
  - csharp
  - vb
  name: isEnabledInEditor
  nameWithType: InGameToolbarUtility.isEnabledInEditor
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isEnabledInEditor
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/InGameToolbarUtility.cs
    startLine: 53
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Enables or disables <xref href="AdvancedSceneManager.Utility.InGameToolbarUtility" data-throw-if-not-resolved="false"></xref> in editor.
  example: []
  syntax:
    content: public static bool isEnabledInEditor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property isEnabledInEditor As Boolean
  overload: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: UnityEngine.Component.AdvancedSceneManager.Utility.SceneUtility.Scene
  commentId: M:AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  parent: AdvancedSceneManager.Utility.SceneUtility
  definition: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  name: Scene()
  nameWithType: SceneUtility.Scene()
  fullName: AdvancedSceneManager.Utility.SceneUtility.Scene()
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  commentId: M:AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  isExternal: true
  name: Scene(Component)
  nameWithType: SceneUtility.Scene(Component)
  fullName: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.SceneUtility.Scene(UnityEngine.Component)
    name: Scene
    nameWithType: SceneUtility.Scene
    fullName: AdvancedSceneManager.Utility.SceneUtility.Scene
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.SceneUtility
  commentId: T:AdvancedSceneManager.Utility.SceneUtility
  parent: AdvancedSceneManager.Utility
  name: SceneUtility
  nameWithType: SceneUtility
  fullName: AdvancedSceneManager.Utility.SceneUtility
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled*
  commentId: Overload:AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled
  name: isEnabled
  nameWithType: InGameToolbarUtility.isEnabled
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault*
  commentId: Overload:AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault
  name: expandedByDefault
  nameWithType: InGameToolbarUtility.expandedByDefault
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility.expandedByDefault
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility
  commentId: T:AdvancedSceneManager.Utility.InGameToolbarUtility
  name: InGameToolbarUtility
  nameWithType: InGameToolbarUtility
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility
- uid: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor*
  commentId: Overload:AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor
  name: isEnabledInEditor
  nameWithType: InGameToolbarUtility.isEnabledInEditor
  fullName: AdvancedSceneManager.Utility.InGameToolbarUtility.isEnabledInEditor
