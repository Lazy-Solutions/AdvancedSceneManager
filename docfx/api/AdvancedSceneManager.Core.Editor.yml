### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Core.Editor
  commentId: T:AdvancedSceneManager.Core.Editor
  id: Editor
  parent: AdvancedSceneManager.Core
  children:
  - AdvancedSceneManager.Core.Editor.CanClose(AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.Scene,System.Boolean)
  - AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  - AdvancedSceneManager.Core.Editor.Close(UnityEngine.SceneManagement.Scene,System.Boolean)
  - AdvancedSceneManager.Core.Editor.CloseAll(System.Boolean)
  - AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  - AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.Scene,System.Boolean)
  - AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean,System.Boolean)
  - AdvancedSceneManager.Core.Editor.OpenSingle(AdvancedSceneManager.Models.Scene,System.Boolean)
  - AdvancedSceneManager.Core.Editor.OpenSingle(UnityEditor.SceneAsset,System.Boolean)
  - AdvancedSceneManager.Core.Editor.scenesUpdated
  langs:
  - csharp
  - vb
  name: Editor
  nameWithType: Editor
  fullName: AdvancedSceneManager.Core.Editor
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Editor
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 24
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: A simplified scene manager for managing scenes in editor.
  remarks: Only available in editor.
  example: []
  syntax:
    content: public class Editor
    content.vb: Public Class Editor
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Core.Editor.scenesUpdated
  commentId: E:AdvancedSceneManager.Core.Editor.scenesUpdated
  id: scenesUpdated
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: scenesUpdated
  nameWithType: Editor.scenesUpdated
  fullName: AdvancedSceneManager.Core.Editor.scenesUpdated
  type: Event
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: scenesUpdated
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 27
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public event Action scenesUpdated
    return:
      type: System.Action
    content.vb: Public Event scenesUpdated As Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.OpenSingle(UnityEditor.SceneAsset,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.OpenSingle(UnityEditor.SceneAsset,System.Boolean)
  id: OpenSingle(UnityEditor.SceneAsset,System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: OpenSingle(SceneAsset, Boolean)
  nameWithType: Editor.OpenSingle(SceneAsset, Boolean)
  fullName: AdvancedSceneManager.Core.Editor.OpenSingle(UnityEditor.SceneAsset, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenSingle
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 123
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public void OpenSingle(SceneAsset scene, bool promptSave = true)
    parameters:
    - id: scene
      type: UnityEditor.SceneAsset
    - id: promptSave
      type: System.Boolean
    content.vb: Public Sub OpenSingle(scene As SceneAsset, promptSave As Boolean = True)
  overload: AdvancedSceneManager.Core.Editor.OpenSingle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.OpenSingle(AdvancedSceneManager.Models.Scene,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.OpenSingle(AdvancedSceneManager.Models.Scene,System.Boolean)
  id: OpenSingle(AdvancedSceneManager.Models.Scene,System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: OpenSingle(Scene, Boolean)
  nameWithType: Editor.OpenSingle(Scene, Boolean)
  fullName: AdvancedSceneManager.Core.Editor.OpenSingle(AdvancedSceneManager.Models.Scene, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenSingle
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 132
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public void OpenSingle(Scene scene, bool promptSave = true)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    - id: promptSave
      type: System.Boolean
    content.vb: Public Sub OpenSingle(scene As Scene, promptSave As Boolean = True)
  overload: AdvancedSceneManager.Core.Editor.OpenSingle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.Scene,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.Scene,System.Boolean)
  id: Open(AdvancedSceneManager.Models.Scene,System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: Open(Scene, Boolean)
  nameWithType: Editor.Open(Scene, Boolean)
  fullName: AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.Scene, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Open
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 152
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public Scene? Open(Scene scene, bool promptSave = true)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    - id: promptSave
      type: System.Boolean
    return:
      type: System.Nullable{UnityEngine.SceneManagement.Scene}
    content.vb: Public Function Open(scene As Scene, promptSave As Boolean = True) As Scene?
  overload: AdvancedSceneManager.Core.Editor.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  id: IsOpen(AdvancedSceneManager.Models.SceneCollection)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: IsOpen(SceneCollection)
  nameWithType: Editor.IsOpen(SceneCollection)
  fullName: AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.SceneCollection)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: IsOpen
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 174
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool IsOpen(SceneCollection collection)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    return:
      type: System.Boolean
    content.vb: Public Function IsOpen(collection As SceneCollection) As Boolean
  overload: AdvancedSceneManager.Core.Editor.IsOpen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.CanClose(AdvancedSceneManager.Models.SceneCollection)
  commentId: M:AdvancedSceneManager.Core.Editor.CanClose(AdvancedSceneManager.Models.SceneCollection)
  id: CanClose(AdvancedSceneManager.Models.SceneCollection)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: CanClose(SceneCollection)
  nameWithType: Editor.CanClose(SceneCollection)
  fullName: AdvancedSceneManager.Core.Editor.CanClose(AdvancedSceneManager.Models.SceneCollection)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: CanClose
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 175
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool CanClose(SceneCollection collection)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    return:
      type: System.Boolean
    content.vb: Public Function CanClose(collection As SceneCollection) As Boolean
  overload: AdvancedSceneManager.Core.Editor.CanClose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean,System.Boolean)
  id: Open(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean,System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: Open(SceneCollection, Boolean, Boolean, Boolean)
  nameWithType: Editor.Open(SceneCollection, Boolean, Boolean, Boolean)
  fullName: AdvancedSceneManager.Core.Editor.Open(AdvancedSceneManager.Models.SceneCollection, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Open
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 177
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public void Open(SceneCollection collection, bool additive = false, bool promptSave = true, bool forceOpenAllScenes = false)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    - id: additive
      type: System.Boolean
    - id: promptSave
      type: System.Boolean
    - id: forceOpenAllScenes
      type: System.Boolean
    content.vb: Public Sub Open(collection As SceneCollection, additive As Boolean = False, promptSave As Boolean = True, forceOpenAllScenes As Boolean = False)
  overload: AdvancedSceneManager.Core.Editor.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  id: Close(AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: Close(SceneCollection, Boolean)
  nameWithType: Editor.Close(SceneCollection, Boolean)
  fullName: AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.SceneCollection, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Close
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 214
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public void Close(SceneCollection collection, bool promptSave = true)
    parameters:
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    - id: promptSave
      type: System.Boolean
    content.vb: Public Sub Close(collection As SceneCollection, promptSave As Boolean = True)
  overload: AdvancedSceneManager.Core.Editor.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.Scene,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.Scene,System.Boolean)
  id: Close(AdvancedSceneManager.Models.Scene,System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: Close(Scene, Boolean)
  nameWithType: Editor.Close(Scene, Boolean)
  fullName: AdvancedSceneManager.Core.Editor.Close(AdvancedSceneManager.Models.Scene, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Close
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 236
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public void Close(Scene scene, bool promptSave = true)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    - id: promptSave
      type: System.Boolean
    content.vb: Public Sub Close(scene As Scene, promptSave As Boolean = True)
  overload: AdvancedSceneManager.Core.Editor.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.Close(UnityEngine.SceneManagement.Scene,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.Close(UnityEngine.SceneManagement.Scene,System.Boolean)
  id: Close(UnityEngine.SceneManagement.Scene,System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: Close(Scene, Boolean)
  nameWithType: Editor.Close(Scene, Boolean)
  fullName: AdvancedSceneManager.Core.Editor.Close(UnityEngine.SceneManagement.Scene, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Close
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 248
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public void Close(Scene scene, bool promptSave = true)
    parameters:
    - id: scene
      type: UnityEngine.SceneManagement.Scene
    - id: promptSave
      type: System.Boolean
    content.vb: Public Sub Close(scene As Scene, promptSave As Boolean = True)
  overload: AdvancedSceneManager.Core.Editor.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.CloseAll(System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Editor.CloseAll(System.Boolean)
  id: CloseAll(System.Boolean)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: CloseAll(Boolean)
  nameWithType: Editor.CloseAll(Boolean)
  fullName: AdvancedSceneManager.Core.Editor.CloseAll(System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: CloseAll
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 264
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public void CloseAll(bool promptSave = true)
    parameters:
    - id: promptSave
      type: System.Boolean
    content.vb: Public Sub CloseAll(promptSave As Boolean = True)
  overload: AdvancedSceneManager.Core.Editor.CloseAll*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.Scene)
  id: IsOpen(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Core.Editor
  langs:
  - csharp
  - vb
  name: IsOpen(Scene)
  nameWithType: Editor.IsOpen(Scene)
  fullName: AdvancedSceneManager.Core.Editor.IsOpen(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: IsOpen
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/EditorManager.cs
    startLine: 284
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public bool IsOpen(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    return:
      type: System.Boolean
    content.vb: Public Function IsOpen(scene As Scene) As Boolean
  overload: AdvancedSceneManager.Core.Editor.IsOpen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AdvancedSceneManager.Core
  commentId: N:AdvancedSceneManager.Core
  name: AdvancedSceneManager.Core
  nameWithType: AdvancedSceneManager.Core
  fullName: AdvancedSceneManager.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: AdvancedSceneManager.Core.Editor.OpenSingle*
  commentId: Overload:AdvancedSceneManager.Core.Editor.OpenSingle
  name: OpenSingle
  nameWithType: Editor.OpenSingle
  fullName: AdvancedSceneManager.Core.Editor.OpenSingle
- uid: UnityEditor.SceneAsset
  commentId: T:UnityEditor.SceneAsset
  parent: UnityEditor
  isExternal: true
  name: SceneAsset
  nameWithType: SceneAsset
  fullName: UnityEditor.SceneAsset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: UnityEditor
  commentId: N:UnityEditor
  isExternal: true
  name: UnityEditor
  nameWithType: UnityEditor
  fullName: UnityEditor
- uid: AdvancedSceneManager.Models.Scene
  commentId: T:AdvancedSceneManager.Models.Scene
  parent: AdvancedSceneManager.Models
  name: Scene
  nameWithType: Scene
  fullName: AdvancedSceneManager.Models.Scene
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
- uid: AdvancedSceneManager.Core.Editor.Open*
  commentId: Overload:AdvancedSceneManager.Core.Editor.Open
  name: Open
  nameWithType: Editor.Open
  fullName: AdvancedSceneManager.Core.Editor.Open
- uid: System.Nullable{UnityEngine.SceneManagement.Scene}
  commentId: T:System.Nullable{UnityEngine.SceneManagement.Scene}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Scene>
  nameWithType: Nullable<Scene>
  fullName: System.Nullable<UnityEngine.SceneManagement.Scene>
  nameWithType.vb: Nullable(Of Scene)
  fullName.vb: System.Nullable(Of UnityEngine.SceneManagement.Scene)
  name.vb: Nullable(Of Scene)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.SceneManagement.Scene
    name: Scene
    nameWithType: Scene
    fullName: UnityEngine.SceneManagement.Scene
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.SceneManagement.Scene
    name: Scene
    nameWithType: Scene
    fullName: UnityEngine.SceneManagement.Scene
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Editor.IsOpen*
  commentId: Overload:AdvancedSceneManager.Core.Editor.IsOpen
  name: IsOpen
  nameWithType: Editor.IsOpen
  fullName: AdvancedSceneManager.Core.Editor.IsOpen
- uid: AdvancedSceneManager.Models.SceneCollection
  commentId: T:AdvancedSceneManager.Models.SceneCollection
  parent: AdvancedSceneManager.Models
  name: SceneCollection
  nameWithType: SceneCollection
  fullName: AdvancedSceneManager.Models.SceneCollection
- uid: AdvancedSceneManager.Core.Editor.CanClose*
  commentId: Overload:AdvancedSceneManager.Core.Editor.CanClose
  name: CanClose
  nameWithType: Editor.CanClose
  fullName: AdvancedSceneManager.Core.Editor.CanClose
- uid: AdvancedSceneManager.Core.Editor.Close*
  commentId: Overload:AdvancedSceneManager.Core.Editor.Close
  name: Close
  nameWithType: Editor.Close
  fullName: AdvancedSceneManager.Core.Editor.Close
- uid: UnityEngine.SceneManagement.Scene
  commentId: T:UnityEngine.SceneManagement.Scene
  parent: UnityEngine.SceneManagement
  isExternal: true
  name: Scene
  nameWithType: Scene
  fullName: UnityEngine.SceneManagement.Scene
- uid: UnityEngine.SceneManagement
  commentId: N:UnityEngine.SceneManagement
  isExternal: true
  name: UnityEngine.SceneManagement
  nameWithType: UnityEngine.SceneManagement
  fullName: UnityEngine.SceneManagement
- uid: AdvancedSceneManager.Core.Editor.CloseAll*
  commentId: Overload:AdvancedSceneManager.Core.Editor.CloseAll
  name: CloseAll
  nameWithType: Editor.CloseAll
  fullName: AdvancedSceneManager.Core.Editor.CloseAll
