### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Models.SceneTag
  commentId: T:AdvancedSceneManager.Models.SceneTag
  id: SceneTag
  parent: AdvancedSceneManager.Models
  children:
  - AdvancedSceneManager.Models.SceneTag.#ctor
  - AdvancedSceneManager.Models.SceneTag.#ctor(System.String,System.Nullable{UnityEngine.Color},System.String)
  - AdvancedSceneManager.Models.SceneTag.closeBehavior
  - AdvancedSceneManager.Models.SceneTag.color
  - AdvancedSceneManager.Models.SceneTag.Default
  - AdvancedSceneManager.Models.SceneTag.DoNotOpen
  - AdvancedSceneManager.Models.SceneTag.Equals(AdvancedSceneManager.Models.SceneTag)
  - AdvancedSceneManager.Models.SceneTag.Equals(System.Object)
  - AdvancedSceneManager.Models.SceneTag.Find(System.String)
  - AdvancedSceneManager.Models.SceneTag.GetHashCode
  - AdvancedSceneManager.Models.SceneTag.id
  - AdvancedSceneManager.Models.SceneTag.label
  - AdvancedSceneManager.Models.SceneTag.name
  - AdvancedSceneManager.Models.SceneTag.op_Equality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  - AdvancedSceneManager.Models.SceneTag.op_Inequality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  - AdvancedSceneManager.Models.SceneTag.openBehavior
  - AdvancedSceneManager.Models.SceneTag.Persistent
  - AdvancedSceneManager.Models.SceneTag.PersistIfRequired
  - AdvancedSceneManager.Models.SceneTag.ToString
  langs:
  - csharp
  - vb
  name: SceneTag
  nameWithType: SceneTag
  fullName: AdvancedSceneManager.Models.SceneTag
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: SceneTag
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 48
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  summary: A layer that makes it easier to identify certain scenes.
  example: []
  syntax:
    content: >-
      [Serializable]

      public class SceneTag
    content.vb: >-
      <Serializable>

      Public Class SceneTag
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Models.SceneTag.Default
  commentId: F:AdvancedSceneManager.Models.SceneTag.Default
  id: Default
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: SceneTag.Default
  fullName: AdvancedSceneManager.Models.SceneTag.Default
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Default
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 55
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public static readonly SceneTag Default
    return:
      type: AdvancedSceneManager.Models.SceneTag
    content.vb: Public Shared ReadOnly Default As SceneTag
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AdvancedSceneManager.Models.SceneTag.DoNotOpen
  commentId: F:AdvancedSceneManager.Models.SceneTag.DoNotOpen
  id: DoNotOpen
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: DoNotOpen
  nameWithType: SceneTag.DoNotOpen
  fullName: AdvancedSceneManager.Models.SceneTag.DoNotOpen
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: DoNotOpen
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 56
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public static readonly SceneTag DoNotOpen
    return:
      type: AdvancedSceneManager.Models.SceneTag
    content.vb: Public Shared ReadOnly DoNotOpen As SceneTag
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AdvancedSceneManager.Models.SceneTag.Persistent
  commentId: F:AdvancedSceneManager.Models.SceneTag.Persistent
  id: Persistent
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: Persistent
  nameWithType: SceneTag.Persistent
  fullName: AdvancedSceneManager.Models.SceneTag.Persistent
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Persistent
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 57
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public static readonly SceneTag Persistent
    return:
      type: AdvancedSceneManager.Models.SceneTag
    content.vb: Public Shared ReadOnly Persistent As SceneTag
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AdvancedSceneManager.Models.SceneTag.PersistIfRequired
  commentId: F:AdvancedSceneManager.Models.SceneTag.PersistIfRequired
  id: PersistIfRequired
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: PersistIfRequired
  nameWithType: SceneTag.PersistIfRequired
  fullName: AdvancedSceneManager.Models.SceneTag.PersistIfRequired
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: PersistIfRequired
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 58
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public static readonly SceneTag PersistIfRequired
    return:
      type: AdvancedSceneManager.Models.SceneTag
    content.vb: Public Shared ReadOnly PersistIfRequired As SceneTag
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AdvancedSceneManager.Models.SceneTag.#ctor
  commentId: M:AdvancedSceneManager.Models.SceneTag.#ctor
  id: '#ctor'
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: SceneTag()
  nameWithType: SceneTag.SceneTag()
  fullName: AdvancedSceneManager.Models.SceneTag.SceneTag()
  type: Constructor
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: .ctor
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 60
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: >-
      [Obsolete]

      public SceneTag()
    content.vb: >-
      <Obsolete>

      Public Sub New
  overload: AdvancedSceneManager.Models.SceneTag.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.#ctor(System.String,System.Nullable{UnityEngine.Color},System.String)
  commentId: M:AdvancedSceneManager.Models.SceneTag.#ctor(System.String,System.Nullable{UnityEngine.Color},System.String)
  id: '#ctor(System.String,System.Nullable{UnityEngine.Color},System.String)'
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: SceneTag(String, Nullable<Color>, String)
  nameWithType: SceneTag.SceneTag(String, Nullable<Color>, String)
  fullName: AdvancedSceneManager.Models.SceneTag.SceneTag(System.String, System.Nullable<UnityEngine.Color>, System.String)
  type: Constructor
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: .ctor
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 64
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public SceneTag(string title, Color? color = null, string id = null)
    parameters:
    - id: title
      type: System.String
    - id: color
      type: System.Nullable{UnityEngine.Color}
    - id: id
      type: System.String
    content.vb: Public Sub New(title As String, color As Color? = Nothing, id As String = Nothing)
  overload: AdvancedSceneManager.Models.SceneTag.#ctor*
  nameWithType.vb: SceneTag.SceneTag(String, Nullable(Of Color), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AdvancedSceneManager.Models.SceneTag.SceneTag(System.String, System.Nullable(Of UnityEngine.Color), System.String)
  name.vb: SceneTag(String, Nullable(Of Color), String)
- uid: AdvancedSceneManager.Models.SceneTag.name
  commentId: F:AdvancedSceneManager.Models.SceneTag.name
  id: name
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: name
  nameWithType: SceneTag.name
  fullName: AdvancedSceneManager.Models.SceneTag.name
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: name
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 71
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.label
  commentId: F:AdvancedSceneManager.Models.SceneTag.label
  id: label
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: label
  nameWithType: SceneTag.label
  fullName: AdvancedSceneManager.Models.SceneTag.label
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: label
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 72
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public string label
    return:
      type: System.String
    content.vb: Public label As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.id
  commentId: F:AdvancedSceneManager.Models.SceneTag.id
  id: id
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: id
  nameWithType: SceneTag.id
  fullName: AdvancedSceneManager.Models.SceneTag.id
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: id
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 73
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public string id
    return:
      type: System.String
    content.vb: Public id As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.color
  commentId: F:AdvancedSceneManager.Models.SceneTag.color
  id: color
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: color
  nameWithType: SceneTag.color
  fullName: AdvancedSceneManager.Models.SceneTag.color
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: color
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 74
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public Color color
    return:
      type: UnityEngine.Color
    content.vb: Public color As Color
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.closeBehavior
  commentId: F:AdvancedSceneManager.Models.SceneTag.closeBehavior
  id: closeBehavior
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: closeBehavior
  nameWithType: SceneTag.closeBehavior
  fullName: AdvancedSceneManager.Models.SceneTag.closeBehavior
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: closeBehavior
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 77
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  summary: Specifies how the scene should behave when a <xref href="AdvancedSceneManager.Models.SceneCollection" data-throw-if-not-resolved="false"></xref> is closed.
  example: []
  syntax:
    content: public SceneCloseBehavior closeBehavior
    return:
      type: AdvancedSceneManager.Models.SceneCloseBehavior
    content.vb: Public closeBehavior As SceneCloseBehavior
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.openBehavior
  commentId: F:AdvancedSceneManager.Models.SceneTag.openBehavior
  id: openBehavior
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: openBehavior
  nameWithType: SceneTag.openBehavior
  fullName: AdvancedSceneManager.Models.SceneTag.openBehavior
  type: Field
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: openBehavior
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 80
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  summary: Specifies how the scene should behave when a <xref href="AdvancedSceneManager.Models.SceneCollection" data-throw-if-not-resolved="false"></xref> is opened.
  example: []
  syntax:
    content: public SceneOpenBehavior openBehavior
    return:
      type: AdvancedSceneManager.Models.SceneOpenBehavior
    content.vb: Public openBehavior As SceneOpenBehavior
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.Find(System.String)
  commentId: M:AdvancedSceneManager.Models.SceneTag.Find(System.String)
  id: Find(System.String)
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: Find(String)
  nameWithType: SceneTag.Find(String)
  fullName: AdvancedSceneManager.Models.SceneTag.Find(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Find
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 82
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public static SceneTag Find(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: AdvancedSceneManager.Models.SceneTag
    content.vb: Public Shared Function Find(id As String) As SceneTag
  overload: AdvancedSceneManager.Models.SceneTag.Find*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Models.SceneTag.Equals(System.Object)
  commentId: M:AdvancedSceneManager.Models.SceneTag.Equals(System.Object)
  id: Equals(System.Object)
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SceneTag.Equals(Object)
  fullName: AdvancedSceneManager.Models.SceneTag.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 89
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: AdvancedSceneManager.Models.SceneTag.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AdvancedSceneManager.Models.SceneTag.GetHashCode
  commentId: M:AdvancedSceneManager.Models.SceneTag.GetHashCode
  id: GetHashCode
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SceneTag.GetHashCode()
  fullName: AdvancedSceneManager.Models.SceneTag.GetHashCode()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GetHashCode
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 92
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: AdvancedSceneManager.Models.SceneTag.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AdvancedSceneManager.Models.SceneTag.Equals(AdvancedSceneManager.Models.SceneTag)
  commentId: M:AdvancedSceneManager.Models.SceneTag.Equals(AdvancedSceneManager.Models.SceneTag)
  id: Equals(AdvancedSceneManager.Models.SceneTag)
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: Equals(SceneTag)
  nameWithType: SceneTag.Equals(SceneTag)
  fullName: AdvancedSceneManager.Models.SceneTag.Equals(AdvancedSceneManager.Models.SceneTag)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Equals
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 95
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public bool Equals(SceneTag layer)
    parameters:
    - id: layer
      type: AdvancedSceneManager.Models.SceneTag
    return:
      type: System.Boolean
    content.vb: Public Function Equals(layer As SceneTag) As Boolean
  overload: AdvancedSceneManager.Models.SceneTag.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Models.SceneTag.op_Equality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  commentId: M:AdvancedSceneManager.Models.SceneTag.op_Equality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  id: op_Equality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: Equality(SceneTag, SceneTag)
  nameWithType: SceneTag.Equality(SceneTag, SceneTag)
  fullName: AdvancedSceneManager.Models.SceneTag.Equality(AdvancedSceneManager.Models.SceneTag, AdvancedSceneManager.Models.SceneTag)
  type: Operator
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: op_Equality
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 98
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public static bool operator ==(SceneTag left, SceneTag right)
    parameters:
    - id: left
      type: AdvancedSceneManager.Models.SceneTag
    - id: right
      type: AdvancedSceneManager.Models.SceneTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As SceneTag, right As SceneTag) As Boolean
  overload: AdvancedSceneManager.Models.SceneTag.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Models.SceneTag.op_Inequality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  commentId: M:AdvancedSceneManager.Models.SceneTag.op_Inequality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  id: op_Inequality(AdvancedSceneManager.Models.SceneTag,AdvancedSceneManager.Models.SceneTag)
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: Inequality(SceneTag, SceneTag)
  nameWithType: SceneTag.Inequality(SceneTag, SceneTag)
  fullName: AdvancedSceneManager.Models.SceneTag.Inequality(AdvancedSceneManager.Models.SceneTag, AdvancedSceneManager.Models.SceneTag)
  type: Operator
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: op_Inequality
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 101
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public static bool operator !=(SceneTag left, SceneTag right)
    parameters:
    - id: left
      type: AdvancedSceneManager.Models.SceneTag
    - id: right
      type: AdvancedSceneManager.Models.SceneTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As SceneTag, right As SceneTag) As Boolean
  overload: AdvancedSceneManager.Models.SceneTag.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Models.SceneTag.ToString
  commentId: M:AdvancedSceneManager.Models.SceneTag.ToString
  id: ToString
  parent: AdvancedSceneManager.Models.SceneTag
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SceneTag.ToString()
  fullName: AdvancedSceneManager.Models.SceneTag.ToString()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ToString
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Models/SceneTag.cs
    startLine: 106
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Models
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: AdvancedSceneManager.Models.SceneTag.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Models.SceneTag
  commentId: T:AdvancedSceneManager.Models.SceneTag
  parent: AdvancedSceneManager.Models
  name: SceneTag
  nameWithType: SceneTag
  fullName: AdvancedSceneManager.Models.SceneTag
- uid: AdvancedSceneManager.Models.SceneTag.#ctor*
  commentId: Overload:AdvancedSceneManager.Models.SceneTag.#ctor
  name: SceneTag
  nameWithType: SceneTag.SceneTag
  fullName: AdvancedSceneManager.Models.SceneTag.SceneTag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<UnityEngine.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of UnityEngine.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: AdvancedSceneManager.Models.SceneCollection
  commentId: T:AdvancedSceneManager.Models.SceneCollection
  parent: AdvancedSceneManager.Models
  name: SceneCollection
  nameWithType: SceneCollection
  fullName: AdvancedSceneManager.Models.SceneCollection
- uid: AdvancedSceneManager.Models.SceneCloseBehavior
  commentId: T:AdvancedSceneManager.Models.SceneCloseBehavior
  parent: AdvancedSceneManager.Models
  name: SceneCloseBehavior
  nameWithType: SceneCloseBehavior
  fullName: AdvancedSceneManager.Models.SceneCloseBehavior
- uid: AdvancedSceneManager.Models.SceneOpenBehavior
  commentId: T:AdvancedSceneManager.Models.SceneOpenBehavior
  parent: AdvancedSceneManager.Models
  name: SceneOpenBehavior
  nameWithType: SceneOpenBehavior
  fullName: AdvancedSceneManager.Models.SceneOpenBehavior
- uid: AdvancedSceneManager.Models.SceneTag.Find*
  commentId: Overload:AdvancedSceneManager.Models.SceneTag.Find
  name: Find
  nameWithType: SceneTag.Find
  fullName: AdvancedSceneManager.Models.SceneTag.Find
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Models.SceneTag.Equals*
  commentId: Overload:AdvancedSceneManager.Models.SceneTag.Equals
  name: Equals
  nameWithType: SceneTag.Equals
  fullName: AdvancedSceneManager.Models.SceneTag.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Models.SceneTag.GetHashCode*
  commentId: Overload:AdvancedSceneManager.Models.SceneTag.GetHashCode
  name: GetHashCode
  nameWithType: SceneTag.GetHashCode
  fullName: AdvancedSceneManager.Models.SceneTag.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AdvancedSceneManager.Models.SceneTag.op_Equality*
  commentId: Overload:AdvancedSceneManager.Models.SceneTag.op_Equality
  name: Equality
  nameWithType: SceneTag.Equality
  fullName: AdvancedSceneManager.Models.SceneTag.Equality
- uid: AdvancedSceneManager.Models.SceneTag.op_Inequality*
  commentId: Overload:AdvancedSceneManager.Models.SceneTag.op_Inequality
  name: Inequality
  nameWithType: SceneTag.Inequality
  fullName: AdvancedSceneManager.Models.SceneTag.Inequality
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Models.SceneTag.ToString*
  commentId: Overload:AdvancedSceneManager.Models.SceneTag.ToString
  name: ToString
  nameWithType: SceneTag.ToString
  fullName: AdvancedSceneManager.Models.SceneTag.ToString
