### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Core.Actions.SceneAction
  commentId: T:AdvancedSceneManager.Core.Actions.SceneAction
  id: SceneAction
  parent: AdvancedSceneManager.Core.Actions
  children:
  - AdvancedSceneManager.Core.Actions.SceneAction.collection
  - AdvancedSceneManager.Core.Actions.SceneAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  - AdvancedSceneManager.Core.Actions.SceneAction.Done
  - AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  - AdvancedSceneManager.Core.Actions.SceneAction.isDone
  - AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  - AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  - AdvancedSceneManager.Core.Actions.SceneAction.openScene
  - AdvancedSceneManager.Core.Actions.SceneAction.progress
  - AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  - AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  - AdvancedSceneManager.Core.Actions.SceneAction.scene
  - AdvancedSceneManager.Core.Actions.SceneAction.ToString
  - AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  langs:
  - csharp
  - vb
  name: SceneAction
  nameWithType: SceneAction
  fullName: AdvancedSceneManager.Core.Actions.SceneAction
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: SceneAction
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 10
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: The base class of all scene actions. The scene actions perform an specific action on a <xref href="AdvancedSceneManager.Models.Scene" data-throw-if-not-resolved="false"></xref> when contained within a <xref href="AdvancedSceneManager.Core.SceneOperation" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public abstract class SceneAction
    content.vb: Public MustInherit Class SceneAction
  inheritance:
  - System.Object
  derivedClasses:
  - AdvancedSceneManager.Core.Actions.AggregateAction
  - AdvancedSceneManager.Core.Actions.CallbackAction
  - AdvancedSceneManager.Core.Actions.CloseAllUnityScenesAction
  - AdvancedSceneManager.Core.Actions.OpenAndRunCallbackAction`1
  - AdvancedSceneManager.Core.Actions.OpenStartupCollections
  - AdvancedSceneManager.Core.Actions.OverridableAction`1
  - AdvancedSceneManager.Core.Actions.PlaySplashScreenAction
  - AdvancedSceneManager.Core.Actions.QuitAction
  - AdvancedSceneManager.Core.Actions.RunCallbackAndCloseAction`1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  id: reportsProgress
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: reportsProgress
  nameWithType: SceneAction.reportsProgress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: reportsProgress
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 30
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: Gets whatever this action reports progress.
  example: []
  syntax:
    content: public virtual bool reportsProgress { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property reportsProgress As Boolean
  overload: AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: AdvancedSceneManager.Core.Actions.SceneAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  id: DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: DoAction(SceneManagerBase)
  nameWithType: SceneAction.DoAction(SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: DoAction
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 32
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public abstract IEnumerator DoAction(SceneManagerBase _sceneManager)
    parameters:
    - id: _sceneManager
      type: AdvancedSceneManager.Core.SceneManagerBase
    return:
      type: System.Collections.IEnumerator
    content.vb: Public MustOverride Function DoAction(_sceneManager As SceneManagerBase) As IEnumerator
  overload: AdvancedSceneManager.Core.Actions.SceneAction.DoAction*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: AdvancedSceneManager.Core.Actions.SceneAction.openScene
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.openScene
  id: openScene
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: openScene
  nameWithType: SceneAction.openScene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.openScene
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: openScene
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 34
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public OpenSceneInfo openScene { get; set; }
    parameters: []
    return:
      type: AdvancedSceneManager.Core.OpenSceneInfo
    content.vb: Public Property openScene As OpenSceneInfo
  overload: AdvancedSceneManager.Core.Actions.SceneAction.openScene*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Actions.SceneAction.scene
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.scene
  id: scene
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: scene
  nameWithType: SceneAction.scene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.scene
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: scene
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 37
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: The scene this <xref href="AdvancedSceneManager.Core.Actions.SceneAction" data-throw-if-not-resolved="false"></xref> is performing its action on.
  example: []
  syntax:
    content: public Scene scene { get; protected set; }
    parameters: []
    return:
      type: AdvancedSceneManager.Models.Scene
    content.vb: Public Property scene As Scene
  overload: AdvancedSceneManager.Core.Actions.SceneAction.scene*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: AdvancedSceneManager.Core.Actions.SceneAction.collection
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.collection
  id: collection
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: collection
  nameWithType: SceneAction.collection
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.collection
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: collection
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 40
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: The collection that is being opened. null if stand-alone.
  example: []
  syntax:
    content: public SceneCollection collection { get; protected set; }
    parameters: []
    return:
      type: AdvancedSceneManager.Models.SceneCollection
    content.vb: Public Property collection As SceneCollection
  overload: AdvancedSceneManager.Core.Actions.SceneAction.collection*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: AdvancedSceneManager.Core.Actions.SceneAction.progress
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.progress
  id: progress
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: progress
  nameWithType: SceneAction.progress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.progress
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: progress
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 43
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: The progress of this scene action.
  example: []
  syntax:
    content: public float progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property progress As Single
  overload: AdvancedSceneManager.Core.Actions.SceneAction.progress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Core.Actions.SceneAction.isDone
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.isDone
  id: isDone
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: isDone
  nameWithType: SceneAction.isDone
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.isDone
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isDone
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 46
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: Is this scene action done?
  example: []
  syntax:
    content: public bool isDone { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDone As Boolean
  overload: AdvancedSceneManager.Core.Actions.SceneAction.isDone*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  id: RegisterCallback(System.Action)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: RegisterCallback(Action)
  nameWithType: SceneAction.RegisterCallback(Action)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: RegisterCallback
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 51
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: Register a callback when scene action is done.
  example: []
  syntax:
    content: public void RegisterCallback(Action action)
    parameters:
    - id: action
      type: System.Action
    content.vb: Public Sub RegisterCallback(action As Action)
  overload: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  id: UnregisterCallback(System.Action)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: UnregisterCallback(Action)
  nameWithType: SceneAction.UnregisterCallback(Action)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: UnregisterCallback
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 54
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: Remove an registered callback when scene action is done.
  example: []
  syntax:
    content: public void UnregisterCallback(Action action)
    parameters:
    - id: action
      type: System.Action
    content.vb: Public Sub UnregisterCallback(action As Action)
  overload: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  id: OnProgressCallback(System.Action{System.Single})
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: OnProgressCallback(Action<Single>)
  nameWithType: SceneAction.OnProgressCallback(Action<Single>)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action<System.Single>)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OnProgressCallback
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 58
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public void OnProgressCallback(Action<float> callback)
    parameters:
    - id: callback
      type: System.Action{System.Single}
    content.vb: Public Sub OnProgressCallback(callback As Action(Of Single))
  overload: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback*
  nameWithType.vb: SceneAction.OnProgressCallback(Action(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action(Of System.Single))
  name.vb: OnProgressCallback(Action(Of Single))
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  id: OnProgress(System.Single)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: OnProgress(Single)
  nameWithType: SceneAction.OnProgress(Single)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OnProgress
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 64
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: protected void OnProgress(float progress)
    parameters:
    - id: progress
      type: System.Single
    content.vb: Protected Sub OnProgress(progress As Single)
  overload: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: AdvancedSceneManager.Core.Actions.SceneAction.Done
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.Done
  id: Done
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: Done()
  nameWithType: SceneAction.Done()
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Done
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 72
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: protected virtual void Done()
    content.vb: Protected Overridable Sub Done
  overload: AdvancedSceneManager.Core.Actions.SceneAction.Done*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  id: Done(AdvancedSceneManager.Core.OpenSceneInfo)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: Done(OpenSceneInfo)
  nameWithType: SceneAction.Done(OpenSceneInfo)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Done
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 79
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: protected virtual void Done(OpenSceneInfo openScene)
    parameters:
    - id: openScene
      type: AdvancedSceneManager.Core.OpenSceneInfo
    content.vb: Protected Overridable Sub Done(openScene As OpenSceneInfo)
  overload: AdvancedSceneManager.Core.Actions.SceneAction.Done*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: AdvancedSceneManager.Core.Actions.SceneAction.ToString
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.ToString
  id: ToString
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SceneAction.ToString()
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.ToString()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: ToString
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/_SceneAction.cs
    startLine: 85
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: AdvancedSceneManager.Core.Actions.SceneAction.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AdvancedSceneManager.Models.Scene
  commentId: T:AdvancedSceneManager.Models.Scene
  parent: AdvancedSceneManager.Models
  name: Scene
  nameWithType: Scene
  fullName: AdvancedSceneManager.Models.Scene
- uid: AdvancedSceneManager.Core.SceneOperation
  commentId: T:AdvancedSceneManager.Core.SceneOperation
  parent: AdvancedSceneManager.Core
  name: SceneOperation
  nameWithType: SceneOperation
  fullName: AdvancedSceneManager.Core.SceneOperation
- uid: AdvancedSceneManager.Core.Actions
  commentId: N:AdvancedSceneManager.Core.Actions
  name: AdvancedSceneManager.Core.Actions
  nameWithType: AdvancedSceneManager.Core.Actions
  fullName: AdvancedSceneManager.Core.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
- uid: AdvancedSceneManager.Core
  commentId: N:AdvancedSceneManager.Core
  name: AdvancedSceneManager.Core
  nameWithType: AdvancedSceneManager.Core
  fullName: AdvancedSceneManager.Core
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
  name: reportsProgress
  nameWithType: SceneAction.reportsProgress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.reportsProgress
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Core.Actions.SceneAction.DoAction*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.DoAction
  name: DoAction
  nameWithType: SceneAction.DoAction
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.DoAction
- uid: AdvancedSceneManager.Core.SceneManagerBase
  commentId: T:AdvancedSceneManager.Core.SceneManagerBase
  parent: AdvancedSceneManager.Core
  name: SceneManagerBase
  nameWithType: SceneManagerBase
  fullName: AdvancedSceneManager.Core.SceneManagerBase
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: AdvancedSceneManager.Core.Actions.SceneAction.openScene*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.openScene
  name: openScene
  nameWithType: SceneAction.openScene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.openScene
- uid: AdvancedSceneManager.Core.OpenSceneInfo
  commentId: T:AdvancedSceneManager.Core.OpenSceneInfo
  parent: AdvancedSceneManager.Core
  name: OpenSceneInfo
  nameWithType: OpenSceneInfo
  fullName: AdvancedSceneManager.Core.OpenSceneInfo
- uid: AdvancedSceneManager.Core.Actions.SceneAction
  commentId: T:AdvancedSceneManager.Core.Actions.SceneAction
  parent: AdvancedSceneManager.Core.Actions
  name: SceneAction
  nameWithType: SceneAction
  fullName: AdvancedSceneManager.Core.Actions.SceneAction
- uid: AdvancedSceneManager.Core.Actions.SceneAction.scene*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.scene
  name: scene
  nameWithType: SceneAction.scene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.scene
- uid: AdvancedSceneManager.Core.Actions.SceneAction.collection*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.collection
  name: collection
  nameWithType: SceneAction.collection
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.collection
- uid: AdvancedSceneManager.Models.SceneCollection
  commentId: T:AdvancedSceneManager.Models.SceneCollection
  parent: AdvancedSceneManager.Models
  name: SceneCollection
  nameWithType: SceneCollection
  fullName: AdvancedSceneManager.Models.SceneCollection
- uid: AdvancedSceneManager.Core.Actions.SceneAction.progress*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.progress
  name: progress
  nameWithType: SceneAction.progress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: AdvancedSceneManager.Core.Actions.SceneAction.isDone*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.isDone
  name: isDone
  nameWithType: SceneAction.isDone
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.isDone
- uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback
  name: RegisterCallback
  nameWithType: SceneAction.RegisterCallback
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback
  name: UnregisterCallback
  nameWithType: SceneAction.UnregisterCallback
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback
  name: OnProgressCallback
  nameWithType: SceneAction.OnProgressCallback
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  name: Action<Single>
  nameWithType: Action<Single>
  fullName: System.Action<System.Single>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of System.Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.OnProgress
  name: OnProgress
  nameWithType: SceneAction.OnProgress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress
- uid: AdvancedSceneManager.Core.Actions.SceneAction.Done*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.Done
  name: Done
  nameWithType: SceneAction.Done
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.ToString*
  commentId: Overload:AdvancedSceneManager.Core.Actions.SceneAction.ToString
  name: ToString
  nameWithType: SceneAction.ToString
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
