### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility
  commentId: T:AdvancedSceneManager.Utility.GuidReferenceUtility
  id: GuidReferenceUtility
  parent: AdvancedSceneManager.Utility
  children:
  - AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent(UnityEngine.GameObject)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime(UnityEngine.Object)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String,System.Action{UnityEngine.Object})
  - AdvancedSceneManager.Utility.GuidReferenceUtility.Find``1(System.String)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent(System.String)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID
  - AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent(UnityEngine.GameObject)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference(System.String)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent(UnityEngine.GameObject,System.Boolean)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(System.String)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(UnityEngine.Object)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind(System.String,UnityEngine.Object@)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind``1(System.String,``0@)
  - AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent(System.String,UnityEngine.GameObject@)
  langs:
  - csharp
  - vb
  name: GuidReferenceUtility
  nameWithType: GuidReferenceUtility
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GuidReferenceUtility
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 14
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: An utility for referencing objects globally.
  example: []
  syntax:
    content: public class GuidReferenceUtility
    content.vb: Public Class GuidReferenceUtility
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime(UnityEngine.Object)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime(UnityEngine.Object)
  id: AddRuntime(UnityEngine.Object)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: AddRuntime(Object)
  nameWithType: GuidReferenceUtility.AddRuntime(Object)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime(UnityEngine.Object)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: AddRuntime
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 20
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Adds a reference to the object, returns the id that will be used to find it again.
  example: []
  syntax:
    content: public static string AddRuntime(Object obj)
    parameters:
    - id: obj
      type: UnityEngine.Object
    return:
      type: System.String
    content.vb: Public Shared Function AddRuntime(obj As Object) As String
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(UnityEngine.Object)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(UnityEngine.Object)
  id: RemoveRuntime(UnityEngine.Object)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: RemoveRuntime(Object)
  nameWithType: GuidReferenceUtility.RemoveRuntime(Object)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(UnityEngine.Object)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: RemoveRuntime
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 33
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Removes the reference to this object.
  example: []
  syntax:
    content: public static void RemoveRuntime(Object obj)
    parameters:
    - id: obj
      type: UnityEngine.Object
    content.vb: Public Shared Sub RemoveRuntime(obj As Object)
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(System.String)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(System.String)
  id: RemoveRuntime(System.String)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: RemoveRuntime(String)
  nameWithType: GuidReferenceUtility.RemoveRuntime(String)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: RemoveRuntime
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 40
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Removes the reference to the object with this id.
  example: []
  syntax:
    content: public static void RemoveRuntime(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Shared Sub RemoveRuntime(id As String)
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference(System.String)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference(System.String)
  id: HasReference(System.String)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: HasReference(String)
  nameWithType: GuidReferenceUtility.HasReference(String)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: HasReference
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 59
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets if reference exists.
  example: []
  syntax:
    content: public static bool HasReference(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasReference(id As String) As Boolean
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind``1(System.String,``0@)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind``1(System.String,``0@)
  id: TryFind``1(System.String,``0@)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: TryFind<T>(String, out T)
  nameWithType: GuidReferenceUtility.TryFind<T>(String, out T)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind<T>(System.String, out T)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: TryFind
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 63
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Gets if reference exists.
  example: []
  syntax:
    content: >-
      public static bool TryFind<T>(string id, out T obj)
          where T : Object
    parameters:
    - id: id
      type: System.String
    - id: obj
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryFind(Of T As Object)(id As String, ByRef obj As T) As Boolean
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind*
  nameWithType.vb: GuidReferenceUtility.TryFind(Of T)(String, ByRef T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind(Of T)(System.String, ByRef T)
  name.vb: TryFind(Of T)(String, ByRef T)
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind(System.String,UnityEngine.Object@)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind(System.String,UnityEngine.Object@)
  id: TryFind(System.String,UnityEngine.Object@)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: TryFind(String, out Object)
  nameWithType: GuidReferenceUtility.TryFind(String, out Object)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind(System.String, out UnityEngine.Object)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: TryFind
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 70
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Tries to find the reference.
  example: []
  syntax:
    content: public static Object TryFind(string id, out Object obj)
    parameters:
    - id: id
      type: System.String
    - id: obj
      type: UnityEngine.Object
    return:
      type: UnityEngine.Object
    content.vb: Public Shared Function TryFind(id As String, ByRef obj As Object) As Object
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind*
  nameWithType.vb: GuidReferenceUtility.TryFind(String, ByRef Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind(System.String, ByRef UnityEngine.Object)
  name.vb: TryFind(String, ByRef Object)
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String)
  id: Find(System.String)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: Find(String)
  nameWithType: GuidReferenceUtility.Find(String)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Find
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 77
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finds a reference if it exists.
  example: []
  syntax:
    content: public static Object Find(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: UnityEngine.Object
    content.vb: Public Shared Function Find(id As String) As Object
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.Find*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.Find``1(System.String)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.Find``1(System.String)
  id: Find``1(System.String)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: Find<T>(String)
  nameWithType: GuidReferenceUtility.Find<T>(String)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.Find<T>(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Find
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 83
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finds a reference if it exists.
  example: []
  syntax:
    content: >-
      public static T Find<T>(string id)
          where T : Object
    parameters:
    - id: id
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Find(Of T As Object)(id As String) As T
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.Find*
  nameWithType.vb: GuidReferenceUtility.Find(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Utility.GuidReferenceUtility.Find(Of T)(System.String)
  name.vb: Find(Of T)(String)
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String,System.Action{UnityEngine.Object})
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String,System.Action{UnityEngine.Object})
  id: Find(System.String,System.Action{UnityEngine.Object})
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: Find(String, Action<Object>)
  nameWithType: GuidReferenceUtility.Find(String, Action<Object>)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String, System.Action<UnityEngine.Object>)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Find
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 89
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finds a reference if it exists.
  example: []
  syntax:
    content: public static IEnumerator Find(string id, Action<Object> callback)
    parameters:
    - id: id
      type: System.String
    - id: callback
      type: System.Action{UnityEngine.Object}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Shared Function Find(id As String, callback As Action(Of Object)) As IEnumerator
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.Find*
  nameWithType.vb: GuidReferenceUtility.Find(String, Action(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Utility.GuidReferenceUtility.Find(System.String, System.Action(Of UnityEngine.Object))
  name.vb: Find(String, Action(Of Object))
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent(UnityEngine.GameObject)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent(UnityEngine.GameObject)
  id: GetOrAddPersistent(UnityEngine.GameObject)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: GetOrAddPersistent(GameObject)
  nameWithType: GuidReferenceUtility.GetOrAddPersistent(GameObject)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GetOrAddPersistent
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 98
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Adds a persistent reference to this <xref href="UnityEngine.GameObject" data-throw-if-not-resolved="false"></xref>.
  remarks: Can only add in editor, returns <xref uid="langword_csharp_null" name="null" href=""></xref> otherwise.
  example: []
  syntax:
    content: public static string GetOrAddPersistent(GameObject obj)
    parameters:
    - id: obj
      type: UnityEngine.GameObject
    return:
      type: System.String
    content.vb: Public Shared Function GetOrAddPersistent(obj As GameObject) As String
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent(UnityEngine.GameObject)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent(UnityEngine.GameObject)
  id: AddPersistent(UnityEngine.GameObject)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: AddPersistent(GameObject)
  nameWithType: GuidReferenceUtility.AddPersistent(GameObject)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: AddPersistent
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 115
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Adds a persistent reference to this <xref href="UnityEngine.GameObject" data-throw-if-not-resolved="false"></xref>.
  remarks: Only usable in editor.
  example: []
  syntax:
    content: public static string AddPersistent(GameObject obj)
    parameters:
    - id: obj
      type: UnityEngine.GameObject
    return:
      type: System.String
    content.vb: Public Shared Function AddPersistent(obj As GameObject) As String
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent(UnityEngine.GameObject,System.Boolean)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent(UnityEngine.GameObject,System.Boolean)
  id: RemovePersistent(UnityEngine.GameObject,System.Boolean)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: RemovePersistent(GameObject, Boolean)
  nameWithType: GuidReferenceUtility.RemovePersistent(GameObject, Boolean)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent(UnityEngine.GameObject, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: RemovePersistent
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 132
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Removes a persistent reference to this <xref href="UnityEngine.GameObject" data-throw-if-not-resolved="false"></xref>.
  remarks: Only usable in editor.
  example: []
  syntax:
    content: public static void RemovePersistent(GameObject obj, bool saveScene)
    parameters:
    - id: obj
      type: UnityEngine.GameObject
    - id: saveScene
      type: System.Boolean
    content.vb: Public Shared Sub RemovePersistent(obj As GameObject, saveScene As Boolean)
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID
  id: GenerateID
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: GenerateID()
  nameWithType: GuidReferenceUtility.GenerateID()
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: GenerateID
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 150
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Generates an id.
  remarks: Uses https://blog.codinghorror.com/equipping-our-ascii-armor.
  example: []
  syntax:
    content: public static string GenerateID()
    return:
      type: System.String
    content.vb: Public Shared Function GenerateID As String
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent(System.String)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent(System.String)
  id: FindPersistent(System.String)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: FindPersistent(String)
  nameWithType: GuidReferenceUtility.FindPersistent(String)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: FindPersistent
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 155
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finds the persistent reference in the currently open scenes.
  example: []
  syntax:
    content: public static GameObject FindPersistent(string guid)
    parameters:
    - id: guid
      type: System.String
    return:
      type: UnityEngine.GameObject
    content.vb: Public Shared Function FindPersistent(guid As String) As GameObject
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent(System.String,UnityEngine.GameObject@)
  commentId: M:AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent(System.String,UnityEngine.GameObject@)
  id: TryFindPersistent(System.String,UnityEngine.GameObject@)
  parent: AdvancedSceneManager.Utility.GuidReferenceUtility
  langs:
  - csharp
  - vb
  name: TryFindPersistent(String, out GameObject)
  nameWithType: GuidReferenceUtility.TryFindPersistent(String, out GameObject)
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent(System.String, out UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: TryFindPersistent
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/GuidReferenceUtility.cs
    startLine: 160
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Utility
  summary: Finds the persistent reference in the currently open scenes.
  example: []
  syntax:
    content: public static bool TryFindPersistent(string guid, out GameObject obj)
    parameters:
    - id: guid
      type: System.String
    - id: obj
      type: UnityEngine.GameObject
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryFindPersistent(guid As String, ByRef obj As GameObject) As Boolean
  overload: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent*
  nameWithType.vb: GuidReferenceUtility.TryFindPersistent(String, ByRef GameObject)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent(System.String, ByRef UnityEngine.GameObject)
  name.vb: TryFindPersistent(String, ByRef GameObject)
references:
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime
  name: AddRuntime
  nameWithType: GuidReferenceUtility.AddRuntime
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.AddRuntime
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime
  name: RemoveRuntime
  nameWithType: GuidReferenceUtility.RemoveRuntime
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.RemoveRuntime
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference
  name: HasReference
  nameWithType: GuidReferenceUtility.HasReference
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.HasReference
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind
  name: TryFind
  nameWithType: GuidReferenceUtility.TryFind
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFind
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.Find*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.Find
  name: Find
  nameWithType: GuidReferenceUtility.Find
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.Find
- uid: System.Action{UnityEngine.Object}
  commentId: T:System.Action{UnityEngine.Object}
  parent: System
  definition: System.Action`1
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<UnityEngine.Object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of UnityEngine.Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent
  name: GetOrAddPersistent
  nameWithType: GuidReferenceUtility.GetOrAddPersistent
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.GetOrAddPersistent
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent
  name: AddPersistent
  nameWithType: GuidReferenceUtility.AddPersistent
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.AddPersistent
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent
  name: RemovePersistent
  nameWithType: GuidReferenceUtility.RemovePersistent
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.RemovePersistent
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID
  name: GenerateID
  nameWithType: GuidReferenceUtility.GenerateID
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.GenerateID
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent
  name: FindPersistent
  nameWithType: GuidReferenceUtility.FindPersistent
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.FindPersistent
- uid: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent*
  commentId: Overload:AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent
  name: TryFindPersistent
  nameWithType: GuidReferenceUtility.TryFindPersistent
  fullName: AdvancedSceneManager.Utility.GuidReferenceUtility.TryFindPersistent
