### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Editor.Utility.BlacklistUtility
  commentId: T:AdvancedSceneManager.Editor.Utility.BlacklistUtility
  id: BlacklistUtility
  parent: AdvancedSceneManager.Editor.Utility
  children:
  - AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked(System.String)
  langs:
  - csharp
  - vb
  name: BlacklistUtility
  nameWithType: BlacklistUtility
  fullName: AdvancedSceneManager.Editor.Utility.BlacklistUtility
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BlacklistUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: BlacklistUtility
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BlacklistUtility.cs
    startLine: 9
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Provides methods for working with the blacklist.
  example: []
  syntax:
    content: public static class BlacklistUtility
    content.vb: Public Module BlacklistUtility
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked(System.String)
  commentId: M:AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked(System.String)
  id: IsBlocked(System.String)
  parent: AdvancedSceneManager.Editor.Utility.BlacklistUtility
  langs:
  - csharp
  - vb
  name: IsBlocked(String)
  nameWithType: BlacklistUtility.IsBlocked(String)
  fullName: AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BlacklistUtility.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: IsBlocked
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Utility/Editor/BlacklistUtility.cs
    startLine: 13
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Editor.Utility
  summary: Gets if asset is blocked for importing.
  example: []
  syntax:
    content: public static bool IsBlocked(string assetPath)
    parameters:
    - id: assetPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsBlocked(assetPath As String) As Boolean
  overload: AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AdvancedSceneManager.Editor.Utility
  commentId: N:AdvancedSceneManager.Editor.Utility
  name: AdvancedSceneManager.Editor.Utility
  nameWithType: AdvancedSceneManager.Editor.Utility
  fullName: AdvancedSceneManager.Editor.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked*
  commentId: Overload:AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked
  name: IsBlocked
  nameWithType: BlacklistUtility.IsBlocked
  fullName: AdvancedSceneManager.Editor.Utility.BlacklistUtility.IsBlocked
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
