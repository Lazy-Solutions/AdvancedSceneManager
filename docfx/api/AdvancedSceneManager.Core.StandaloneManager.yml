### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Core.StandaloneManager
  commentId: T:AdvancedSceneManager.Core.StandaloneManager
  id: StandaloneManager
  parent: AdvancedSceneManager.Core
  children:
  - AdvancedSceneManager.Core.StandaloneManager.OpenSingle(AdvancedSceneManager.Models.Scene)
  - AdvancedSceneManager.Core.StandaloneManager.Preload(AdvancedSceneManager.Models.Scene,System.Boolean)
  - AdvancedSceneManager.Core.StandaloneManager.preloadedScene
  langs:
  - csharp
  - vb
  name: StandaloneManager
  nameWithType: StandaloneManager
  fullName: AdvancedSceneManager.Core.StandaloneManager
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: StandaloneManager
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 93
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: The manager for stand-alone scenes.
  remarks: 'Usage: <xref href="AdvancedSceneManager.SceneManager.standalone" data-throw-if-not-resolved="false"></xref>.'
  example: []
  syntax:
    content: 'public class StandaloneManager : SceneManagerBase, ISerializationCallbackReceiver'
    content.vb: >-
      Public Class StandaloneManager
          Inherits SceneManagerBase
          Implements ISerializationCallbackReceiver
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - AdvancedSceneManager.Core.SceneManagerBase
  extensionMethods:
  - UnityEngine.ScriptableObject.AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Core.StandaloneManager.OpenSingle(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.StandaloneManager.OpenSingle(AdvancedSceneManager.Models.Scene)
  id: OpenSingle(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Core.StandaloneManager
  langs:
  - csharp
  - vb
  name: OpenSingle(Scene)
  nameWithType: StandaloneManager.OpenSingle(Scene)
  fullName: AdvancedSceneManager.Core.StandaloneManager.OpenSingle(AdvancedSceneManager.Models.Scene)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: OpenSingle
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 222
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Close existing scenes and open the specified one.
  remarks: This will close the current collection.
  example: []
  syntax:
    content: public SceneOperation<OpenSceneInfo> OpenSingle(Scene scene)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    return:
      type: AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Core.OpenSceneInfo}
    content.vb: Public Function OpenSingle(scene As Scene) As SceneOperation(Of OpenSceneInfo)
  overload: AdvancedSceneManager.Core.StandaloneManager.OpenSingle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.StandaloneManager.Preload(AdvancedSceneManager.Models.Scene,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.StandaloneManager.Preload(AdvancedSceneManager.Models.Scene,System.Boolean)
  id: Preload(AdvancedSceneManager.Models.Scene,System.Boolean)
  parent: AdvancedSceneManager.Core.StandaloneManager
  langs:
  - csharp
  - vb
  name: Preload(Scene, Boolean)
  nameWithType: StandaloneManager.Preload(Scene, Boolean)
  fullName: AdvancedSceneManager.Core.StandaloneManager.Preload(AdvancedSceneManager.Models.Scene, System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Preload
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 232
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  summary: Preloads the scene.
  remarks: Use <xref href="AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading" data-throw-if-not-resolved="false"></xref> or <xref href="AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)" data-throw-if-not-resolved="false"></xref> to finish loading scene.
  example: []
  syntax:
    content: public SceneOperation<PreloadedSceneHelper> Preload(Scene scene, bool doCallbacks = false)
    parameters:
    - id: scene
      type: AdvancedSceneManager.Models.Scene
    - id: doCallbacks
      type: System.Boolean
    return:
      type: AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Utility.PreloadedSceneHelper}
    content.vb: Public Function Preload(scene As Scene, doCallbacks As Boolean = False) As SceneOperation(Of PreloadedSceneHelper)
  overload: AdvancedSceneManager.Core.StandaloneManager.Preload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Core.StandaloneManager.preloadedScene
  commentId: P:AdvancedSceneManager.Core.StandaloneManager.preloadedScene
  id: preloadedScene
  parent: AdvancedSceneManager.Core.StandaloneManager
  langs:
  - csharp
  - vb
  name: preloadedScene
  nameWithType: StandaloneManager.preloadedScene
  fullName: AdvancedSceneManager.Core.StandaloneManager.preloadedScene
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: preloadedScene
    path: ../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Managers/StandaloneManager.cs
    startLine: 249
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core
  syntax:
    content: public PreloadedSceneHelper preloadedScene { get; }
    parameters: []
    return:
      type: AdvancedSceneManager.Utility.PreloadedSceneHelper
    content.vb: Public ReadOnly Property preloadedScene As PreloadedSceneHelper
  overload: AdvancedSceneManager.Core.StandaloneManager.preloadedScene*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: AdvancedSceneManager.SceneManager.standalone
  commentId: P:AdvancedSceneManager.SceneManager.standalone
  isExternal: true
- uid: AdvancedSceneManager.Core
  commentId: N:AdvancedSceneManager.Core
  name: AdvancedSceneManager.Core
  nameWithType: AdvancedSceneManager.Core
  fullName: AdvancedSceneManager.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: AdvancedSceneManager.Core.SceneManagerBase
  commentId: T:AdvancedSceneManager.Core.SceneManagerBase
  parent: AdvancedSceneManager.Core
  name: SceneManagerBase
  nameWithType: SceneManagerBase
  fullName: AdvancedSceneManager.Core.SceneManagerBase
- uid: UnityEngine.ScriptableObject.AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  commentId: M:AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  parent: AdvancedSceneManager.Utility.ScriptableObjectUtility
  definition: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  name: Save()
  nameWithType: ScriptableObjectUtility.Save()
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save()
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  commentId: M:AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  isExternal: true
  name: Save(ScriptableObject)
  nameWithType: ScriptableObjectUtility.Save(ScriptableObject)
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
  spec.csharp:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.ScriptableObject
    name: ScriptableObject
    nameWithType: ScriptableObject
    fullName: UnityEngine.ScriptableObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save(UnityEngine.ScriptableObject)
    name: Save
    nameWithType: ScriptableObjectUtility.Save
    fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.ScriptableObject
    name: ScriptableObject
    nameWithType: ScriptableObject
    fullName: UnityEngine.ScriptableObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.ScriptableObjectUtility
  commentId: T:AdvancedSceneManager.Utility.ScriptableObjectUtility
  parent: AdvancedSceneManager.Utility
  name: ScriptableObjectUtility
  nameWithType: ScriptableObjectUtility
  fullName: AdvancedSceneManager.Utility.ScriptableObjectUtility
- uid: AdvancedSceneManager.Utility
  commentId: N:AdvancedSceneManager.Utility
  name: AdvancedSceneManager.Utility
  nameWithType: AdvancedSceneManager.Utility
  fullName: AdvancedSceneManager.Utility
- uid: AdvancedSceneManager.Core.StandaloneManager.OpenSingle*
  commentId: Overload:AdvancedSceneManager.Core.StandaloneManager.OpenSingle
  name: OpenSingle
  nameWithType: StandaloneManager.OpenSingle
  fullName: AdvancedSceneManager.Core.StandaloneManager.OpenSingle
- uid: AdvancedSceneManager.Models.Scene
  commentId: T:AdvancedSceneManager.Models.Scene
  parent: AdvancedSceneManager.Models
  name: Scene
  nameWithType: Scene
  fullName: AdvancedSceneManager.Models.Scene
- uid: AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Core.OpenSceneInfo}
  commentId: T:AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Core.OpenSceneInfo}
  parent: AdvancedSceneManager.Core
  definition: AdvancedSceneManager.Core.SceneOperation`1
  name: SceneOperation<OpenSceneInfo>
  nameWithType: SceneOperation<OpenSceneInfo>
  fullName: AdvancedSceneManager.Core.SceneOperation<AdvancedSceneManager.Core.OpenSceneInfo>
  nameWithType.vb: SceneOperation(Of OpenSceneInfo)
  fullName.vb: AdvancedSceneManager.Core.SceneOperation(Of AdvancedSceneManager.Core.OpenSceneInfo)
  name.vb: SceneOperation(Of OpenSceneInfo)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
- uid: AdvancedSceneManager.Core.SceneOperation`1
  commentId: T:AdvancedSceneManager.Core.SceneOperation`1
  parent: AdvancedSceneManager.Core
  name: SceneOperation<ReturnValue>
  nameWithType: SceneOperation<ReturnValue>
  fullName: AdvancedSceneManager.Core.SceneOperation<ReturnValue>
  nameWithType.vb: SceneOperation(Of ReturnValue)
  fullName.vb: AdvancedSceneManager.Core.SceneOperation(Of ReturnValue)
  name.vb: SceneOperation(Of ReturnValue)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: <
    nameWithType: <
    fullName: <
  - name: ReturnValue
    nameWithType: ReturnValue
    fullName: ReturnValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ReturnValue
    nameWithType: ReturnValue
    fullName: ReturnValue
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  commentId: M:AdvancedSceneManager.Utility.PreloadedSceneHelper.FinishLoading
  isExternal: true
- uid: AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)
  commentId: M:AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)
  parent: AdvancedSceneManager.Core.SceneManagerBase
  name: Open(Scene)
  nameWithType: SceneManagerBase.Open(Scene)
  fullName: AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)
    name: Open
    nameWithType: SceneManagerBase.Open
    fullName: AdvancedSceneManager.Core.SceneManagerBase.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Models.Scene
    name: Scene
    nameWithType: Scene
    fullName: AdvancedSceneManager.Models.Scene
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.SceneManagerBase.Open(AdvancedSceneManager.Models.Scene)
    name: Open
    nameWithType: SceneManagerBase.Open
    fullName: AdvancedSceneManager.Core.SceneManagerBase.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Models.Scene
    name: Scene
    nameWithType: Scene
    fullName: AdvancedSceneManager.Models.Scene
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.StandaloneManager.Preload*
  commentId: Overload:AdvancedSceneManager.Core.StandaloneManager.Preload
  name: Preload
  nameWithType: StandaloneManager.Preload
  fullName: AdvancedSceneManager.Core.StandaloneManager.Preload
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Utility.PreloadedSceneHelper}
  commentId: T:AdvancedSceneManager.Core.SceneOperation{AdvancedSceneManager.Utility.PreloadedSceneHelper}
  parent: AdvancedSceneManager.Core
  definition: AdvancedSceneManager.Core.SceneOperation`1
  name: SceneOperation<PreloadedSceneHelper>
  nameWithType: SceneOperation<PreloadedSceneHelper>
  fullName: AdvancedSceneManager.Core.SceneOperation<AdvancedSceneManager.Utility.PreloadedSceneHelper>
  nameWithType.vb: SceneOperation(Of PreloadedSceneHelper)
  fullName.vb: AdvancedSceneManager.Core.SceneOperation(Of AdvancedSceneManager.Utility.PreloadedSceneHelper)
  name.vb: SceneOperation(Of PreloadedSceneHelper)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: <
    nameWithType: <
    fullName: <
  - uid: AdvancedSceneManager.Utility.PreloadedSceneHelper
    name: PreloadedSceneHelper
    nameWithType: PreloadedSceneHelper
    fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AdvancedSceneManager.Core.SceneOperation`1
    name: SceneOperation
    nameWithType: SceneOperation
    fullName: AdvancedSceneManager.Core.SceneOperation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AdvancedSceneManager.Utility.PreloadedSceneHelper
    name: PreloadedSceneHelper
    nameWithType: PreloadedSceneHelper
    fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.StandaloneManager.preloadedScene*
  commentId: Overload:AdvancedSceneManager.Core.StandaloneManager.preloadedScene
  name: preloadedScene
  nameWithType: StandaloneManager.preloadedScene
  fullName: AdvancedSceneManager.Core.StandaloneManager.preloadedScene
- uid: AdvancedSceneManager.Utility.PreloadedSceneHelper
  commentId: T:AdvancedSceneManager.Utility.PreloadedSceneHelper
  parent: AdvancedSceneManager.Utility
  name: PreloadedSceneHelper
  nameWithType: PreloadedSceneHelper
  fullName: AdvancedSceneManager.Utility.PreloadedSceneHelper
