### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Core.Actions.StartupAction
  commentId: T:AdvancedSceneManager.Core.Actions.StartupAction
  id: StartupAction
  parent: AdvancedSceneManager.Core.Actions
  children:
  - AdvancedSceneManager.Core.Actions.StartupAction.#ctor(System.Boolean,System.Nullable{UnityEngine.Color},System.Single,System.Single,AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  langs:
  - csharp
  - vb
  name: StartupAction
  nameWithType: StartupAction
  fullName: AdvancedSceneManager.Core.Actions.StartupAction
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Runtime/_StartupAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: StartupAction
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Runtime/_StartupAction.cs
    startLine: 20
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  summary: "\nPerforms startup sequence, see <xref href=\"AdvancedSceneManager.Core.Runtime.Start(AdvancedSceneManager.Models.SceneCollection%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>:\n<p><xref href=\"AdvancedSceneManager.Core.Actions.StartupAction.FadeOut(System.Single%2cSystem.Nullable%7bUnityEngine.Color%7d)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p><xref href=\"AdvancedSceneManager.Core.Actions.CloseAllUnityScenesAction\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p><xref href=\"AdvancedSceneManager.Core.Actions.PlaySplashScreenAction\" data-throw-if-not-resolved=\"false\"></xref> (+ fade in).</p>\n<p><xref href=\"AdvancedSceneManager.Core.Actions.StartupAction.ShowStartupLoadingScreen\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p><xref href=\"AdvancedSceneManager.Core.Actions.OpenStartupCollections\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p><xref href=\"AdvancedSceneManager.Core.Actions.StartupAction.HideStartupLoadingScreen\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: 'public class StartupAction : AggregateAction'
    content.vb: >-
      Public Class StartupAction
          Inherits AggregateAction
  inheritance:
  - System.Object
  - AdvancedSceneManager.Core.Actions.SceneAction
  - AdvancedSceneManager.Core.Actions.AggregateAction
  derivedClasses:
  - AdvancedSceneManager.Core.Actions.QuickStartupAction
  inheritedMembers:
  - AdvancedSceneManager.Core.Actions.AggregateAction.reportsProgress
  - AdvancedSceneManager.Core.Actions.AggregateAction.actions
  - AdvancedSceneManager.Core.Actions.AggregateAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  - AdvancedSceneManager.Core.Actions.AggregateAction.OnDone
  - AdvancedSceneManager.Core.Actions.SceneAction.openScene
  - AdvancedSceneManager.Core.Actions.SceneAction.scene
  - AdvancedSceneManager.Core.Actions.SceneAction.collection
  - AdvancedSceneManager.Core.Actions.SceneAction.progress
  - AdvancedSceneManager.Core.Actions.SceneAction.isDone
  - AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  - AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  - AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  - AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  - AdvancedSceneManager.Core.Actions.SceneAction.Done
  - AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  - AdvancedSceneManager.Core.Actions.SceneAction.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Core.Actions.StartupAction.#ctor(System.Boolean,System.Nullable{UnityEngine.Color},System.Single,System.Single,AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Actions.StartupAction.#ctor(System.Boolean,System.Nullable{UnityEngine.Color},System.Single,System.Single,AdvancedSceneManager.Models.SceneCollection,System.Boolean)
  id: '#ctor(System.Boolean,System.Nullable{UnityEngine.Color},System.Single,System.Single,AdvancedSceneManager.Models.SceneCollection,System.Boolean)'
  parent: AdvancedSceneManager.Core.Actions.StartupAction
  langs:
  - csharp
  - vb
  name: StartupAction(Boolean, Nullable<Color>, Single, Single, SceneCollection, Boolean)
  nameWithType: StartupAction.StartupAction(Boolean, Nullable<Color>, Single, Single, SceneCollection, Boolean)
  fullName: AdvancedSceneManager.Core.Actions.StartupAction.StartupAction(System.Boolean, System.Nullable<UnityEngine.Color>, System.Single, System.Single, AdvancedSceneManager.Models.SceneCollection, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Runtime/_StartupAction.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: .ctor
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Core/Scene Actions/Runtime/_StartupAction.cs
    startLine: 25
  assemblies:
  - AdvancedSceneManager
  namespace: AdvancedSceneManager.Core.Actions
  example: []
  syntax:
    content: public StartupAction(bool skipSplashScreen = false, Color? fadeColor = null, float initialFadeDuration = 0F, float beforeSplashScreenFadeDuration = 0.5F, SceneCollection collection = null, bool forceOpenAllScenes = false)
    parameters:
    - id: skipSplashScreen
      type: System.Boolean
    - id: fadeColor
      type: System.Nullable{UnityEngine.Color}
      description: Defaults to unity splash screen color.
    - id: initialFadeDuration
      type: System.Single
    - id: beforeSplashScreenFadeDuration
      type: System.Single
    - id: collection
      type: AdvancedSceneManager.Models.SceneCollection
    - id: forceOpenAllScenes
      type: System.Boolean
    content.vb: Public Sub New(skipSplashScreen As Boolean = False, fadeColor As Color? = Nothing, initialFadeDuration As Single = 0F, beforeSplashScreenFadeDuration As Single = 0.5F, collection As SceneCollection = Nothing, forceOpenAllScenes As Boolean = False)
  overload: AdvancedSceneManager.Core.Actions.StartupAction.#ctor*
  nameWithType.vb: StartupAction.StartupAction(Boolean, Nullable(Of Color), Single, Single, SceneCollection, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AdvancedSceneManager.Core.Actions.StartupAction.StartupAction(System.Boolean, System.Nullable(Of UnityEngine.Color), System.Single, System.Single, AdvancedSceneManager.Models.SceneCollection, System.Boolean)
  name.vb: StartupAction(Boolean, Nullable(Of Color), Single, Single, SceneCollection, Boolean)
references:
- uid: AdvancedSceneManager.Core.Runtime.Start(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean)
  commentId: M:AdvancedSceneManager.Core.Runtime.Start(AdvancedSceneManager.Models.SceneCollection,System.Boolean,System.Boolean)
  isExternal: true
- uid: AdvancedSceneManager.Core.Actions.StartupAction.FadeOut(System.Single,System.Nullable{UnityEngine.Color})
  commentId: M:AdvancedSceneManager.Core.Actions.StartupAction.FadeOut(System.Single,System.Nullable{UnityEngine.Color})
  isExternal: true
- uid: AdvancedSceneManager.Core.Actions.CloseAllUnityScenesAction
  commentId: T:AdvancedSceneManager.Core.Actions.CloseAllUnityScenesAction
  name: CloseAllUnityScenesAction
  nameWithType: CloseAllUnityScenesAction
  fullName: AdvancedSceneManager.Core.Actions.CloseAllUnityScenesAction
- uid: AdvancedSceneManager.Core.Actions.PlaySplashScreenAction
  commentId: T:AdvancedSceneManager.Core.Actions.PlaySplashScreenAction
  name: PlaySplashScreenAction
  nameWithType: PlaySplashScreenAction
  fullName: AdvancedSceneManager.Core.Actions.PlaySplashScreenAction
- uid: AdvancedSceneManager.Core.Actions.StartupAction.ShowStartupLoadingScreen
  commentId: M:AdvancedSceneManager.Core.Actions.StartupAction.ShowStartupLoadingScreen
  isExternal: true
- uid: AdvancedSceneManager.Core.Actions.OpenStartupCollections
  commentId: T:AdvancedSceneManager.Core.Actions.OpenStartupCollections
  name: OpenStartupCollections
  nameWithType: OpenStartupCollections
  fullName: AdvancedSceneManager.Core.Actions.OpenStartupCollections
- uid: AdvancedSceneManager.Core.Actions.StartupAction.HideStartupLoadingScreen
  commentId: M:AdvancedSceneManager.Core.Actions.StartupAction.HideStartupLoadingScreen
  isExternal: true
- uid: AdvancedSceneManager.Core.Actions
  commentId: N:AdvancedSceneManager.Core.Actions
  name: AdvancedSceneManager.Core.Actions
  nameWithType: AdvancedSceneManager.Core.Actions
  fullName: AdvancedSceneManager.Core.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AdvancedSceneManager.Core.Actions.SceneAction
  commentId: T:AdvancedSceneManager.Core.Actions.SceneAction
  parent: AdvancedSceneManager.Core.Actions
  name: SceneAction
  nameWithType: SceneAction
  fullName: AdvancedSceneManager.Core.Actions.SceneAction
- uid: AdvancedSceneManager.Core.Actions.AggregateAction
  commentId: T:AdvancedSceneManager.Core.Actions.AggregateAction
  parent: AdvancedSceneManager.Core.Actions
  name: AggregateAction
  nameWithType: AggregateAction
  fullName: AdvancedSceneManager.Core.Actions.AggregateAction
- uid: AdvancedSceneManager.Core.Actions.AggregateAction.reportsProgress
  commentId: P:AdvancedSceneManager.Core.Actions.AggregateAction.reportsProgress
  parent: AdvancedSceneManager.Core.Actions.AggregateAction
  name: reportsProgress
  nameWithType: AggregateAction.reportsProgress
  fullName: AdvancedSceneManager.Core.Actions.AggregateAction.reportsProgress
- uid: AdvancedSceneManager.Core.Actions.AggregateAction.actions
  commentId: P:AdvancedSceneManager.Core.Actions.AggregateAction.actions
  parent: AdvancedSceneManager.Core.Actions.AggregateAction
  name: actions
  nameWithType: AggregateAction.actions
  fullName: AdvancedSceneManager.Core.Actions.AggregateAction.actions
- uid: AdvancedSceneManager.Core.Actions.AggregateAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  commentId: M:AdvancedSceneManager.Core.Actions.AggregateAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  parent: AdvancedSceneManager.Core.Actions.AggregateAction
  name: DoAction(SceneManagerBase)
  nameWithType: AggregateAction.DoAction(SceneManagerBase)
  fullName: AdvancedSceneManager.Core.Actions.AggregateAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.AggregateAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoAction
    nameWithType: AggregateAction.DoAction
    fullName: AdvancedSceneManager.Core.Actions.AggregateAction.DoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.AggregateAction.DoAction(AdvancedSceneManager.Core.SceneManagerBase)
    name: DoAction
    nameWithType: AggregateAction.DoAction
    fullName: AdvancedSceneManager.Core.Actions.AggregateAction.DoAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.SceneManagerBase
    name: SceneManagerBase
    nameWithType: SceneManagerBase
    fullName: AdvancedSceneManager.Core.SceneManagerBase
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.AggregateAction.OnDone
  commentId: M:AdvancedSceneManager.Core.Actions.AggregateAction.OnDone
  parent: AdvancedSceneManager.Core.Actions.AggregateAction
  name: OnDone()
  nameWithType: AggregateAction.OnDone()
  fullName: AdvancedSceneManager.Core.Actions.AggregateAction.OnDone()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.AggregateAction.OnDone
    name: OnDone
    nameWithType: AggregateAction.OnDone
    fullName: AdvancedSceneManager.Core.Actions.AggregateAction.OnDone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.AggregateAction.OnDone
    name: OnDone
    nameWithType: AggregateAction.OnDone
    fullName: AdvancedSceneManager.Core.Actions.AggregateAction.OnDone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.openScene
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.openScene
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: openScene
  nameWithType: SceneAction.openScene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.openScene
- uid: AdvancedSceneManager.Core.Actions.SceneAction.scene
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.scene
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: scene
  nameWithType: SceneAction.scene
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.scene
- uid: AdvancedSceneManager.Core.Actions.SceneAction.collection
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.collection
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: collection
  nameWithType: SceneAction.collection
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.collection
- uid: AdvancedSceneManager.Core.Actions.SceneAction.progress
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.progress
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: progress
  nameWithType: SceneAction.progress
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.progress
- uid: AdvancedSceneManager.Core.Actions.SceneAction.isDone
  commentId: P:AdvancedSceneManager.Core.Actions.SceneAction.isDone
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: isDone
  nameWithType: SceneAction.isDone
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.isDone
- uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: RegisterCallback(Action)
  nameWithType: SceneAction.RegisterCallback(Action)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
    name: RegisterCallback
    nameWithType: SceneAction.RegisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback(System.Action)
    name: RegisterCallback
    nameWithType: SceneAction.RegisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.RegisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: UnregisterCallback(Action)
  nameWithType: SceneAction.UnregisterCallback(Action)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
    name: UnregisterCallback
    nameWithType: SceneAction.UnregisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback(System.Action)
    name: UnregisterCallback
    nameWithType: SceneAction.UnregisterCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.UnregisterCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: OnProgressCallback(Action<Single>)
  nameWithType: SceneAction.OnProgressCallback(Action<Single>)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action<System.Single>)
  nameWithType.vb: SceneAction.OnProgressCallback(Action(Of Single))
  fullName.vb: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action(Of System.Single))
  name.vb: OnProgressCallback(Action(Of Single))
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
    name: OnProgressCallback
    nameWithType: SceneAction.OnProgressCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback(System.Action{System.Single})
    name: OnProgressCallback
    nameWithType: SceneAction.OnProgressCallback
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgressCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  isExternal: true
  name: OnProgress(Single)
  nameWithType: SceneAction.OnProgress(Single)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
    name: OnProgress
    nameWithType: SceneAction.OnProgress
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress(System.Single)
    name: OnProgress
    nameWithType: SceneAction.OnProgress
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.OnProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.Done
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.Done
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: Done()
  nameWithType: SceneAction.Done()
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: Done(OpenSceneInfo)
  nameWithType: SceneAction.Done(OpenSceneInfo)
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.Done(AdvancedSceneManager.Core.OpenSceneInfo)
    name: Done
    nameWithType: SceneAction.Done
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.Done
  - name: (
    nameWithType: (
    fullName: (
  - uid: AdvancedSceneManager.Core.OpenSceneInfo
    name: OpenSceneInfo
    nameWithType: OpenSceneInfo
    fullName: AdvancedSceneManager.Core.OpenSceneInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Core.Actions.SceneAction.ToString
  commentId: M:AdvancedSceneManager.Core.Actions.SceneAction.ToString
  parent: AdvancedSceneManager.Core.Actions.SceneAction
  name: ToString()
  nameWithType: SceneAction.ToString()
  fullName: AdvancedSceneManager.Core.Actions.SceneAction.ToString()
  spec.csharp:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.ToString
    name: ToString
    nameWithType: SceneAction.ToString
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AdvancedSceneManager.Core.Actions.SceneAction.ToString
    name: ToString
    nameWithType: SceneAction.ToString
    fullName: AdvancedSceneManager.Core.Actions.SceneAction.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Core.Actions.StartupAction
  commentId: T:AdvancedSceneManager.Core.Actions.StartupAction
  parent: AdvancedSceneManager.Core.Actions
  name: StartupAction
  nameWithType: StartupAction
  fullName: AdvancedSceneManager.Core.Actions.StartupAction
- uid: AdvancedSceneManager.Core.Actions.StartupAction.#ctor*
  commentId: Overload:AdvancedSceneManager.Core.Actions.StartupAction.#ctor
  name: StartupAction
  nameWithType: StartupAction.StartupAction
  fullName: AdvancedSceneManager.Core.Actions.StartupAction.StartupAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<UnityEngine.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of UnityEngine.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: AdvancedSceneManager.Models.SceneCollection
  commentId: T:AdvancedSceneManager.Models.SceneCollection
  parent: AdvancedSceneManager.Models
  name: SceneCollection
  nameWithType: SceneCollection
  fullName: AdvancedSceneManager.Models.SceneCollection
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Models
  commentId: N:AdvancedSceneManager.Models
  name: AdvancedSceneManager.Models
  nameWithType: AdvancedSceneManager.Models
  fullName: AdvancedSceneManager.Models
