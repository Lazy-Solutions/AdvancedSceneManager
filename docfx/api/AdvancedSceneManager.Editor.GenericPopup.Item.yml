### YamlMime:ManagedReference
items:
- uid: AdvancedSceneManager.Editor.GenericPopup.Item
  commentId: T:AdvancedSceneManager.Editor.GenericPopup.Item
  id: GenericPopup.Item
  parent: AdvancedSceneManager.Editor
  children:
  - AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable
  - AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable(System.Action{System.Boolean})
  - AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String)
  - AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String,System.Action)
  - AdvancedSceneManager.Editor.GenericPopup.Item.isBold
  - AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable
  - AdvancedSceneManager.Editor.GenericPopup.Item.isChecked
  - AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled
  - AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator
  - AdvancedSceneManager.Editor.GenericPopup.Item.isVisible
  - AdvancedSceneManager.Editor.GenericPopup.Item.name
  - AdvancedSceneManager.Editor.GenericPopup.Item.onClick
  - AdvancedSceneManager.Editor.GenericPopup.Item.Separator
  - AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked(System.Action)
  - AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState(System.Boolean)
  - AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus(System.Boolean)
  - AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState(System.Boolean)
  - AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState(System.Boolean)
  langs:
  - csharp
  - vb
  name: GenericPopup.Item
  nameWithType: GenericPopup.Item
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item
  type: Class
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Item
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 21
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public class Item
    content.vb: Public Class Item
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.Separator
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.Separator
  id: Separator
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: Separator
  nameWithType: GenericPopup.Item.Separator
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.Separator
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Separator
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 24
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static GenericPopup.Item Separator { get; }
    parameters: []
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Shared ReadOnly Property Separator As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.Separator*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.name
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.name
  id: name
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: name
  nameWithType: GenericPopup.Item.name
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.name
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: name
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 26
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public string name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property name As String
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isChecked
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.isChecked
  id: isChecked
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: isChecked
  nameWithType: GenericPopup.Item.isChecked
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isChecked
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isChecked
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 27
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public bool isChecked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isChecked As Boolean
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.isChecked*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.onClick
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.onClick
  id: onClick
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: onClick
  nameWithType: GenericPopup.Item.onClick
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.onClick
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: onClick
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 28
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public Action<bool> onClick { get; set; }
    parameters: []
    return:
      type: System.Action{System.Boolean}
    content.vb: Public Property onClick As Action(Of Boolean)
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.onClick*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable
  id: isCheckable
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: isCheckable
  nameWithType: GenericPopup.Item.isCheckable
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isCheckable
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 29
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public bool isCheckable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isCheckable As Boolean
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled
  id: isEnabled
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: isEnabled
  nameWithType: GenericPopup.Item.isEnabled
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isEnabled
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 30
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public bool isEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isEnabled As Boolean
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isVisible
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.isVisible
  id: isVisible
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: isVisible
  nameWithType: GenericPopup.Item.isVisible
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isVisible
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isVisible
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 31
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public bool isVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isVisible As Boolean
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.isVisible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isBold
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.isBold
  id: isBold
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: isBold
  nameWithType: GenericPopup.Item.isBold
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isBold
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isBold
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 32
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public bool isBold { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isBold As Boolean
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.isBold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator
  commentId: P:AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator
  id: isSeparator
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: isSeparator
  nameWithType: GenericPopup.Item.isSeparator
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator
  type: Property
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: isSeparator
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 34
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public bool isSeparator { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSeparator As Boolean
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String)
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String)
  id: Create(System.String)
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: GenericPopup.Item.Create(String)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Create
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 36
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static GenericPopup.Item Create(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Shared Function Create(name As String) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String,System.Action)
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String,System.Action)
  id: Create(System.String,System.Action)
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: Create(String, Action)
  nameWithType: GenericPopup.Item.Create(String, Action)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.Create(System.String, System.Action)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: Create
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 39
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public static GenericPopup.Item Create(string name, Action onClick)
    parameters:
    - id: name
      type: System.String
    - id: onClick
      type: System.Action
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Shared Function Create(name As String, onClick As Action) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable
  id: AsCheckable
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: AsCheckable()
  nameWithType: GenericPopup.Item.AsCheckable()
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable()
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: AsCheckable
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 42
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public GenericPopup.Item AsCheckable()
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Function AsCheckable As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable(System.Action{System.Boolean})
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable(System.Action{System.Boolean})
  id: AsCheckable(System.Action{System.Boolean})
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: AsCheckable(Action<Boolean>)
  nameWithType: GenericPopup.Item.AsCheckable(Action<Boolean>)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable(System.Action<System.Boolean>)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: AsCheckable
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 43
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public GenericPopup.Item AsCheckable(Action<bool> onCheckedChanged)
    parameters:
    - id: onCheckedChanged
      type: System.Action{System.Boolean}
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Function AsCheckable(onCheckedChanged As Action(Of Boolean)) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable*
  nameWithType.vb: GenericPopup.Item.AsCheckable(Action(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable(System.Action(Of System.Boolean))
  name.vb: AsCheckable(Action(Of Boolean))
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus(System.Boolean)
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus(System.Boolean)
  id: WithCheckedStatus(System.Boolean)
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: WithCheckedStatus(Boolean)
  nameWithType: GenericPopup.Item.WithCheckedStatus(Boolean)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus(System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: WithCheckedStatus
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 44
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public GenericPopup.Item WithCheckedStatus(bool isChecked)
    parameters:
    - id: isChecked
      type: System.Boolean
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Function WithCheckedStatus(isChecked As Boolean) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState(System.Boolean)
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState(System.Boolean)
  id: WithEnabledState(System.Boolean)
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: WithEnabledState(Boolean)
  nameWithType: GenericPopup.Item.WithEnabledState(Boolean)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState(System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: WithEnabledState
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 45
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public GenericPopup.Item WithEnabledState(bool isEnabled)
    parameters:
    - id: isEnabled
      type: System.Boolean
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Function WithEnabledState(isEnabled As Boolean) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked(System.Action)
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked(System.Action)
  id: WhenClicked(System.Action)
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: WhenClicked(Action)
  nameWithType: GenericPopup.Item.WhenClicked(Action)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked(System.Action)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: WhenClicked
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 46
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public GenericPopup.Item WhenClicked(Action action)
    parameters:
    - id: action
      type: System.Action
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Function WhenClicked(action As Action) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState(System.Boolean)
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState(System.Boolean)
  id: WithVisibleState(System.Boolean)
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: WithVisibleState(Boolean)
  nameWithType: GenericPopup.Item.WithVisibleState(Boolean)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState(System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: WithVisibleState
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 47
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public GenericPopup.Item WithVisibleState(bool isVisible)
    parameters:
    - id: isVisible
      type: System.Boolean
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Function WithVisibleState(isVisible As Boolean) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState(System.Boolean)
  commentId: M:AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState(System.Boolean)
  id: WithBoldState(System.Boolean)
  parent: AdvancedSceneManager.Editor.GenericPopup.Item
  langs:
  - csharp
  - vb
  name: WithBoldState(Boolean)
  nameWithType: GenericPopup.Item.WithBoldState(Boolean)
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState(System.Boolean)
  type: Method
  source:
    remote:
      path: Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
      branch: dev
      repo: https://github.com/Lazy-Solutions/Unity.AdvancedSceneManager.git
    id: WithBoldState
    path: ../../../Unity.AdvancedSceneManager/Unity projects/ASM-dev-2019/Assets/AdvancedSceneManager/System/Editor/Custom elements/GenericPopup.cs
    startLine: 48
  assemblies:
  - AdvancedSceneManager.Editor
  namespace: AdvancedSceneManager.Editor
  syntax:
    content: public GenericPopup.Item WithBoldState(bool isBold)
    parameters:
    - id: isBold
      type: System.Boolean
    return:
      type: AdvancedSceneManager.Editor.GenericPopup.Item
    content.vb: Public Function WithBoldState(isBold As Boolean) As GenericPopup.Item
  overload: AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AdvancedSceneManager.Editor
  commentId: N:AdvancedSceneManager.Editor
  name: AdvancedSceneManager.Editor
  nameWithType: AdvancedSceneManager.Editor
  fullName: AdvancedSceneManager.Editor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.Separator*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.Separator
  name: Separator
  nameWithType: GenericPopup.Item.Separator
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.Separator
- uid: AdvancedSceneManager.Editor.GenericPopup.Item
  commentId: T:AdvancedSceneManager.Editor.GenericPopup.Item
  parent: AdvancedSceneManager.Editor
  name: GenericPopup.Item
  nameWithType: GenericPopup.Item
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.name*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.name
  name: name
  nameWithType: GenericPopup.Item.name
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isChecked*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.isChecked
  name: isChecked
  nameWithType: GenericPopup.Item.isChecked
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isChecked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.onClick*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.onClick
  name: onClick
  nameWithType: GenericPopup.Item.onClick
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.onClick
- uid: System.Action{System.Boolean}
  commentId: T:System.Action{System.Boolean}
  parent: System
  definition: System.Action`1
  name: Action<Boolean>
  nameWithType: Action<Boolean>
  fullName: System.Action<System.Boolean>
  nameWithType.vb: Action(Of Boolean)
  fullName.vb: System.Action(Of System.Boolean)
  name.vb: Action(Of Boolean)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable
  name: isCheckable
  nameWithType: GenericPopup.Item.isCheckable
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isCheckable
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled
  name: isEnabled
  nameWithType: GenericPopup.Item.isEnabled
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isEnabled
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isVisible*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.isVisible
  name: isVisible
  nameWithType: GenericPopup.Item.isVisible
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isVisible
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isBold*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.isBold
  name: isBold
  nameWithType: GenericPopup.Item.isBold
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isBold
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator
  name: isSeparator
  nameWithType: GenericPopup.Item.isSeparator
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.isSeparator
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.Create*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.Create
  name: Create
  nameWithType: GenericPopup.Item.Create
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.Create
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable
  name: AsCheckable
  nameWithType: GenericPopup.Item.AsCheckable
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.AsCheckable
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus
  name: WithCheckedStatus
  nameWithType: GenericPopup.Item.WithCheckedStatus
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithCheckedStatus
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState
  name: WithEnabledState
  nameWithType: GenericPopup.Item.WithEnabledState
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithEnabledState
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked
  name: WhenClicked
  nameWithType: GenericPopup.Item.WhenClicked
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WhenClicked
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState
  name: WithVisibleState
  nameWithType: GenericPopup.Item.WithVisibleState
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithVisibleState
- uid: AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState*
  commentId: Overload:AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState
  name: WithBoldState
  nameWithType: GenericPopup.Item.WithBoldState
  fullName: AdvancedSceneManager.Editor.GenericPopup.Item.WithBoldState
